{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenue sur le site Info-Maths du lyc\u00e9e de Cornouaille","text":"<p>Site du lyc\u00e9e de Cornouaille (acad\u00e9mie de Rennes) pour l\u2019enseignement de la sp\u00e9cialit\u00e9 NSI et de Math\u00e9matiques.</p> <p>Acc\u00e8s direct:</p> <p>NSI en premi\u00e8re</p> <p>NSI en terminale</p> <p>Sp\u00e9 math\u00e9matiques en terminale</p> <p>Ressources diverses</p> <p>\u00c0 savoir</p> <p> l'informatique c'est sympa </p> <p> </p> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <p>Les maths c'est sympa aussi </p> <p>En 1735, Leonhard Euler r\u00e9sout le probl\u00e8me de B\u00e2le en \u00e9tablissant la formule suivante :</p> \\[\\sum\\limits_{k\\in\\mathbb N^*} \\frac 1 {k^2} = \\frac {\\pi^2}6\\] <p>Cependant, il ne d\u00e9montrera rigoureusement son r\u00e9sultat qu\u2019en 1741.</p> Ce site et tout son contenu sont sous la licence This work is licensed under a \u00a0Creative Commons Attribution 4.0 International License"},{"location":"1_premiere_nsi/","title":"Premi\u00e8re NSI","text":"<p>Cours de sp\u00e9cialit\u00e9 Num\u00e9rique et Sciences Informatiques en classe de premi\u00e8re au lyc\u00e9e de Cornouaille \u00e0 Quimper</p>"},{"location":"1_premiere_nsi/#logiciels-a-installer","title":"Logiciels \u00e0 installer","text":"<ul> <li> <p>Python Anaconda: https://www.anaconda.com/products/individual#Downloads</p> </li> <li> <p>Visual Studio Code: https://code.visualstudio.com/Download</p> </li> </ul>"},{"location":"1_premiere_nsi/#programme-officiel","title":"Programme officiel","text":"<p>https://cache.media.education.gouv.fr/file/SP1-MEN-22-1-2019/26/8/spe633_annexe_1063268.pdf</p>"},{"location":"1_premiere_nsi/#liens-utiles","title":"Liens utiles","text":"<p>Python Tutor</p> <p>Programmiz</p> <p>http://nsi4noobs.fr/</p> <p>Youtube - David Latouche - 1\u00e8re NSI</p>"},{"location":"1_premiere_nsi/1_bases_de_python/1_principes/","title":"Principes de base de Python","text":""},{"location":"1_premiere_nsi/1_bases_de_python/1_principes/#introduction","title":"Introduction","text":"<p>Le langage de programmation Python poss\u00e8de un large \u00e9ventail de constructions syntaxiques, de fonctions de biblioth\u00e8que standard et de fonctionnalit\u00e9s d'environnement de d\u00e9veloppement interactif. Heureusement, vous pouvez ignorer la plupart de cela ; vous avez juste besoin d'en apprendre assez pour \u00e9crire quelques petits programmes pratiques.</p> <p>Cependant, vous devrez apprendre quelques concepts de programmation de base avant de pouvoir faire quoi que ce soit.</p> <p>Ce chapitre contient quelques exemples qui vous encouragent \u00e0 taper dans le shell interactif, ce qui vous permet d'ex\u00e9cuter des instructions Python une \u00e0 la fois et vous montre les r\u00e9sultats instantan\u00e9ment. L'utilisation du shell interactif est id\u00e9al pour apprendre ce que font les instructions de base de Python, alors essayez-le au fur et \u00e0 mesure. Vous vous souviendrez des choses que vous faites beaucoup mieux que les choses que vous vous ne faites que lire.</p>"},{"location":"1_premiere_nsi/1_bases_de_python/1_principes/#saisie-dexpressions-dans-le-shell-interactif","title":"Saisie d'expressions dans le shell interactif","text":"<p>Vous pouvez utiliser un shell interactif en ligne, par exemple le bac \u00e0 sable Python.</p> <p>Lien direct: basthon</p> <p>Nous pouvons aussi utiliser programmiz: programmiz</p> <p>Cet \u00e9diteur en ligne se compose d'un \u00e9diteur de script dans la partie et gauche et de la console (shell interactif) dans la partie droite.</p> <p>Essayez:</p> <pre><code>&gt;&gt;&gt; 2 + 2\n4\n</code></pre> <p>En Python, <code>2 + 2</code> est appel\u00e9 une expression, qui est le type d'instruction de programmation le plus basique dans le langage.</p> <p>Les expressions se composent de valeurs (telles que 2) et d'op\u00e9rateurs (tels que +), et elles peuvent toujours \u00e9valuer (c'est-\u00e0-dire r\u00e9duire) jusqu'\u00e0 une seule valeur.</p> <p>Dans l'exemple pr\u00e9c\u00e9dent, <code>2 + 2</code> est \u00e9valu\u00e9 jusqu'\u00e0 une seule valeur, 4. Une valeur unique sans op\u00e9rateur est \u00e9galement consid\u00e9r\u00e9e comme une expression, bien qu'elle ne s'\u00e9value qu'\u00e0 elle-m\u00eame, comme illustr\u00e9 ici :</p> <pre><code>&gt;&gt;&gt; 2\n2\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/1_principes/#operations-sur-les-nombres","title":"Op\u00e9rations sur les nombres","text":"<p>Diff\u00e9rentes op\u00e9rations sur les nombres</p> <ul> <li><code>+</code>: Addition: <code>2 + 3</code></li> <li><code>-</code>: Soustraction: <code>2 - 3</code></li> <li><code>*</code>: Multiplication: <code>2 * 3</code></li> <li><code>/</code>: Division: <code>5 / 2</code>(qui donne 2.5)</li> <li><code>**</code>: Exposant: <code>2**3</code>qui donne 8 (\\(2^3\\))</li> <li><code>%</code>: Modulo: <code>17 % 5</code> qui donne 2 (reste de la division euclidienne de 17 par 5)</li> <li><code>//</code>: Quotient: <code>17 // 5</code>qui donne 3 (quotient de la division euclidienne de 17 par 5)</li> </ul> <p>Exemples</p> <pre><code>&gt;&gt;&gt; 2 + 3 * 6\n20\n&gt;&gt;&gt; (2 + 3) * 6\n30\n&gt;&gt;&gt; 48565878 * 578453\n28093077826734\n&gt;&gt;&gt; 2**8\n256\n&gt;&gt;&gt; 23 / 7\n3.2857142857142856\n&gt;&gt;&gt; 23 // 7\n3\n&gt;&gt;&gt; 23 % 7\n2\n&gt;&gt;&gt; 2 + 2\n4\n&gt;&gt;&gt; (5 - 1) * ((7 + 1) / (3 - 1))\n16.0\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/1_principes/#les-erreurs","title":"Les erreurs","text":"<p>Les programmes se bloquent s'ils contiennent du code que l'ordinateur ne peut pas comprendre, ce qui fera en sorte que Python affiche un message d'erreur. Cependant, un message d'erreur ne cassera pas votre ordinateur, alors n'ayez pas peur de faire des erreurs. Un plantage signifie simplement que le programme a cess\u00e9 de fonctionner de mani\u00e8re inattendue.</p> <p>Si vous voulez en savoir plus sur un message d'erreur, vous pouvez rechercher le texte exact du message en ligne pour en savoir plus sur cette erreur sp\u00e9cifique.</p> <p>Exemples</p> <pre><code>&gt;&gt;&gt; 5 +\nFile \"&lt;stdin&gt;\", line 1\n5 +\n^\nSyntaxError: invalid syntax\n&gt;&gt;&gt; 42 + 5 + * 2\nFile \"&lt;stdin&gt;\", line 1\n42 + 5 + * 2\n^\nSyntaxError: invalid syntax\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/1_principes/#les-types-de-donnees-de-base","title":"Les types de donn\u00e9es de base","text":"<p>Il existe une multitude de types de donn\u00e9es en Python.</p> <p>Conna\u00eetre le type d'une donn\u00e9e</p> <p>En Python, c'est l'instruction <code>type</code>qui permet d'obtenir le type d'une donn\u00e9e.</p> <p>Exemples:</p> <pre><code>&gt;&gt;&gt; type(2)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; type(3.7)\n&lt;class 'float'&gt;\n</code></pre> <p>int : Les entier relatifs</p> <p><code>int</code>: de l'anglais integer, correspond aux entiers relatifs.</p> <p>Exemples: 3, 12, \\(-7\\), \\(-24\\), ...</p> <p>En math\u00e9matiques, c'est l'ensemble \\(\\mathbb{Z}\\).</p> <p>float: les nombres \u00e0 virgule flottante</p> <p><code>float</code>: de l'anglais floating-point number, correspond \u00e0 mode de repr\u00e9sentation des nombres r\u00e9els (en fait ce sont des nombres d\u00e9cimaux comme la partie d\u00e9cimale est finie...)</p> <p>Exemples: 3.14, 0.001, -4.12</p> <p>En math\u00e9matiques, c'est l'ensemble des d\u00e9cimaux \\(\\mathbb{D}\\).</p> <p>Mais parfois en informatique, on dit que ce sont des r\u00e9els (alors que non ...)</p> <p>str: les cha\u00eenes de caract\u00e8res</p> <p><code>str</code>: de l'anglais string of characters, correspond \u00e0 une cha\u00eene de caract\u00e8res.</p> <p>Exemples: \"Bonjour\", \"23\", \"Le ciel est bleu\", ...</p> <p>Voir: Les cha\u00eenes</p> <p>bool: les bool\u00e9ens</p> <p><code>bool</code>: de l'anglais boolean value (valeur bool\u00e9enne), correspond au r\u00e9sultat d'un test.</p> <p>Une variable de ce type prend deux valeurs: <code>True</code>(vrai) ou <code>False</code>(faux).</p> <p>Voir: Les bool\u00e9ens</p>"},{"location":"1_premiere_nsi/1_bases_de_python/2_variables/","title":"Stockage dans des variables en Python","text":"<p>Une variable est comme une bo\u00eete dans la m\u00e9moire de l'ordinateur o\u00f9 vous pouvez stocker une seule valeur. Si vous souhaitez utiliser le r\u00e9sultat d'une expression \u00e9valu\u00e9e ult\u00e9rieurement dans votre programme, vous pouvez l'enregistrer dans une variable.</p>"},{"location":"1_premiere_nsi/1_bases_de_python/2_variables/#declarations-daffectation","title":"D\u00e9clarations d'affectation","text":"<p>Vous stockerez des valeurs dans des variables avec une instruction d'affectation .</p> <p>Instruction d'affectation</p> <p>Une instruction d'affectation se compose d'un nom de variable, d'un signe \u00e9gal (appel\u00e9 op\u00e9rateur d'affectation) et de la valeur \u00e0 stocker.</p> <p>Exemple:</p> <pre><code>&gt;&gt;&gt; spam = 40\n</code></pre> <p>\u00ab La variable <code>spam</code> contient maintenant la valeur enti\u00e8re 40 \u00bb.</p> <p>Une variable est initialis\u00e9e (ou cr\u00e9\u00e9e) la premi\u00e8re fois qu'une valeur y est stock\u00e9e.</p> <p>Apr\u00e8s cela, vous pouvez l'utiliser dans des expressions avec d'autres variables et valeurs.</p> <p>Lorsqu'une variable se voit attribuer une nouvelle valeur, l'ancienne valeur est oubli\u00e9e. C'est ce qu'on appelle \u00e9craser la variable.</p> <p>Exemples</p> <pre><code>&gt;&gt;&gt; spam = 40\n&gt;&gt;&gt; spam\n40\n&gt;&gt;&gt; eggs = 2\n&gt;&gt;&gt; spam + eggs\n42\n&gt;&gt;&gt; spam + eggs + spam\n82\n&gt;&gt;&gt; spam = spam + 2\n&gt;&gt;&gt; spam\n42\n</code></pre> <pre><code>&gt;&gt;&gt; spam = 'Hello'\n&gt;&gt;&gt; spam\n'Hello'\n&gt;&gt;&gt; spam = 'Goodbye'\n&gt;&gt;&gt; spam\n'Goodbye'\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/2_variables/#noms-des-variables","title":"Noms des variables","text":"<p>Noms de variables autoris\u00e9s</p> <p>Vous pouvez nommer n'importe quelle variable tant qu'elle respecte les trois r\u00e8gles suivantes :</p> <ul> <li>Il ne peut s'agir que d'un seul \"mot\".</li> <li>Il ne peut utiliser que des lettres, des chiffres et le caract\u00e8re de soulignement (underscore: <code>_</code>).</li> <li>Il ne peut pas commencer par un chiffre.</li> </ul> <p>En particulier, les lettres accentu\u00e9es (<code>\u00e9</code>, <code>\u00e0</code>, ..) ne sont pas autoris\u00e9es</p> <p>Exemples</p> <p>Noms de variables valides:</p> <pre><code>prix\nprixAchat\nprix_achat\n_prix\nPRIX\nprix2\n</code></pre> <p>Noms de variables invalides:</p> <pre><code>prix-achat (les traits d'union ne sont pas autoris\u00e9s)\nprix achat (les espaces ne sont pas autoris\u00e9s)\n2prix (ne peut pas commencer par un chiffre)\ntotal_$somme (les caract\u00e8res sp\u00e9ciaux comme $ ne sont pas autoris\u00e9s)\nr\u00e9duction (les caract\u00e8res sp\u00e9ciaux comme \u00e9 ne sont pas autoris\u00e9s)\n</code></pre> <p>Conventions de nommage</p> <p>Un bon nom de variable d\u00e9crit les donn\u00e9es qu'il contient.</p> <p>Vous devez utiliser des noms de variables explicites, et parfois cela peut conduire \u00e0 utiliser plusieurs \"mots\".</p> <p>Par exemple si nous voulons stocker la valeur d'un prix apr\u00e8s r\u00e9duction dans une variable:</p> <ul> <li>camelCase: <code>prixApresReduction</code></li> <li>snake_case: <code>prix_apres_reduction</code></li> <li>PascalCase: <code>PrixApresReduction</code></li> </ul> <p>La documentation de Python recommande d'utiliser le snake_case.</p>"},{"location":"1_premiere_nsi/1_bases_de_python/2_variables/#lincrementation-dune-variable","title":"L'incr\u00e9mentation d'une variable.","text":"<p>\u00abIncr\u00e9menter\u00bb une variable signifie l'augmenter.</p> <p>Imaginons une variable appel\u00e9e <code>compteur</code>. Au d\u00e9marrage de notre programme, elle est initialis\u00e9e \u00e0 la valeur 0.</p> <pre><code>&gt;&gt;&gt; compteur = 0\n</code></pre> <p>Consid\u00e9rons qu'\u00e0 un moment du programme, cette variable doit \u00eatre modifi\u00e9e, par exemple en lui ajoutant 1.</p> <p>En Python, cela s'\u00e9crira :</p> <pre><code>&gt;&gt;&gt; compteur = compteur + 1\n</code></pre> <ol> <li>On \u00e9value la partie droite de l'\u00e9galit\u00e9, donc l'expression <code>compteur + 1</code>.</li> <li>On va donc chercher le contenu de la variable <code>compteur</code>. Si celle-ci n'existe pas, un message d'erreur est renvoy\u00e9.</li> <li>On additionne 1 au contenu de la variable <code>compteur</code>.</li> <li>On \u00e9crase le contenu actuel de la variable <code>compteur</code> avec la valeur obtenue au 3.</li> </ol> <p>\u00c0 la fin de ces op\u00e9rations, la variable <code>compteur</code> a bien augment\u00e9 de 1.</p> <p>Cette proc\u00e9dure d'incr\u00e9mentation est tr\u00e8s tr\u00e8s classique, il faut la ma\u00eetriser parfaitement !</p> <p>Syntaxe classique et syntaxe Pythonesque</p> <p>L'incr\u00e9mentation d'une variable <code>compteur</code> s'\u00e9crira donc en Python :</p> <p><code>&gt;&gt;&gt; compteur = compteur + 1</code></p> <p>Mais il existe aussi une syntaxe particuli\u00e8re, un peu plus courte :</p> <p><pre><code>&gt;&gt;&gt; compteur += 1\n</code></pre> C'est bien de conna\u00eetre cette syntaxe, mais son utilisation n'est en rien obligatoire et peut avoir un effet n\u00e9faste, celui d'oublier r\u00e9ellement ce qu'il se passe derri\u00e8re.</p> <p>Exemples divers</p> <pre><code>&gt;&gt;&gt; nombre = 2\n&gt;&gt;&gt; nombre += 3\n&gt;&gt;&gt; nombre\n5\n</code></pre> <pre><code>&gt;&gt;&gt; nombre = 2\n&gt;&gt;&gt; nombre *= 5\n&gt;&gt;&gt; nombre\n10\n</code></pre> <pre><code>&gt;&gt;&gt; nombre = 10\n&gt;&gt;&gt; nombre -= 3\n&gt;&gt;&gt; nombre\n7\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/2_variables/#lechange-de-variables","title":"L'\u00e9change de variables","text":"<p>Apr\u00e8s l'incr\u00e9mentation, une autre technique de base reviendra fr\u00e9quemment dans nos codes : l'\u00e9change de variables.</p> <p>Imaginons les variables suivantes :</p> <pre><code>&gt;&gt;&gt; a = 3\n&gt;&gt;&gt; b = 5\n</code></pre> <p>Le but est d'\u00e9changer les valeurs de <code>a</code> et de <code>b</code>.</p> <p>\u25b8 M\u00e9thode na\u00efve</p> <pre><code>&gt;&gt;&gt; a = b\n&gt;&gt;&gt; b = a\n</code></pre> <p>Que valent <code>a</code> et <code>b</code> maintenant ?</p> <p>Malheureusement :</p> <pre><code>&gt;&gt;&gt; a\n5\n&gt;&gt;&gt; b\n5\n&gt;\n</code></pre> <p>La variable <code>a</code> a \u00e9t\u00e9 \u00e9cras\u00e9e d\u00e8s qu'on lui a donn\u00e9 la valeur de la variable <code>b</code>.</p> <p>Comment la pr\u00e9server ?</p> <p>Nous allons utiliser une variable temporaire (on parle aussi de variable tampon) pour conserver la m\u00e9moire de la valeur de <code>a</code> (par exemple) avant que celle-ci ne se fasse \u00e9craser :</p> <pre><code>&gt;&gt;&gt; a = 3\n&gt;&gt;&gt; b = 5\n&gt;&gt;&gt; temp = a\n&gt;&gt;&gt; a = b\n&gt;&gt;&gt; b = temp\n</code></pre> <p>Vous pouvez v\u00e9rifier maintenant que les valeurs de <code>a</code> et de <code>b</code> ont bien \u00e9t\u00e9 \u00e9chang\u00e9es.</p> <p>Syntaxe classique et syntaxe Pythonesque</p> <p>L'\u00e9change de deux variables <code>a</code> et de <code>b</code> s'\u00e9crit donc :</p> <pre><code>&gt;&gt;&gt; temp = a\n&gt;&gt;&gt; a = b\n&gt;&gt;&gt; b = temp `\n</code></pre> <p>Mais il existe aussi une syntaxe particuli\u00e8re \u00e0 Python, bien plus courte :</p> <pre><code>&gt;&gt;&gt; a, b = b, a\n</code></pre> <p>Cette syntaxe nous dispense de cr\u00e9er nous-m\u00eame une troisi\u00e8me variable. Mais pas de miracle : en interne, Python cr\u00e9e lui-m\u00eame cette variable temporaire. La simultan\u00e9it\u00e9 n'existe pas en informatique.</p>"},{"location":"1_premiere_nsi/1_bases_de_python/3_1_booleens/","title":"Les bool\u00e9ens","text":""},{"location":"1_premiere_nsi/1_bases_de_python/3_1_booleens/#valeurs-booleennes","title":"Valeurs bool\u00e9ennes","text":"<p>Alors que les types de donn\u00e9es entier, virgule flottante et cha\u00eene ont un nombre illimit\u00e9 de valeurs possibles, le type de donn\u00e9es bool\u00e9en n'a que deux valeurs : <code>True</code> et <code>False</code>. (Boolean est en majuscule parce que le type de donn\u00e9es porte le nom du math\u00e9maticien George Boole.)</p> <p>Lorsqu'il est tap\u00e9 en tant que code Python, les valeurs bool\u00e9ennes <code>True</code> et <code>False</code> n'ont pas les guillemets que vous placez autour des cha\u00eenes, et ils commencent toujours par un T ou F majuscule , avec le reste du mot en minuscule.</p> <p>Exemples</p> <pre><code>&gt;&gt;&gt; spam = True\n&gt;&gt;&gt; spam\nTrue\n&gt;&gt;&gt; true\nTraceback (most recent call last):\nFile \"&lt;pyshell#2&gt;\", line 1, in &lt;module&gt;\ntrue\nNameError: name 'true' is not defined\n&gt;&gt;&gt; True = 2 + 2\nSyntaxError: assignment to keyword\n</code></pre> <p>Comme toute autre valeur, les valeurs bool\u00e9ennes sont utilis\u00e9es dans des expressions et peuvent \u00eatre stock\u00e9es dans des variables . Si vous n'utilisez pas la bonne casse ou si vous essayez d'utiliser <code>True</code> et <code>False</code> pour les noms de variables , Python vous donnera un message d'erreur.</p>"},{"location":"1_premiere_nsi/1_bases_de_python/3_1_booleens/#operateurs-de-comparaison","title":"Op\u00e9rateurs de comparaison","text":"<p>Les op\u00e9rateurs de comparaison comparent deux valeurs et \u00e9valuent jusqu'\u00e0 une seule valeur bool\u00e9enne.</p> <p>Op\u00e9rateurs de comparaison</p> <ul> <li><code>==</code> \u00c9gal \u00e0</li> <li><code>!=</code> Pas \u00e9gal \u00e0 (diff\u00e9rent de)</li> <li><code>&lt;</code> Strictement inf\u00e9rieur \u00e0</li> <li><code>&gt;</code> Strictement sup\u00e9rieur \u00e0</li> <li><code>&lt;=</code> Inf\u00e9rieur ou \u00e9gal \u00e0</li> <li><code>&gt;=</code> Sup\u00e9rieur ou \u00e9gal \u00e0</li> </ul> <p>Ces op\u00e9rateurs \u00e9valuent <code>True</code> ou <code>False</code> d\u00e9pendent des valeurs que vous leur donnez.</p> <p>Exemples avec <code>==</code> et<code>!=</code></p> <pre><code>&gt;&gt;&gt; 42 == 42\nTrue\n&gt;&gt;&gt; 42 == 99\nFalse\n&gt;&gt;&gt; 2 != 3\nTrue\n&gt;&gt;&gt; 2 != 2\nFalse\n</code></pre> <p>Comme vous pouvez vous y attendre, <code>==</code>(\u00e9gal \u00e0) est \u00e9valu\u00e9 <code>True</code>lorsque les valeurs des deux c\u00f4t\u00e9s sont identiques et <code>!=</code>(diff\u00e9rent de) est \u00e9valu\u00e9 <code>True</code> lorsque les deux valeurs sont diff\u00e9rentes.</p> <p>Les op\u00e9rateurs <code>==</code>et <code>!=</code> peuvent en fait fonctionner avec des valeurs de n'importe quel type de donn\u00e9es.</p> <p>Exemples avec diff\u00e9rents types de donn\u00e9es</p> <pre><code>&gt;&gt;&gt; 'hello' == 'hello'\nTrue\n&gt;&gt;&gt; 'hello' == 'Hello'\nFalse\n&gt;&gt;&gt; 'dog' != 'cat'\nTrue\n&gt;&gt;&gt; True == True\nTrue\n&gt;&gt;&gt; True != False\nTrue\n&gt;&gt;&gt; 42 == 42.0\nTrue\n&gt;&gt;&gt; 42 == '42'\nFalse\n</code></pre> <p>Notez qu'une valeur enti\u00e8re ou \u00e0 virgule flottante sera toujours diff\u00e9rente d'une valeur de cha\u00eene.</p> <p>L'expression <code>42 == '42'</code> prend la valeur <code>False</code>car Python consid\u00e8re que l'entier 42 est diff\u00e9rent de la cha\u00eene '42'.</p> <p>Exemples avec &lt;, &gt;, &lt;=et &gt;=</p> <pre><code>&gt;&gt;&gt; 42 &lt; 100\nTrue\n&gt;&gt;&gt; 42 &gt; 100\nFalse\n&gt;&gt;&gt; 42 &lt; 42\nFalse\n&gt;&gt;&gt; prix = 42\n&gt;&gt;&gt; prix &lt;= 42\nTrue\n&gt;&gt;&gt; mon_age = 29\n&gt;&gt;&gt; mon_age &gt;= 10\nTrue\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/3_1_booleens/#operateurs-booleens","title":"Op\u00e9rateurs bool\u00e9ens","text":"<p>Les trois op\u00e9rateurs bool\u00e9ens ( <code>and</code>, <code>or</code> et <code>not</code>) sont utilis\u00e9s pour comparer les valeurs bool\u00e9ennes. Comme les op\u00e9rateurs de comparaison, ils \u00e9valuent ces expressions jusqu'\u00e0 une valeur bool\u00e9enne. Explorons ces op\u00e9rateurs en d\u00e9tail</p>"},{"location":"1_premiere_nsi/1_bases_de_python/3_1_booleens/#operateurs-booleens-binaires","title":"Op\u00e9rateurs bool\u00e9ens binaires","text":"<p>Les op\u00e9rateurs <code>and</code> et <code>or</code> prennent toujours deux valeurs bool\u00e9ennes (ou expressions), ils sont donc consid\u00e9r\u00e9s comme des op\u00e9rateurs binaires .</p> <p>Op\u00e9rateur <code>and</code></p> <ul> <li>L' op\u00e9rateur <code>and</code> \u00e9value une expression \u00e0 <code>True</code> si les deux valeurs bool\u00e9ennes sont <code>True</code>; sinon, il est \u00e9valu\u00e9 \u00e0 <code>False</code>. Entrez quelques expressions en utilisant <code>and</code> dans le shell interactif pour le voir en action.</li> </ul> <p>Exemples fondamentaux avec <code>and</code></p> <pre><code>&gt;&gt;&gt; True and True\nTrue\n&gt;&gt;&gt; True and False\nFalse\n&gt;&gt;&gt; False and True\nFalse\n&gt;&gt;&gt; False and False\nFalse\n</code></pre> <p>Op\u00e9rateur <code>or</code></p> <p>L' op\u00e9rateur <code>or</code> \u00e9value une expression \u00e0 <code>True</code>si l'une des deux valeurs bool\u00e9ennes est <code>True</code>. Si les deux sont <code>False</code>, il est \u00e9valu\u00e9 \u00e0 <code>False</code>.</p> <p>Exemples fondamentaux avec <code>or</code></p> <pre><code>&gt;&gt;&gt; True or True\nTrue\n&gt;&gt;&gt; True or False\nTrue\n&gt;&gt;&gt; False or True\nTrue\n&gt;&gt;&gt; False or False\nFalse\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/3_1_booleens/#loperateur-not","title":"L'op\u00e9rateur <code>not</code>","text":"<p>Contrairement \u00e0 <code>and</code> et <code>or</code>, l' op\u00e9rateur <code>not</code> op\u00e8re sur une seule valeur bool\u00e9enne (ou expression).</p> <p>Op\u00e9rateur <code>not</code></p> <p>L' op\u00e9rateur <code>not</code> \u00e9value simplement la valeur bool\u00e9enne oppos\u00e9e.</p> <pre><code>&gt;&gt;&gt; not True\nFalse\n&gt;&gt;&gt; not False\nTrue\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/3_1_booleens/#melange-doperateurs-booleens-et-de-comparaison","title":"M\u00e9lange d'op\u00e9rateurs bool\u00e9ens et de comparaison","text":"<p>\u00c9tant donn\u00e9 que les op\u00e9rateurs de comparaison \u00e9valuent des valeurs bool\u00e9ennes, vous pouvez les utiliser dans des expressions avec les op\u00e9rateurs bool\u00e9ens.</p> <p>Rappelez-vous que les op\u00e9rateurs <code>and</code>, <code>or</code>et <code>not</code> sont appel\u00e9s op\u00e9rateurs bool\u00e9ens car ils op\u00e8rent toujours sur les valeurs bool\u00e9ennes <code>True</code> et <code>False</code>.</p> <p>Bien que les expressions comme <code>4 &lt; 5</code> ne soient pas des valeurs bool\u00e9ennes, ce sont des expressions qui \u00e9valuent jusqu'aux valeurs bool\u00e9ennes.</p> <p>Exemples</p> <pre><code>&gt;&gt;&gt; (4 &lt; 5) and (5 &lt; 6)\nTrue\n&gt;&gt;&gt; (4 &lt; 5) and (9 &lt; 6)\nFalse\n&gt;&gt;&gt; (1 == 2) or (2 == 2)\nTrue\n</code></pre> <p>L'ordinateur \u00e9valuera d'abord l'expression de gauche, puis il \u00e9valuera l'expression de droite. Lorsqu'il conna\u00eet la valeur bool\u00e9enne de chacun, il \u00e9valuera alors l'expression enti\u00e8re jusqu'\u00e0 une valeur bool\u00e9enne.</p> <p>Vous pouvez \u00e9galement utiliser plusieurs op\u00e9rateurs bool\u00e9ens dans une expression, ainsi que les op\u00e9rateurs de comparaison.</p> <pre><code>&gt;&gt;&gt; 2 + 2 == 4 and not 2 + 2 == 5 and 2 * 2 == 2 + 2\nTrue\n</code></pre> <p>Ordre des op\u00e9rations</p> <p>Les op\u00e9rateurs bool\u00e9ens ont un ordre d'op\u00e9rations tout comme les op\u00e9rateurs math\u00e9matiques.</p> <ol> <li>Evaluation de tous les op\u00e9rateurs math\u00e9matiques et de comparaison</li> <li><code>not</code></li> <li><code>and</code></li> <li><code>or</code>.</li> </ol>"},{"location":"1_premiere_nsi/1_bases_de_python/3_1_booleens/#cas-particulier-linclusion-avec-in","title":"Cas particulier: l'inclusion avec <code>in</code>","text":"<p>Exemples</p> <pre><code>&gt;&gt;&gt; \"y\" in \"Python\"\nTrue\n&gt;&gt;&gt; \"z\" in \"Python\"\nFalse\n&gt;&gt;&gt; \"th\" in \"Python\"\nTrue\n&gt;&gt;&gt; \"p\" in \"Python\"\nFalse\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/3_string/","title":"Cha\u00eenes de caract\u00e8res en Python","text":""},{"location":"1_premiere_nsi/1_bases_de_python/3_string/#ecriture-des-chaines-de-caracteres","title":"Ecriture des cha\u00eenes de caract\u00e8res","text":"<p>Les <code>single quote</code> et <code>double quote</code></p> <ul> <li> <p>single quote: c'est le caract\u00e8re <code>'</code>(apostrophe en fran\u00e7ais)</p> </li> <li> <p>double quote: c'est le caract\u00e8re <code>\"</code>(guillemet en fran\u00e7ais)</p> </li> </ul> <p>Python comprend les deux \u00e9critures suivantes:</p> <pre><code>mot = \"Bonjour\"\nmot = 'Bonjour'\n</code></pre> <p>Conventions</p> <p>Pour les cha\u00eenes de caract\u00e8res simples, on peut utiliser <code>'</code>ou <code>\"</code>.</p> <p>Le probl\u00e8me se pose quand on utilise des apostrophes dans une phrase.</p> <p>Par exemple:</p> <pre><code>&gt;&gt;&gt; phrase = 'il s'est r\u00e9veill\u00e9 \u00e0 8h'\nphrase = 'il s'est r\u00e9veill\u00e9 \u00e0 8h'\n^\nSyntaxError: invalid syntax\n</code></pre> <p>Par contre en utilisant des double quote, le probl\u00e8me ne se pose plus:</p> <pre><code>&gt;&gt;&gt; phrase = \"il s'est r\u00e9veill\u00e9 \u00e0 8h\"\n</code></pre> <p>Nous utiliseront de pr\u00e9f\u00e9rence les double quote <code>\"</code> pour \u00e9crire les cha\u00eenes de carac\u00e8res.</p>"},{"location":"1_premiere_nsi/1_bases_de_python/3_string/#concatenation-et-replication-de-chaines","title":"Concat\u00e9nation et r\u00e9plication de cha\u00eenes","text":"<p>La signification d'un op\u00e9rateur peut changer en fonction des types de donn\u00e9es des valeurs \u00e0 c\u00f4t\u00e9 de lui. Par exemple, <code>+</code>est l'op\u00e9rateur d'addition lorsqu'il op\u00e8re sur deux nombres entiers ou des valeurs \u00e0 virgule flottante. Cependant, lorsqu'il est utilis\u00e9 sur deux valeurs de cha\u00eene, il joint les cha\u00eenes en tant qu'op\u00e9rateur de concat\u00e9nation de cha\u00eenes.</p> <p>Concat\u00e9nation de cha\u00eenes de caract\u00e8res</p> <p>Lorsque l'op\u00e9rateur <code>+</code> est utilis\u00e9 sur deux valeurs de cha\u00eene, il joint les cha\u00eenes en tant qu'op\u00e9rateur de concat\u00e9nation de cha\u00eenes.</p> <p>Exemples:</p> <pre><code>&gt;&gt;&gt; \"Alice\" + \"Bob\"\n'AliceBob'\n&gt;&gt;&gt; \"1\"+ \"2\"\n'12'\n</code></pre> <p>L'expression est \u00e9valu\u00e9e jusqu'\u00e0 une seule nouvelle valeur de cha\u00eene qui combine le texte des deux cha\u00eenes. Cependant, si vous essayez d'utiliser l' op\u00e9rateur <code>+</code>sur une cha\u00eene et une valeur enti\u00e8re, Python ne saura pas comment g\u00e9rer cela et affichera un message d'erreur.</p> <pre><code>&gt;&gt;&gt; \"Alice\" + 42\nTraceback (most recent call last):\nFile \"&lt;pyshell#26&gt;\", line 1, in &lt;module&gt;\n'Alice' + 42\nTypeError: Can't convert 'int' object to str implicitly\n</code></pre> <p>Le message d'erreur <code>Can't convert 'int' object to str implicitly</code>signifie que Python pensait que vous essayiez de concat\u00e9ner un entier \u00e0 la cha\u00eene 'Alice'. Votre code devra convertir explicitement l'entier en cha\u00eene, car Python ne peut pas le faire automatiquement.</p> <p>R\u00e9plication de cha\u00eenes</p> <p>L' op\u00e9rateur <code>*</code> est utilis\u00e9 pour la multiplication lorsqu'il op\u00e8re sur deux valeurs enti\u00e8res ou \u00e0 virgule flottante. Mais lorsque l' op\u00e9rateur <code>*</code>est utilis\u00e9 sur une valeur de cha\u00eene et une valeur enti\u00e8re, il devient l' op\u00e9rateur de r\u00e9plication de cha\u00eene .</p> <p>Exemple:</p> <pre><code>&gt;&gt;&gt; \"Alice\" * 5\n'AliceAliceAliceAliceAlice'\n</code></pre> <p>L'expression est \u00e9valu\u00e9e jusqu'\u00e0 une valeur de cha\u00eene unique qui r\u00e9p\u00e8te l'original un nombre de fois \u00e9gal \u00e0 la valeur enti\u00e8re. La r\u00e9plication de cha\u00eenes est une astuce utile, mais elle n'est pas utilis\u00e9e aussi souvent que la concat\u00e9nation de cha\u00eenes.</p> <p>L' op\u00e9rateur <code>*</code>peut \u00eatre utilis\u00e9 avec seulement deux valeurs num\u00e9riques (pour la multiplication) ou une valeur de cha\u00eene et une valeur enti\u00e8re (pour la r\u00e9plication de cha\u00eene). Sinon, Python affichera simplement un message d'erreur.</p> <pre><code>&gt;&gt;&gt; \"Alice\" * \"Bob\"\nTraceback (most recent call last):\nFile \"&lt;pyshell#32&gt;\", line 1, in &lt;module&gt;\n'Alice' * 'Bob'\nTypeError: can't multiply sequence by non-int of type 'str'\n&gt;&gt;&gt; \"Alice\" * 5.0\nTraceback (most recent call last):\nFile \"&lt;pyshell#33&gt;\", line 1, in &lt;module&gt;\n'Alice' * 5.0\nTypeError: can't multiply sequence by non-int of type 'float'\n</code></pre> <p>Il est logique que Python ne comprenne pas ces expressions : vous ne pouvez pas multiplier deux mots et il est difficile de r\u00e9pliquer une cha\u00eene arbitraire un nombre fractionnaire de fois.</p>"},{"location":"1_premiere_nsi/1_bases_de_python/3_string/#caractere-speciaux","title":"Caract\u00e8re sp\u00e9ciaux","text":"<p>Le retour \u00e0 la ligne <code>\\n</code></p> <p>Pour effectuer un retour \u00e0 la ligne, il faut utiliser le caract\u00e8re <code>\\n</code>.</p> <pre><code>&gt;&gt;&gt; print(\"Bonjour\\ntout\\nle monde !\")\nBonjour\ntout\nle monde !\n</code></pre> <p>La tabulation <code>\\t</code></p> <p>Pour effectuer une tabulation il faut utiliser le caract\u00e8re <code>t</code>.</p> <pre><code>&gt;&gt;&gt; print(\"Bonjour\\t tout\\tle monde !\")\nBonjour  tout   le monde !\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/3_string/#le-formatage","title":"Le formatage","text":"<p>Le formatage des cha\u00eenes de caract\u00e8res permet d'utiliser des variables ou des expressions.</p> <p>Exemples:</p> <pre><code>&gt;&gt;&gt; age = 27\n&gt;&gt;&gt; print(f\"Cette personne est ag\u00e9e de {age} ans.\")\nCette personne est ag\u00e9e de 27 ans.\n</code></pre> <pre><code>&gt;&gt;&gt; x = 3\n&gt;&gt;&gt; y = 4\n&gt;&gt;&gt; print(f\"Si x={x} et y={y}, alors x+y={x+y}\")\nSi x=3 et y=4, alors x+y=7\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/3_string/#acces-a-un-caractere","title":"Acc\u00e8s \u00e0 un caract\u00e8re","text":"<p>Acc\u00e8s \u00e0 un caract\u00e8re dans une cha\u00eene de caract\u00e8res</p> <p>Prenons l'exemple suivant:</p> <pre><code>&gt;&gt;&gt; mot = \"Python\"\n</code></pre> <p>Les caract\u00e8res sont compt\u00e9s \u00e0 partir de l'indice 0.</p> <p>Dans l'exemple, le premier caract\u00e8re est <code>P</code>, c'est donc celui d'indice 0.</p> <pre><code>&gt;&gt;&gt; mot[0]\n'P'\n</code></pre> <pre><code>&gt;&gt;&gt; mot[2]  # Caract\u00e8re d'indice 2, donc le 3i\u00e8me\n't'\n&gt;&gt;&gt; mot[3]  # Caract\u00e8re d'indice 3, donc le 4i\u00e8me\n'h'\n&gt;&gt;&gt; mot[7]  # Caract\u00e8re d'indice 7, qui n'existe pas\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nIndexError: string index out of range\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/4_fonctions/","title":"Les fonctions","text":""},{"location":"1_premiere_nsi/1_bases_de_python/4_fonctions/#quelques-fonctions-integrees","title":"Quelques fonctions int\u00e9gr\u00e9es","text":""},{"location":"1_premiere_nsi/1_bases_de_python/4_fonctions/#la-fonction-print","title":"La fonction <code>print</code>","text":"<p>La fonction <code>print</code></p> <p>La fonction <code>print</code> est une fonction native de Python qui permet de r\u00e9aliser des affichages.</p> <pre><code>&gt;&gt;&gt; print(\"Bonjour !\")\nBonjour !\n&gt;&gt;&gt; print(2+7)\n9\n</code></pre> <p>Syntaxe avanc\u00e9e</p> <ul> <li>afficher plusieurs valeurs \u00e0 suivre avec une virgule:</li> </ul> <pre><code>&gt;&gt;&gt; print(\"Vous avez\", 21, \"ans.\")\nVous avez 21 ans.\n</code></pre> <ul> <li>changer le s\u00e9parateur:</li> </ul> <pre><code>&gt;&gt;&gt; print(1, 2, 3 , sep=\"+\")\n1+2+3\n</code></pre> <ul> <li>changer la fin de l'affichage:</li> </ul> <pre><code>&gt;&gt;&gt; print(\"Bonjour\", end=\"!\")\nBonjour!\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/4_fonctions/#la-fonction-input","title":"La fonction <code>input</code>","text":"<p>La fonction <code>input</code></p> <p>La fonction <code>input</code> permet de r\u00e9cup\u00e9rer une entr\u00e9e utilisateur saisie au clavier.</p> <pre><code>&gt;&gt;&gt; nom  = input(\"Quel est votre nom ? \")\nQuel est votre nom ? Hulk\n&gt;&gt;&gt; print(nom)\nHulk\n</code></pre> <p>Attention</p> <p>La fonction <code>input</code> r\u00e9cup\u00e8re uniquement des cha\u00eenes de caract\u00e8res.</p> <pre><code>&gt;&gt;&gt; age = input(\"Quel est votre \u00e2ge ? \")\nQuel est votre \u00e2ge ? 12\n&gt;&gt;&gt; print(age)\n12\n&gt;&gt;&gt; type(age)\n&lt;class 'str'&gt;\n&gt;&gt;&gt; age + 1\nTraceback (most recent call last):\nFile \"&lt;input&gt;\", line 1, in &lt;module&gt;\nTypeError: can only concatenate str (not \"int\") to str\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/4_fonctions/#la-fonction-len","title":"La fonction <code>len</code>","text":"<p>La fonction <code>len</code></p> <p>La fonction <code>len</code>permet d'obtenir la longueur d'une valeur \u00e9num\u00e9rable. Par exemple une cha\u00eene de caract\u00e8res:</p> <pre><code>&gt;&gt;&gt; mot = \"poisson\"\n&gt;&gt;&gt; len(mot)\n7\n&gt;&gt;&gt; len(\"Bonjour tout le monde !\")\n23\n&gt;&gt;&gt; len(27)\nTraceback (most recent call last):\nFile \"&lt;input&gt;\", line 1, in &lt;module&gt;\nTypeError: object of type 'int' has no len()\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/4_fonctions/#ecrire-une-fonction","title":"Ecrire une fonction","text":"<p>Python fournit plusieurs fonctions int\u00e9gr\u00e9es comme <code>print</code>, <code>input</code> et <code>len</code> , mais vous pouvez \u00e9galement \u00e9crire vos propres fonctions. Une fonction est comme un mini-programme dans un programme.</p> <p>Fonctions</p> <p>Une fonction est un ensemble d'instruction qui peut recevoir un ou plusieurs arguments (valeurs ou variables), et qui peut renvoyer une ou plusieurs valeurs de retour, ou aucune.</p> <p>Exemple</p> <pre><code>def hello()\nprint(\"Hello !\")\n</code></pre> <ul> <li> <p>La premi\u00e8re ligne est une instruction <code>def</code>, qui d\u00e9finit une fonction nomm\u00e9e <code>hello()</code>.</p> </li> <li> <p>Le code dans le bloc qui suit l'instruction <code>def</code> est le corps de la fonction.</p> </li> <li> <p>Le corps de la fonction doit \u00eatre indent\u00e9. Soit par une tabulation, soit par des espaces (par convention 4 espaces).</p> </li> <li> <p>Ce code est ex\u00e9cut\u00e9 lorsque la fonction est appel\u00e9e, et non lorsque la fonction est d\u00e9finie pour la premi\u00e8re fois.</p> </li> </ul> <p>Exemple de fonction avec un param\u00e8tre</p> <pre><code>def double(x):\nreturn 2*x\n</code></pre> <pre><code>&gt;&gt;&gt; double(15)\n30\n&gt;&gt;&gt; double('Hulk')\n'HulkHulk'\n</code></pre> <p>Nommage des fonctions</p> <p>Par convention, on utilisera le <code>snake_case</code> pour nommer les fonctions.</p> <p>Exemple: <code>calcul_de_la_moyenne()</code></p>"},{"location":"1_premiere_nsi/1_bases_de_python/4_fonctions/#bonnes-pratiques-pour-les-fonctions","title":"Bonnes pratiques pour les fonctions","text":"<p>Reprenons l'exemple:</p> <pre><code>    def double(x):\nreturn 2*x\n</code></pre> <p>Nous devons documenter la fonction pour expliquer \u00e0 quoi elle sert.</p> <p>La docstring</p> <p>Les docstrings sont des chaines de documentation qui doivent \u00eatre plac\u00e9es juste en dessous des  d\u00e9finitions de fonction ou de classe, ou bien tout en haut d'un module.</p> <p>Exemple</p> <pre><code>def double(x):\n\"\"\"Fonction qui renvoie le double du nombre x\"\"\"\nreturn 2*x\n</code></pre> <p>Le typage des variables</p> <p>C'est une bonne pratique d'indiquer le type de variable directement dans la fonction.</p> <p>Pour en savoir plus, vous pouvez lire l'article: https://infocornouaille.github.io/nsi-cornouaille/ressources/types/</p> <p>Exemple</p> <pre><code>def double(x: int):\n\"\"\"Fonction qui renvoie le double du nombre x\"\"\"\nreturn 2*x\n</code></pre> <p>Ici, on indique que la variable <code>x</code>doit \u00eatre de type <code>int</code>, c'est \u00e0 dire un entier.</p> <p>On peut m\u00eame indiquer le type de la variable retour:</p> <pre><code>def double(x: int) -&gt; int:\n\"\"\"Fonction qui renvoie le double du nombre x\"\"\"\nreturn 2*x\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/4_fonctions/#portee-locale-et-globale-des-variables","title":"Port\u00e9e locale et globale des variables","text":"<p>Les param\u00e8tres et les variables assign\u00e9s dans une fonction appel\u00e9e sont cens\u00e9s exister dans la port\u00e9e locale de cette fonction .</p> <p>Les variables affect\u00e9es en dehors de toutes les fonctions sont cens\u00e9es exister dans la port\u00e9e globale .</p> <p>Une variable qui existe dans une port\u00e9e locale est appel\u00e9e une variable locale , tandis qu'une variable qui existe dans la port\u00e9e globale est appel\u00e9e une variable globale .</p> <p>Une variable doit \u00eatre l'une ou l'autre ; elle ne peut pas \u00eatre \u00e0 la fois locale et globale.</p> <p>Consid\u00e9rez une port\u00e9e comme un conteneur de variables. Lorsqu'une port\u00e9e est d\u00e9truite, toutes les valeurs stock\u00e9es dans les variables de la port\u00e9e sont oubli\u00e9es. Il n'y a qu'une seule port\u00e9e globale, et elle est cr\u00e9\u00e9e au d\u00e9marrage de votre programme. Lorsque votre programme se termine, la port\u00e9e globale est d\u00e9truite et toutes ses variables sont oubli\u00e9es. Sinon, la prochaine fois que vous ex\u00e9cuterez votre programme, les variables se souviendront de leurs valeurs de la derni\u00e8re fois que vous l'avez ex\u00e9cut\u00e9.</p> <p>Une port\u00e9e locale est cr\u00e9\u00e9e chaque fois qu'une fonction est appel\u00e9e. Toutes les variables affect\u00e9es dans cette fonction existent dans la port\u00e9e locale. Lorsque la fonction revient, la port\u00e9e locale est d\u00e9truite et ces variables sont oubli\u00e9es. La prochaine fois que vous appellerez cette fonction, les variables locales ne se souviendront pas des valeurs qui y sont stock\u00e9es depuis le dernier appel de la fonction.</p> <p>Les champs d'application sont importants pour plusieurs raisons :</p> <ul> <li>Le code dans la port\u00e9e globale ne peut pas utiliser de variables locales.</li> <li>Cependant, une port\u00e9e locale peut acc\u00e9der \u00e0 des variables globales.</li> <li>Le code dans la port\u00e9e locale d'une fonction ne peut pas utiliser de variables dans une autre port\u00e9e locale.</li> <li>Vous pouvez utiliser le m\u00eame nom pour diff\u00e9rentes variables si elles se trouvent dans des port\u00e9es diff\u00e9rentes. Autrement dit, il peut y avoir une variable locale nomm\u00e9e <code>spam</code> et une variable globale \u00e9galement nomm\u00e9e <code>spam</code>.</li> </ul> <p>La raison pour laquelle Python a des port\u00e9es diff\u00e9rentes au lieu de simplement faire de tout une variable globale est que lorsque les variables sont modifi\u00e9es par le code dans un appel particulier \u00e0 une fonction, la fonction interagit avec le reste du programme uniquement via ses param\u00e8tres et la valeur de retour. Cela r\u00e9duit les lignes de code de la liste qui peuvent \u00eatre \u00e0 l'origine d'un bogue. Si votre programme ne contenait que des variables globales et avait un bogue parce qu'une variable \u00e9tait d\u00e9finie sur une mauvaise valeur, il serait alors difficile de retrouver o\u00f9 cette mauvaise valeur a \u00e9t\u00e9 d\u00e9finie. Il aurait pu \u00eatre d\u00e9fini depuis n'importe o\u00f9 dans le programme - et votre programme pourrait comporter des centaines ou des milliers de lignes ! Mais si le bogue est d\u00fb \u00e0 une variable locale avec une mauvaise valeur, vous savez que seul le code de cette fonction peut l'avoir d\u00e9fini de mani\u00e8re incorrecte.</p> <p>Les variables globales, c'est le mal !</p> <p>Bien que l'utilisation de variables globales dans de petits programmes soit acceptable, c'est une mauvaise habitude de s'appuyer sur des variables globales \u00e0 mesure que vos programmes deviennent de plus en plus volumineux.</p>"},{"location":"1_premiere_nsi/1_bases_de_python/4_fonctions/#les-variables-locales-ne-peuvent-pas-etre-utilisees-dans-la-portee-globale","title":"Les variables locales ne peuvent pas \u00eatre utilis\u00e9es dans la port\u00e9e globale","text":"<p>Consid\u00e9rez ce programme, qui provoquera une erreur lorsque vous l'ex\u00e9cuterez :</p> <pre><code>def spam():\neggs = 31337\nspam()\nprint(eggs)\n</code></pre> <p>Si vous ex\u00e9cutez ce programme, la sortie ressemblera \u00e0 ceci :</p> <pre><code>Traceback (most recent call last):\nFile \"&lt;input&gt;\", line 4, in &lt;module&gt;\nNameError: name 'eggs' is not defined\n</code></pre> <p>L'erreur se produit car la variable <code>eggs</code>n'existe que dans la port\u00e9e locale cr\u00e9\u00e9e lors de l'appel <code>spam()</code>. Une fois que l'ex\u00e9cution du programme revient de <code>spam</code>, cette port\u00e9e locale est d\u00e9truite et il n'y a plus de variable nomm\u00e9e <code>eggs</code>. Ainsi, lorsque votre programme essaie de s'ex\u00e9cuter <code>print(eggs)</code>, Python vous renvoie une erreur indiquant que <code>eggs</code> n'est pas d\u00e9fini.</p> <p>Cela a du sens si vous y r\u00e9fl\u00e9chissez; lorsque l'ex\u00e9cution du programme est dans la port\u00e9e globale, aucune port\u00e9e locale n'existe, il ne peut donc pas y avoir de variables locales. C'est pourquoi seules les variables globales peuvent \u00eatre utilis\u00e9es dans la port\u00e9e globale.</p>"},{"location":"1_premiere_nsi/1_bases_de_python/4_fonctions/#les-etendues-locales-ne-peuvent-pas-utiliser-de-variables-dans-dautres-etendues-locales","title":"Les \u00e9tendues locales ne peuvent pas utiliser de variables dans d'autres \u00e9tendues locales","text":"<p>Une nouvelle port\u00e9e locale est cr\u00e9\u00e9e chaque fois qu'une fonction est appel\u00e9e, y compris lorsqu'une fonction est appel\u00e9e \u00e0 partir d'une autre fonction. Consid\u00e9rez ce programme :</p> <pre><code>def spam():\neggs = 99\nbacon()\nprint(eggs)\ndef bacon():\nham = 101\neggs = 0\nspam()\n</code></pre> <p>Lorsqu'on ex\u00e9cute ce srcipt, cela donne:</p> <pre><code>99\n</code></pre> <p>Lorsque le programme d\u00e9marre:</p> <ol> <li>la fonction <code>spam()</code> est appel\u00e9e et une port\u00e9e locale est cr\u00e9\u00e9e. La variable locale <code>eggs</code> vaut 99.</li> <li> <p>Ensuite, la fonction <code>bacon()</code> est appel\u00e9e, et une seconde port\u00e9e locale est cr\u00e9\u00e9e. Plusieurs \u00e9tendues locales peuvent exister en m\u00eame temps. Dans cette nouvelle port\u00e9e locale, la variable locale <code>ham</code> est d\u00e9finie sur 101, et une variable locale <code>eggs</code>\u2014 qui est diff\u00e9rente de celle de la port\u00e9e locale de<code>spam()</code> \u2014 est \u00e9galement cr\u00e9\u00e9e et d\u00e9finie sur 0.</p> </li> <li> <p>Lors du retour de <code>bacon()</code>, la port\u00e9e locale de cet appel est d\u00e9truite. L'ex\u00e9cution du programme se poursuit dans la fonction <code>spam()</code> pour afficher la valeur de <code>eggs</code>, et puisque la port\u00e9e locale pour l'appel \u00e0 <code>spam()</code> existe toujours ici, la variable <code>eggs</code> est d\u00e9finie sur 99. C'est ce que le programme affiche.</p> </li> </ol> <p>Le r\u00e9sultat est que les variables locales d'une fonction sont compl\u00e8tement s\u00e9par\u00e9es des variables locales d'une autre fonction.</p>"},{"location":"1_premiere_nsi/1_bases_de_python/4_fonctions/#les-variables-globales-peuvent-etre-lues-a-partir-dune-portee-locale","title":"Les variables globales peuvent \u00eatre lues \u00e0 partir d'une port\u00e9e locale","text":"<p>Consid\u00e9rez le programme suivant :</p> <pre><code>def spam():\nprint(eggs)\neggs = 42\nspam()\nprint(eggs)\n</code></pre> <p>Puisqu'il n'y a pas de param\u00e8tre nomm\u00e9 <code>eggs</code>, ou de code qui attribue \u00e0 <code>eggs</code> une valeur dans la fonction <code>spam()</code>, lorsque <code>eggs</code> est utilis\u00e9 dans <code>spam()</code>, Python le consid\u00e8re comme une r\u00e9f\u00e9rence \u00e0 la variable globale <code>eggs</code>. C'est pourquoi 42 est affich\u00e9 lors de l'ex\u00e9cution du programme pr\u00e9c\u00e9dent.</p>"},{"location":"1_premiere_nsi/1_bases_de_python/5_ifelse/","title":"Les structures conditionnelles","text":""},{"location":"1_premiere_nsi/1_bases_de_python/5_ifelse/#blocs-de-code","title":"Blocs de code","text":"<p>Les lignes de code Python peuvent \u00eatre regroup\u00e9es en blocs . Vous pouvez savoir quand un bloc commence et se termine \u00e0 partir de l'indentation des lignes de code. Il existe trois r\u00e8gles pour les blocs.</p> <ul> <li>Les blocs commencent lorsque l'indentation augmente.</li> <li>Les blocs peuvent contenir d'autres blocs.</li> <li>Les blocs se terminent lorsque l'indentation diminue jusqu'\u00e0 z\u00e9ro ou jusqu'\u00e0 l'indentation d'un bloc contenant.</li> </ul> <p>Les blocs sont plus faciles \u00e0 comprendre en regardant du code indent\u00e9, alors trouvons les blocs dans une partie d'un petit programme :</p> <pre><code>if name == 'Alice':\nprint('Hello Alice')\nif password == 'swordfish':\nprint('Acc\u00e8s autoris\u00e9.')\nelse:\nprint('Mauvais mot de passe.')\n</code></pre>"},{"location":"1_premiere_nsi/1_bases_de_python/5_ifelse/#linstruction-if","title":"L'instruction <code>if</code>","text":"<p>L'instruction <code>if</code></p> <p>En langage courant, une d\u00e9claration <code>if</code> peut \u00eatre lue comme: \"Si cette condition est vraie, ex\u00e9cute le code du bloc suivant\".</p> <p>Exemple</p> <pre><code>age = 29\nif age &gt;= 18:\nprint(\"Vous pouvez voter !\")\n</code></pre>"},{"location":"1_premiere_nsi/algorithmique/introduction/","title":"Introduction \u00e0 l'algorithmique","text":"<p>Info</p> <p>En g\u00e9n\u00e9ral, on \u00e9crit un programme informatique pour r\u00e9soudre un probl\u00e8me.</p> <p>Par exemple:</p> <ul> <li>comment d\u00e9terminer le plus court chemin pour aller d'une ville \u00e0 une autre</li> <li>rechercher l'adresse d'une personne dans un annuaire</li> <li>etc..</li> </ul> <p>Pour ces probl\u00e8mes, il existe souvent plusieurs solutions.</p> <p>La science algorithmique permet des tester et de classer ces solutions.</p>"},{"location":"1_premiere_nsi/algorithmique/introduction/#notion-dalgorithme","title":"Notion d'algorithme","text":"<p>D\u00e9finition</p> <p>Un algorithme est une suite finie d'op\u00e9rations \u00e9l\u00e9mentaires ob\u00e9issant \u00e0 un enchainement d\u00e9termin\u00e9 et produisant un r\u00e9sultat souhait\u00e9.</p> <p>Les op\u00e9rations \u00e9l\u00e9mentaires dont il est question sont des op\u00e9rations r\u00e9alisables par un processeur, par exemple l'ajout, la suppression, la comparaison, etc...</p> <p>En g\u00e9n\u00e9ral, un algorithme travaille sur les donn\u00e9es d'entr\u00e9e et donne des donn\u00e9es de sortie.</p>"},{"location":"1_premiere_nsi/algorithmique/introduction/#proprietes-et-caracteristiques-dun-algortihme","title":"Propri\u00e9t\u00e9s et caract\u00e9ristiques d'un algortihme","text":"<p>Propri\u00e9t\u00e9s d'un algorithme</p> <p>Un bon algorithme doit poss\u00e9der deux propri\u00e9t\u00e9s essentielles:</p> <ul> <li>Il doit se terminer:  il ne doit pas \"tourner en rond\" ou continuer ind\u00e9finiment et il doit fournir le r\u00e9sultat en un nombre fini d'op\u00e9rations.</li> <li>Il doit \u00eatre correct: il doit produire le r\u00e9sultat attendu dans toutes les situations.</li> </ul> <p>Caract\u00e9ristiques d'un algorithme</p> <p>Un algorithme poss\u00e8de deux caract\u00e9ristiques:</p> <ul> <li>Son co\u00fbt en temps: le nombre d'op\u00e9rations n\u00e9cessaires \u00e0 son ex\u00e9cution, ou la dur\u00e9e de son ex\u00e9cution.</li> <li>Son co\u00fbt en espace: la quantit\u00e9 d'espace m\u00e9moire n\u00e9cessaire \u00e0 son ex\u00e9cution.</li> </ul>"},{"location":"1_premiere_nsi/algorithmique/introduction/#notion-de-complexite","title":"Notion de complexit\u00e9","text":"<p>Info</p> <p>Dans le programme de sp\u00e9cialit\u00e9 NSI, on s'int\u00e9resse uniquement au co\u00fbt en temps d'un algorithme.</p> <p>Donald Knuth</p> <p>Le calcul de la complexit\u00e9 algorithmique (ou co\u00fbt algorithmique) est introduit en 1962 par Donald Knuth, informaticien et math\u00e9maticien am\u00e9ricain.</p> <p>C'est un indicateur de performance pertinent pour les algorithmes car il est ind\u00e9pendant de la machine utilis\u00e9e (microprocesseur, m\u00e9moire, ...)</p> <p>Notation grand O</p> <p>Lors de l'\u00e9tude d'un algorithme, on peut s'int\u00e9resser au cas simple, et au cas le plus d\u00e9favorable, appel\u00e9 le pire des cas.</p> <p>Dans le pire des cas, le co\u00fbt ou complexit\u00e9 de l'algorithme sera alors le plus \u00e9lev\u00e9 possible pour un m\u00eame algorithme.</p> <p>Le temps de calcul sera alors maximal.</p> <p>La notation \\(O\\) consiste \u00e0 majorer, par une fonction de r\u00e9f\u00e9rence, le nombre d'op\u00e9rations n\u00e9cessaires \u00e0 son d\u00e9roulement, pour \\(n\\) suffisamment grand.</p> <p>Quelques types de complexit\u00e9s</p> <ul> <li> <p>Complexit\u00e9 constante: \\(O(1)\\). Le co\u00fbt ne d\u00e9pend pas de la taille des donn\u00e9es.</p> </li> <li> <p>Complexit\u00e9 lin\u00e9aire: \\(O(n)\\). Le co\u00fbt est proportionnel \u00e0 la taille des donn\u00e9es.</p> </li> <li> <p>Complexit\u00e9 quadratique: \\(O(n^2)\\). Le co\u00fbt est proportionnel \u00e0 \\(n^2\\).</p> </li> <li> <p>Complexit\u00e9 logarithmique: \\(O(log(n))\\).</p> </li> <li> <p>Complexit\u00e9 exponentielle: \\(O(e^n)\\).</p> </li> </ul>"},{"location":"1_premiere_nsi/algorithmique/parcours/","title":"Algorithmes de parcours","text":"<p>Info</p> <p>On s'int\u00e9resse \u00e0 un tableau not\u00e9 <code>tab</code>et contenant \\(n\\) \u00e9l\u00e9ments not\u00e9s <code>tab[i]</code>pour \\(0 \\leq i &lt; n\\).</p> <p>On suppose que les \u00e9l\u00e9ments du tableau sont des nombres.</p>"},{"location":"1_premiere_nsi/algorithmique/parcours/#comptage-dune-occurence","title":"Comptage d'une occurence","text":"<p>Parcours total</p> <p>Le parcours total est par exemple mis en oeuvre lors d'un comptage d'occurences.</p> <p>La boucle \"pour\" est alors \u00e0 privil\u00e9gier.</p> <p>On cherche combien de fois un \u00e9l\u00e9ment not\u00e9 <code>b</code> apparait dans le tableau <code>tab</code>.</p> <p>Le programme suivant, \u00e9crit en Python, r\u00e9pond \u00e0 cette question.</p> <pre><code>def compte_occurences(tab, b):\n\"\"\"In: une liste tab et un nombre b.\n    Out: le nombre d'occurences de b\"\"\"\nif tab == []: # on teste si le tableau est vide\nreturn 0\ncompteur = 0 # On initialise le compteur \u00e0 0\nfor elem in tab: # boucle de parcours total\nif elem == b: # si l'\u00e9l\u00e9ment courant est \u00e9gal \u00e0 l'\u00e9l\u00e9ment cherch\u00e9\ncompteur = compteur + 1 # on incr\u00e9mente le compteur\nreturn compteur\n</code></pre> <p>Complexit\u00e9 du parcours total</p> <p>Le tableau est parcouru dans sa totalit\u00e9 dans tous les cas.</p> <p>Le nombre d'\u00e9tapes est donc proportionnel \u00e0 la taille du tableau.</p> <p>On a une complexit\u00e9 lin\u00e9raire: \\(O(n)\\).</p>"},{"location":"1_premiere_nsi/algorithmique/parcours/#recherche-dune-occurence","title":"Recherche d'une occurence","text":"<p>Parcours partiel</p> <p>Le parcours partiel est par exemple mis en oeuvre lors d'une recherche d'occurence.</p> <p>La boucle \"tant que\" est alors \u00e0 privil\u00e9gier.</p> <p>On cherche si le tableau <code>tab</code>contient un \u00e9l\u00e9ment not\u00e9 <code>b</code>.</p> <p>Le programme suivant, \u00e9crit en Python, r\u00e9pond \u00e0 cette question.</p> <p>Il renvoie <code>True</code>si <code>b</code>est dans le tableau et <code>False</code>sinon.</p> <pre><code>def recherche_occurence(tab, b):\n\"\"\"In: tab une liste de nombres et b un nombre.\n    Out: True si b appartient \u00e0 la liste et False sinon\"\"\"\nif tab == []: # on teste si le tableau est vide\nreturn False\ni = 0 # On initialise le parcours \u00e0 l'indice 0\ntrouve = False # On initialise le bool\u00e9en trouve \u00e0 False\nwhile i &lt; len(tab) and not trouve: # boucle de parcours\nif tab[i] == b: # si l'\u00e9l\u00e9ment d'indice i est l'\u00e9l\u00e9ment recherch\u00e9\ntrouve = True # trouve devient vrai\nelse: # sinon on continue le parcours\ni = i + 1\nreturn trouve\n</code></pre> <p>Complexit\u00e9 du parcours partiel</p> <p>La complexit\u00e9 d'un parcours partiel d\u00e9pend de la structure de donn\u00e9es parcourue.</p> <p>Le concept de pire des cas et de meilleur des cas prend tout son sens avec ce type de parcours.</p> <ul> <li> <p>Dans le meilleur des cas, l'\u00e9l\u00e9ment cherch\u00e9 sera trouv\u00e9 d\u00e8s le d\u00e9but de la recherche. L'algorithme s'arr\u00e8te au bout d'une \u00e9tape.</p> </li> <li> <p>Dans le pire des cas, l'\u00e9l\u00e9ment cherch\u00e9 est absent de la structure de donn\u00e9es et le parcours sera total.</p> </li> </ul> <p>On a donc une complexit\u00e9 lin\u00e9raire: \\(O(n)\\).</p>"},{"location":"1_premiere_nsi/algorithmique/parcours/#recherche-dun-maximum-ou-dun-minimum","title":"Recherche d'un maximum ou d'un minimum","text":"<p>Parcours total</p> <p>Le parcours total est n\u00e9cessaire pour trouver la valeur maximale (ou minimale) d'une structure de donn\u00e9es.</p> <p>La boucle \"pour\" est donc \u00e0 privil\u00e9gier.</p> <p>Le programme suivant est une impl\u00e9mentation possible.</p> <pre><code>def maximum(tab):\n\"\"\"In: tab une liste de nombres\n    Out: le maximum de la liste\"\"\"\nif tab == []:\nreturn 'erreur' # si le tableau est vide on renvoie 'erreur'\nmaxi = tab[0] # on initialise le maxi comme le 1er \u00e9l\u00e9ment\nfor i in range(1, len(tab)): # boucle de parcours total\nif tab[i] &gt; maxi:\nmaxi = tab[i]\nreturn maxi\n</code></pre>"},{"location":"1_premiere_nsi/algorithmique/parcours/#calcul-de-la-moyenne","title":"Calcul de la moyenne","text":"<p>Parcours total</p> <p>Pour calculer la moyenne, la relation suivante est indispensable:</p> \\[\\text{moyenne} = \\dfrac{\\text{somme des \u00e9l\u00e9ments}}{\\text{nombre d'\u00e9l\u00e9ments}}\\] <p>Le parcours total est donc n\u00e9cessaire et une variable temporaire sera utilis\u00e9e pour stocker la somme de tous les \u00e9l\u00e9ments rencontr\u00e9s au fil du parcours.</p> <p>La boucle \"pour\" est donc \u00e0 privil\u00e9gier.</p> <p>Info</p> <p>L'algorithme de calcul d'une moyenne est ressemble \u00e0 l'algorithme de comptage d'occurences.</p> <pre><code>def moyenne(tab):\n\"\"\"In: tab une liste de nombres\n    Out: la moyenne\n    \"\"\"\nif tab == []:\nreturn 'erreur'\nsomme = 0\nfor elem in tab:\nsomme = somme + elem\nreturn somme / len(tab)\n</code></pre>"},{"location":"1_premiere_nsi/projets/projet1/","title":"Enonc\u00e9 projet 1","text":""},{"location":"1_premiere_nsi/projets/projet1/#consignes","title":"Consignes","text":"<p>Pour ce premier projet en groupes, vous aurez \u00e0 r\u00e9aliser un script qui permet g\u00e9rer des listes de courses.</p> <p>Votre projet final doit imp\u00e9rativement comporter:</p> <ul> <li>les docstrings des diff\u00e9rentes fonctions</li> <li>des commentaires pour expliquer votre code</li> </ul> <p>Avant de commencer le projet proprement dit, vous allez devoir effectuer quelques exp\u00e9rimentations sur les entr\u00e9es/sorties et sur les manipulations de fichiers.</p> <p>Ces exp\u00e9rimentations ne sont pas \u00e0 int\u00e9grer dans le fichier final.</p> <ul> <li>Gestion des entr\u00e9es/sorties: Input et print</li> <li>Gestion des fichiers: Gestion des fichiers</li> </ul> <p>Le rendu final doit imp\u00e9rativement comporter en d\u00e9but de fichier les noms des membres du groupe, par exempe:</p> <pre><code># Projet 1\n# Dupont Jeanne\n# Durand R\u00e9mi\n</code></pre> <p>Vous pouvez bien s\u00fbr effectuer des recherches sur Internet pour avancer votre projet. Par contre tout \"copier-coller sauvage\" sera sanctionn\u00e9...</p>"},{"location":"1_premiere_nsi/projets/projet1/#sujet-du-projet","title":"Sujet du projet","text":"<p>Le projet doit pouvoir g\u00e9rer une liste de course.</p> <p>Vous devez avoir un menu d'accueil comme ci-dessous:</p> <pre><code>Que souhaitez-vous faire ?\n(C)r\u00e9er une nouvelle liste de course ?\n(O)uvrir une liste de courses existante pour y ajouter des \u00e9l\u00e9ments ?\n(S)upprimer des \u00e9l\u00e9ments de la liste de course ?\n(A)fficher la liste de course ?\n(Q)uitter le programme ?\nChoix:\n</code></pre> <p>Quand vous choisissez de cr\u00e9er la liste de course, ou d'ouvrir une liste de course existante le programme doit afficher:</p> <pre><code>(A)jouter un \u00e9l\u00e9ment ou (R)evenir au menu principal ?\n</code></pre> <p>puis:</p> <pre><code>Element \u00e0 ajouter :\n</code></pre> <p>et retour au menu pr\u00e9c\u00e9dent.</p> <p>Pour l'affichage et la suppression, voici un exemple de d\u00e9roul\u00e9:</p> <pre><code>Que souhaitez-vous faire ?\n(C)r\u00e9er une nouvelle liste de course ?\n(O)uvrir une liste de courses existante pour y ajouter des \u00e9l\u00e9ments ?\n(S)upprimer des \u00e9l\u00e9ments de la liste de course ?\n(A)fficher la liste de course ?\n(Q)uitter le programme ?\nChoix: C\n(A)jouter un \u00e9l\u00e9ment ou (R)evenir au menu principal ? A\npomme\n(A)jouter un \u00e9l\u00e9ment ou (R)evenir au menu principal ? A\nbanane\n(A)jouter un \u00e9l\u00e9ment ou (R)evenir au menu principal ? R\nQue souhaitez-vous faire ?\n(C)r\u00e9er une nouvelle liste de course ?\n(O)uvrir une liste de courses existante pour y ajouter des \u00e9l\u00e9ments ?\n(S)upprimer des \u00e9l\u00e9ments de la liste de course ?\n(A)fficher la liste de course ?\n(Q)uitter le programme ?\nChoix: O\n(A)jouter un \u00e9l\u00e9ment ou (R)evenir au menu principal ? A\neau\n(A)jouter un \u00e9l\u00e9ment ou (R)evenir au menu principal ? R\nQue souhaitez-vous faire ?\n(C)r\u00e9er une nouvelle liste de course ?\n(O)uvrir une liste de courses existante pour y ajouter des \u00e9l\u00e9ments ?\n(S)upprimer des \u00e9l\u00e9ments de la liste de course ?\n(A)fficher la liste de course ?\n(Q)uitter le programme ?\nChoix: A\npomme\nbanane\neau\nQue souhaitez-vous faire ?\n(C)r\u00e9er une nouvelle liste de course ?\n(O)uvrir une liste de courses existante pour y ajouter des \u00e9l\u00e9ments ?\n(S)upprimer des \u00e9l\u00e9ments de la liste de course ?\n(A)fficher la liste de course ?\n(Q)uitter le programme ?\nChoix: S\nEl\u00e9ment \u00e0 supprimer: choux\nVous n'avez pas de choux dans la liste.\nEl\u00e9ment \u00e0 supprimer: banane\nVous avez supprim\u00e9 banane.\nQue souhaitez-vous faire ?\n(C)r\u00e9er une nouvelle liste de course ?\n(O)uvrir une liste de courses existante pour y ajouter des \u00e9l\u00e9ments ?\n(S)upprimer des \u00e9l\u00e9ments de la liste de course ?\n(A)fficher la liste de course ?\n(Q)uitter le programme ?\nChoix: A\npomme\neau\n</code></pre> <p>Danger</p> <p>La liste course doit \u00eatre enregistr\u00e9e dans le fichier <code>liste_courses.txt</code></p>"},{"location":"1_premiere_nsi/projets/projet1/entree-sortie/","title":"Input et print","text":""},{"location":"1_premiere_nsi/projets/projet1/entree-sortie/#linstruction-input","title":"L'instruction input","text":"<p>input</p> <p>l'instruction <code>input</code> va permettre aux utilisateurs de saisir des donn\u00e9es au clavier.</p> <p>Testez ce programme:</p> <pre><code>age = input(\"Quel est votre \u00e2ge ? \")\n</code></pre> <p>Quel est le contenu de la variable age apr\u00e8s avoir ex\u00e9cut\u00e9 le programme ci-dessus ?</p> <p>Quel est le type de la valeur r\u00e9f\u00e9renc\u00e9e par la variable age ?</p> <p>Info</p> <p>Comme vous avez pu le constater, la valeur saisie par l'utilisateur sera toujours de type <code>str</code>.</p> <p>Testez ce programme:</p> <pre><code>a = input(\"Entrez un nombre\")\na = a + 1\n</code></pre> <p>Comme vous l'avez remarqu\u00e9, nous avons une erreur puisque la valeur r\u00e9f\u00e9renc\u00e9e par la variable <code>a</code> est de type <code>str</code>.</p> <p>La ligne <code>a=a+1</code> essaie \"d'addtionner\" un entier avec une chaine de caract\u00e8res. Python n'est pas capable de g\u00e9rer le probl\u00e8me, nous avons donc une erreur.</p> <p>Pour \u00e9viter ce genre de probl\u00e8me, il peut \u00eatre n\u00e9cessaire de \"transformer\" notre cha\u00eene de caract\u00e8res en entier :</p> <pre><code>a = input(\"Entrez un nombre\")\na = int(a)\na = a + 1\n</code></pre>"},{"location":"1_premiere_nsi/projets/projet1/entree-sortie/#gestion-des-erreurs-de-saisies","title":"Gestion des erreurs de saisies.","text":"<p>Imaginons que nous voulons poser une question o\u00f9 la r\u00e9ponse doit \u00eatre oui ou non.</p> <pre><code>choix = input(\"R\u00e9pondez par oui ou par non :\")\n</code></pre> <p>Si l'utilisateur rentre par exemple <code>toto</code>, il n'y a aucune erreur, mais ce n'est pas la r\u00e9ponse attendue.</p> <p>Nous devons donc tester la r\u00e9ponse, et \u00e9ventuellement reposer la question. Il y a plusieurs fa\u00e7ons d'impl\u00e9menter cette fonctionnalit\u00e9, en voici une:</p> <pre><code>saisie_incorrecte = True # On suppose au d\u00e9but que l'utilisateur fera une \"mauvaise\" saisie\nchoix = \"\" # le choix ne contient rien au d\u00e9but\nwhile saisie_incorrecte: # Tant que la saisie est incorrecte, on pose la question\nchoix = input(\"R\u00e9pondez par oui ou par non :\") # on pose la question\nif choix == \"oui\" or choix == \"non\": # si le choix est correct\nsaisie_incorrecte = False # La saisie devient correcte\nelse:\nprint(\"mauvaise r\u00e9ponse !\") # sinon on affiche un message\n</code></pre> <p>Ce code fonctionne. Mais que ce passe-t-il si on veut autoriser juste les lettres \"o\" ou \"n\", ou si l'utilisateur mets des majuscules, par exemple \"O\", \"Oui\" ?</p> <p>Le script pr\u00e9c\u00e9dent ne permet pas d'accepter ces r\u00e9ponses.</p> <p>Pour g\u00e9rer les probl\u00e8mes de majuscules ou minuscules, on peut passer le texte tout en majuscules par exemple.</p> <p>Testez le code suivant:</p> <pre><code>mot = \"chateau\"\nprint(mot.upper())\n</code></pre> <p>On peut alors modifier le script de la fa\u00e7on suivante:</p> <pre><code>saisie_incorrecte = True # On suppose au d\u00e9but que l'utilisateur fera une \"mauvaise\" saisie\nchoix = \"\" # le choix ne contient rien au d\u00e9but\nwhile saisie_incorrecte: # Tant que la saisie est incorrecte, on pose la question\nchoix = input(\"R\u00e9pondez par (O)ui ou par (N)on :\") # on pose la question\nchoix = choix.upper() # On met toutes les lettres en majuscules\nif choix in [\"O\", \"N\", \"OUI\", \"NON\"]: # si le choix est correct\nsaisie_incorrecte = False # La saisie devient correcte\nelse:\nprint(\"mauvaise r\u00e9ponse !\") # sinon on affiche un message\n</code></pre> <p>Bien s\u00fbr, il faudra mettre tout \u00e7a dans une fonction !</p> <p>Un exemple sans la docstring (\u00e0 mettre imp\u00e9rativement dans le projet !):</p> <pre><code>def menu():\nsaisie_incorrecte = True # On suppose au d\u00e9but que l'utilisateur fera une \"mauvaise\" saisie\nchoix = \"\" # le choix ne contient rien au d\u00e9but\nwhile saisie_incorrecte: # Tant que la saisie est incorrecte, on pose la question\nchoix = input(\"R\u00e9pondez par (O)ui ou par (N)on :\") # on pose la question\nchoix = choix.upper() # On met toutes les lettres en majuscules\nif choix in [\"O\", \"N\", \"OUI\", \"NON\"]: # si le choix est correct\nsaisie_incorrecte = False # La saisie devient correcte\nelse:\nprint(\"mauvaise r\u00e9ponse !\") # sinon on affiche un message\nreturn choix\n</code></pre>"},{"location":"1_premiere_nsi/projets/projet1/entree-sortie/#formatage-du-texte","title":"Formatage du texte","text":"<p>Avec l'instruction <code>print</code> il est possible d'obtenir un formatage de texte de mani\u00e8re relativement simple:</p> <pre><code>nom = input(\"Quel est votre nom ? \")\nprint(f\"Bonjour {nom} !\")\n</code></pre> <p>formatage</p> <p>Pour formater un texte, vous devez mettre un <code>f</code>avant les guillements, puis mettre les expressions \u00e0 \u00e9valuer entre accolades.</p> <pre><code>nom = input(\"Quel est votre nom ? \")\nage = input(\"Quel est votre \u00e2ge ? \")\nprint(f\"Bonjour {nom} ! Vous avez {age} ans.\")\n</code></pre>"},{"location":"1_premiere_nsi/projets/projet1/gestion-fichiers/","title":"Gestion de fichiers","text":""},{"location":"1_premiere_nsi/projets/projet1/gestion-fichiers/#gestion-des-fichiers","title":"Gestion des fichiers","text":"<p>Il est possible de lire ou d'\u00e9crire des donn\u00e9es dans un fichier ext\u00e9rieur.</p> <p>La premi\u00e8re des choses \u00e0 faire est d'ouvrir notre fichier texte. Pour ce faire nous utiliserons la m\u00e9thode <code>open</code>.</p> <p>Une fois le fichier ouvert, il est possible d'\u00e9crire dedans (\u00e0 l'aide de <code>write</code>) ou de lire son contenu (\u00e0 l'aide de <code>read</code>).</p> <p>\u00c9tudiez et testez le programme suivant :</p> <pre><code>nom = input('Entrez un mot')\nwith open('fichier.txt','a') as f :\nf.write(nom)\n</code></pre> <p>Le r\u00e9pertoire courant devrait maintenant contenir aussi un fichier \u00ab fichier.txt \u00bb. Ouvrez ce fichier et v\u00e9rifiez qu'il contient bien le mot entr\u00e9 par l'utilisateur.</p> <p>m\u00e9thode open<p>La m\u00e9thode <code>open</code> prend 2 param\u00e8tres : le nom du fichier et le mode d'ouverture du fichier :</p> <p>Il existe 3 modes d'ouverture :</p> <ul> <li>'r ' : ouverture en lecture</li> <li>'w' : ouverture en \u00e9criture. Le contenu du fichier est \u00e9cras\u00e9. Si le fichier n'existe pas, il est cr\u00e9\u00e9.</li> <li>'a' : ouverture en \u00e9criture en mode ajout. On \u00e9crit \u00e0 la fin du fichier sans \u00e9craser l'ancien contenu du fichier. Si le fichier n'existe pas, il est cr\u00e9\u00e9.</li> </ul> <p>Une fois le fichier ouvert, il est possible d'\u00e9crire dedans (\u00e0 l'aide de <code>write</code>) ou de lire son contenu (\u00e0 l'aide de <code>read</code>).</p> </p> <p>with<p>Nous utilisons ici une structure particuli\u00e8re que nous n'avons encore jamais rencontr\u00e9e : le \"with\". Ce \"with\" indique que nous allons utiliser un \"context manager\". Pour le moment, vous avez juste besoin de savoir que son utilisation permet de manipuler des fichiers externes \"proprement\".</p> </p> <p>\u00c9tudiez et testez le programme suivant :</p> <pre><code>with open('fichier.txt','r') as f :\nligne = f.read()\n</code></pre> <p>Que va contenir la variable ligne apr\u00e8s l'ex\u00e9cution de ce programme ? V\u00e9rifiez votre r\u00e9ponse.</p>"},{"location":"1_premiere_nsi/projets/projet1/gestion-fichiers/#lectureecriture","title":"Lecture/\u00e9criture","text":"<p>Testez le programme suivant:</p> <pre><code>liste_mots = ['bateau', 'oiseau', 'grenouille']\nwith open('fichier.txt','w') as f :\nfor mot in liste_mots:\nf.write(mot)\n</code></pre> <p>Ouvrez le fichier <code>fichier.txt</code>. Le contenu ne devrait pas \u00eatre tr\u00e8s joli... les mots sont tous coll\u00e9s !</p> <p>Forcer le passage \u00e0 la ligne<p>Il est tout \u00e0 fait possible de \u00ab forcer \u00bb le saut de ligne en utilisant la suite de caract\u00e8res suivante: <code>\\n</code> (l'encha\u00eenement des caract\u00e8res <code>\\</code> et <code>n</code> entra\u00eene un \"retour chariot\").</p> <p>Testez avec:</p> <pre><code>print('hello \\n world')\n</code></pre> </p> <p>Nous pouvons donc modifier notre script:</p> <pre><code>liste_mots = ['bateau', 'oiseau', 'grenouille']\nwith open('fichier.txt','w') as f :\nfor mot in liste_mots:\nf.write(f\"{mot}\\n\") #formatage du texte pour ajouter \\n\n</code></pre> <p>Voici un programme permettant de lire le fichier texte et de ranger les diff\u00e9rents mots dans une liste, testez ce programme :</p> <pre><code>mots = []\nwith open('fichier.txt','r') as f :\nfor ligne in f:\nligne = ligne.replace(\"\\n\",\"\")\nmots.append(ligne)\n</code></pre> <p>replace<p><code>ligne.replace(\"\\n\",\"\")</code> permet d'enlever la suite de caract\u00e8res <code>\\n</code>, car m\u00eame si <code>\\n</code> n'est pas visible dans le fichier texte, elle est tout de m\u00eame pr\u00e9sente.</p> </p>"},{"location":"1_premiere_nsi/projets/projet2/","title":"Enonc\u00e9 projet 2","text":""},{"location":"1_premiere_nsi/projets/projet2/#projet-21-generateur-de-qcm","title":"Projet 2.1: G\u00e9n\u00e9rateur de QCM","text":"<p>Ce projet va vous permettre de mettre au point un g\u00e9n\u00e9rateur de questions \u00e0 choix multiples.</p> <p>Cr\u00e9er un fichier <code>qcm.txt</code> puis y copier le code suivant:</p> <pre><code>Qui est le chef du nouveau gouvernement en France en 1936 ? A-Thorez B-Blum C-Daladier D-P\u00e9tain;;B\nQuel est le slogan du Front populaire ? A-\u00ab Avec la France, pour les Fran\u00e7ais \u00bb B-\u00ab Libert\u00e9, Egalit\u00e9, fraternit\u00e9 \u00bb C-\u00ab travail, famille, patrie \u00bb D-\u00ab le pain, la paix, la libert\u00e9 \u00bb;;D\nQuel parti ne compose pas le Front populaire ? A-Le Parti Radical B-La SFIO C-Le Bloc national D-Le Parti Communiste;;C\nQuel \u00e9nement de 1934 contribua \u00e0 la cr\u00e9ation du Front populaire ? A-Le congr\u00e8s de Tours B-Les \u00e9meutes des ligues C-Le Krach de Wall-Street D-La d\u00e9mission de Cl\u00e9menceau;;B\nQuel \u00e9v\u00e9nement est \u00e0  l'origine de la crise des ann\u00e9es 30 ? A-La r\u00e9volution Russe B-La mont\u00e9e du fascisme C-La premi\u00e8re guerre mondiale D-Le Krach de Wall-Street;;D\nLequel de ces pays est une \u00eele ? A-France B-Pays-Bas C-Australie D-Cor\u00e9e;;C\nQuelle est la couleur du cheval blanc d'Henri 4 A-Vert B-Rouge C-Gris D-Blanc;;D\nUn octet correspond \u00e0  A-1bit B-4 bits C-8 bits D-32 bits;;C\nAvec 1 octet on peut coder A-255 valeurs B-8 valeurs C-16 valeurs D-256 valeurs;;D\nQu'est ce que Microsoft Windows ? A-Un type d'ordinateur B-Un syst\u00e8me d'exploitation C-Un syst\u00e8me de gestion de bases de donn\u00e9es;;B\nLe syst\u00e8me binaire utilise la base A-2 B-10 C-8 D-16 E-Aucune de ces r\u00e9ponses n'est vraie.;;A\nDans la mythologie gr\u00e9co-romaine, les dieux se r\u00e9unissaient sur A-Le mont Sina\u00ef B-Le V\u00e9suve C-Le mont Olympe;;C\nDans la mythologie grecque, P\u00e9gase est A-Un cheval ail\u00e9 B-Une homme avec un t\u00eate d'aigle C-Un g\u00e9ant;;A\nEn quelle ann\u00e9e Fran\u00e7ois Mitterrand a-t-il \u00e9t\u00e9 \u00e9lu pr\u00e9sident de la R\u00e9publique fran\u00e7aise ? A-1974 B-1976 C-1981 D-1986;;C\nQuand l'armistice de la seconde guerre mondiale a-t-elle \u00e9t\u00e9 sign\u00e9e A-Le 8 Mai 1945 B-Le 14 Juillet 1940 C-Le 11 Novembre 1945 D-Le 18 Juin 1940;;A\nAvec quel instrument peut-on ouvrir une porte ? A-Un chevalet B-Une bobine C-Une poign\u00e9e;;C\nQuel mot d\u00e9signe l'\u00e9levage des oiseaux ? A-L'ostr\u00e9iculture B-La cuniculture C-L'apiculture D-L'aviculture;;D\nQuelle est la m\u00e9thode bas\u00e9e sur la persuasion par la r\u00e9p\u00e9tition ? A-Cou\u00e9 B-Cauet C-Couderc D-Courbet;;A\nAvant 2003, les pays de Bosnie, Croatie, Slov\u00e9nie, Mac\u00e9doine, Mont\u00e9n\u00e9gro et Serbie \u00e9taient regroup\u00e9s sous le nom d'un Etat. De quel Etat s'agissait-il ? A-Bulgarie B-Tch\u00e9coslovaquie C-Kosovo D-Yougoslavie;;D\nComment appelle-t-on un mot construit sur la base des lettres d'un autre mot ? A-Un synonyme B-Un lapsus C-Une anagramme;;C\nComment s'appelle cette maladie infectieuse provoqu\u00e9e par le bacille de Koch ? A-La peste B-La tuberculose C-La poliomy\u00e9lite D-La gale;;B\nQuel est l'homme d'\u00e9tat cr\u00e9ateur de l'Acad\u00e9mie Fran\u00e7aise ? A-Louis IV B-Henry IV C-Le cardinal de Richelieu D-Le cardinal Mazarin;;C\nQuel autre nom donne-t-on aux globules blancs ? A-Leucocytes B-Plaquettes C-Triglyc\u00e9rides D-H\u00e9maties;;A\nSous le r\u00e8gne de quel roi, Colbert fut-il ministre des finances ? A-Louis XIII B-Louis XIV C-Louis XV D-Louis XVI;;B\nO\u00f9 se trouve le si\u00e8ge de l'UNESCO ? A-Londres B-Paris C-New York D-Gen\u00e8ve;;B\nQui fut la premi\u00e8re pr\u00e9sidente du Parlement europ\u00e9en ? A-Edith CRESSON B-Simone VEIL C-Margaret THATCHER D-Aucune femme n'a occup\u00e9 ce poste;;D\nLe saturnisme est une maladie due \u00e0  une intoxication au A-Plomb B-Fer C-Cuivre D-Aluminium;;A\nQuelle ville fran\u00e7aise n'est pas situ\u00e9e sur le Rh\u00f4ne ? A-Grenoble B-Avignon C-Lyon D-Vienne;;A\nA quelle distance approximative correspond un degr\u00e9 de latitude terrestre ? A-111 km B-62 km C-8 km D-34 km;;A\nQuel d\u00e9partement n'est pas frontalier avec l'Italie ? A-Les Alpes-de-Haute-Provence B-Les Hautes-Alpes C-La Haute-Savoie D-Le Vaucluse;;D\n</code></pre> <p>Ce fichier contient 30 questions et r\u00e9ponses, voici un exemple de question (et de la r\u00e9ponse qui va avec) :</p> <pre><code>Un octet correspond \u00e0 A-1bit B-4 bits C-8 bits D-32 bits;;C\n</code></pre> <p>Comme vous pouvez le constater, la question et la r\u00e9ponse correcte sont s\u00e9par\u00e9es par 2 points-virgules.</p> <p>N.B. : il est tout \u00e0 fait possible de r\u00e9diger vos propres questions et de les placer dans un fichier au format texte.</p> <p>Votre programme devra \"piocher\" au hasard 10 questions parmi les 30 questions pr\u00e9sentes dans le fichier <code>qcm.txt</code> (\u00e0 chaque ex\u00e9cution de votre programme, les 10 questions ne seront pas identiques)</p> <p>On ne pourra pas avoir 2 fois la m\u00eame question au cours d'une m\u00eame session.</p> <p>\u00c0 la fin des 10 questions, le score devra \u00eatre affich\u00e9</p> <p>Au cours de ce projet, il vous sera sans doute n\u00e9cessaire d'\u00e9tudier les 2 points suivants :</p> <ul> <li>le module <code>random</code> qui permet de g\u00e9rer le \"hasard\" en Python. Rechercher sur Internet son utilisation.</li> <li>la m\u00e9thode <code>split</code> qui permet de s\u00e9parer en plusieurs morceaux une cha\u00eene de caract\u00e8res. Rechercher sur Internet son utilisation.</li> </ul> <p>N'oubliez pas d'utiliser le plus possible les fonctions.</p> <p>Exemple de d\u00e9roul\u00e9:</p> <pre><code>O\u00f9 se trouve le si\u00e8ge de l'UNESCO ? A-Londres B-Paris C-New York D-Gen\u00e8ve\nQuelle est votre r\u00e9ponse ? B\nBravo bonne r\u00e9ponse !\nQuel mot d\u00e9signe l'\u00e9levage des oiseaux ? A-L'ostr\u00e9iculture B-La cuniculture C-L'apiculture D-L'aviculture\nQuelles est votre r\u00e9ponse ? A\nMauvaise r\u00e9ponse !\n...\nVotre scrore: 4/10\n</code></pre>"},{"location":"1_premiere_nsi/projets/projet2/#projet-22-jeu-du-pendu","title":"Projet 2.2: Jeu du pendu","text":"<p>L'objectif de ce projet est de cr\u00e9er un jeu du pendu en Python.</p> <p>Les mots \u00e0 deviner seront plac\u00e9s dans un fichier <code>mots.txt</code> avec une indication, par exemple sous la forme suivante:</p> <pre><code>Un fruit:ANANAS\nUne marque de voiture:PEUGEOT\nUn pays:ESPAGNE\nUn fruit:FRAISE\n</code></pre> <p>Le fichier devra contenir au moins une trentaine de mots.</p> <p>Le programme devra choisir au hasard un mot, et le faire deviner.</p> <p>Par exemple, si le mot choisis est FRAISE, on aura un affichage du type:</p> <pre><code>Vous deviner: Un fruit\n_ _ _ _ _ _\nLettre ? A\n_ _ A _ _ _\nLettre ? E\n_ _ A _ _ E\n</code></pre> <p>Il faut bien s\u00fbr deviner en un certain nombre d'\u00e9tapes maximales !</p> <p>Vous pouvez, au choix:</p> <ul> <li>Afficher le nombre d'erreurs possibles restantes, et on perd quand on tombe \u00e0 z\u00e9ro</li> <li>Faire un vrai affichage comme le jeu du pendu.</li> </ul> <p>Par exemple:</p> <pre><code>________\n|      |\n|      O\n|     /|\\\n|      |\n|     / \\\n|\n</code></pre>"},{"location":"1_premiere_nsi/representation/binaire/","title":"Repr\u00e9sentation d'un entier positif dans diff\u00e9rentes bases","text":"<p>Hormis la base 10, deux bases sont utilis\u00e9es en informatique :</p> <ul> <li>la base 2 (le syst\u00e8me binaire)</li> <li>la base 16 (le syst\u00e8me hexad\u00e9cimal)</li> </ul> <p>Dans toute la suite, la base dans laquelle le nombre est \u00e9crit sera pr\u00e9cis\u00e9e en indice. Exemple : \\(13_{10}=1101_2=\\rm{D}_{16}\\)</p>"},{"location":"1_premiere_nsi/representation/binaire/#i-le-systeme-binaire","title":"I. Le syst\u00e8me binaire","text":"<p>En base 2, on ne dispose que des chiffres <code>0</code> et <code>1</code>. Le syst\u00e8me binaire est un syst\u00e8me de num\u00e9ration de position (comme le syst\u00e8me d\u00e9cimal, hexad\u00e9cimal... mais pas comme le syst\u00e8me romain). \u00c0 chaque rang correspond une puissance de 2.</p>"},{"location":"1_premiere_nsi/representation/binaire/#du-binaire-vers-le-decimal","title":"Du binaire vers le d\u00e9cimal","text":"... 128 64 32 16 8 4 2 1 ... \\(2^7\\) \\(2^6\\) \\(2^5\\) \\(2^4\\) \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) ... 1 1 0 1 0 0 1 0 <p>\\(11010010_2=1 \\times 2^7+ 1 \\times 2^6+0 \\times 2^5+1 \\times 2^4+0 \\times 2^3+0 \\times 2^2+1 \\times 2^1+0 \\times 2^0\\)</p> <p>\\(=128+64+32+2\\)</p> <p>\\(=210_{10}\\)</p> <p>Le nombre binaire 11010010 correspond donc au nombre d\u00e9cimal 210.</p>"},{"location":"1_premiere_nsi/representation/binaire/#en-python","title":"En python","text":"<p>En Python, on peut utiliser la fonction <code>int(\"nombre\",base)</code>.</p> <pre><code>int(\"11010010\",2)\n# Sortie: 210\n</code></pre>"},{"location":"1_premiere_nsi/representation/binaire/#du-decimal-vers-le-binaire","title":"Du d\u00e9cimal vers le binaire","text":"<p>Principe : dans chaque nombre d\u00e9cimal, il existe une plus grande puissance de 2 qui est inf\u00e9rieure au nombre.</p> <p>Par exemple, dans 243, il y a 128. Donc \\(243=128 + (115)\\) \\(243=128+64+(51)\\) \\(243=128+64+32+(19)\\) \\(243=128+64+32+16+(3)\\) \\(243=128+64+32+16+2+1\\) \\(243=1 \\times 2^7+ 1 \\times 2^6+1 \\times 2^5+1 \\times 2^4+0 \\times 2^3+0 \\times 2^2+1 \\times 2^1+1 \\times 2^0\\)</p> <p>Donc \\(243_{10}=11110011_2\\)</p> <p>m\u00e9thode des divisions successives</p> <p></p>"},{"location":"1_premiere_nsi/representation/binaire/#en-python_1","title":"En python","text":"<p>En Python, on peut utiliser la fonction <code>bin(nombre)</code>. Elle renvoie une cha\u00eene de caract\u00e8re o\u00f9 le nombre binaire est pr\u00e9c\u00e9d\u00e9 de <code>'0b'</code>.</p> <pre><code>bin(243)\n# '0b11110011'\n</code></pre> <p>Exercice</p> \u00c9nonc\u00e9Correction <p>Quelle est la valeur maximale d'un octet (un octet = 8 chiffres binaires) ?</p> <p>\\(11111111_2=255\\). On retrouve ce nombre comme \u00e9tant la valeur maximale d'une composante de couleur dans le codage RGB, ce qui signifie que chaque composante est cod\u00e9e sur un octet.</p>"},{"location":"1_premiere_nsi/representation/binaire/#ii-le-systeme-hexadecimal","title":"II. Le syst\u00e8me hexad\u00e9cimal","text":"<p>L'inconv\u00e9nient essentiel du syst\u00e8me binaire est la longueur de l'\u00e9criture des nombres qu'il g\u00e9n\u00e8re. Pour cette raison, le syst\u00e8me hexad\u00e9cimal, ou syst\u00e8me de base 16 est tr\u00e8s souvent employ\u00e9.</p> <ul> <li> <p>Pour \u00e9crire en base 2, il faut 2 chiffres diff\u00e9rents : le 0 et le 1.</p> </li> <li> <p>Pour \u00e9crire en base 10, il faut 10 chiffres diff\u00e9rents: 0,1,2,3,4,5,6,7,8,9.</p> </li> <li> <p>Pour \u00e9crire en base 16, il faut donc 16 chiffres diff\u00e9rents : 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F.</p> </li> </ul> <p>On a donc la correspondance :</p> <p>A repr\u00e9sente 10 B repr\u00e9sente 11 C repr\u00e9sente 12 D repr\u00e9sente 13 E repr\u00e9sente 14 F repr\u00e9sente 15</p>"},{"location":"1_premiere_nsi/representation/binaire/#de-lhexadecimal-vers-le-decimal","title":"De l'hexad\u00e9cimal vers le d\u00e9cimal","text":"256 16 1 \\(16^2\\) \\(16^1\\) \\(16^0\\) 1 D 2 <p>\\(\\rm{1D2}_{16}=1 \\times 16^2+ 13 \\times 16^1+2 \\times 16^0=256+208+2=466_{10}\\)</p> <p>Le nombre hexad\u00e9cimal <code>1D2</code> correspond donc au nombre d\u00e9cimal 466.</p> <p>En pratique, l'hexad\u00e9cimal est surtout utilis\u00e9 pour sa capacit\u00e9 \u00e0 repr\u00e9senter la valeur de n'importe quel octet sur 2 chiffres (\"chiffres\" \u00e9tant \u00e0 prendre au sens large = chiffres ou lettres !).</p> <p>Exercice</p> \u00c9nonc\u00e9Correction <ol> <li>Donner la valeur des octets <code>FF</code>, <code>3A</code>, <code>B2</code>.</li> <li>Expliquer pourquoi la couleur RGB (138,255,51) a pour code html <code>#8AFF33</code>.</li> <li>Quelle est la couleur html du blanc ?</li> </ol> <ol> <li> <p>FF=255 ; 3A=58 ; B2=178</p> </li> <li> <p>138 a pour code hexa 8A, 255 a pour code hexa 255, 51 a pour code hexa 33</p> </li> <li> <p><code>#FFFFFF</code></p> </li> </ol>"},{"location":"1_premiere_nsi/representation/codage_entiers/","title":"Le codage des nombres entiers","text":"<p>Info</p> <p>Dans toute la suite, sauf mention contraire, les nombres seront cod\u00e9s sur 1 octet (8 bits).</p>"},{"location":"1_premiere_nsi/representation/codage_entiers/#les-nombres-entiers-en-binaire-non-signe","title":"Les nombres entiers en binaire non sign\u00e9","text":"<p>L'expression \"non sign\u00e9\" signifie que la contrainte du signe n'existe pas : tous les nombres sont consid\u00e9r\u00e9s comme \u00e9tant positifs.</p> <p>Nous avons d\u00e9j\u00e0 vu comment ces nombres se codaient en binaire.</p> <p>Sur un octet, le nombre minimal qu'on puisse coder est <code>00000000</code>. C'est l'entier naturel 0.</p> <p>Le nombre maximal qu'on puisse coder est <code>11111111</code>. C'est l'entier naturel 255.</p> ExerciceCorrection <ol> <li>Quel est le plus grand entier non sign\u00e9 codable sur 16 bits ?</li> <li>... sur 32 bits ?</li> <li>... \\(n\\) bits ?</li> </ol> <ol> <li>\\(N=1+2+2^2+2^3+\\dots+2^{15}= 65535\\)</li> <li>\\(N=1+2+2^2+2^3+\\dots+2^{31}= 4294967295\\)</li> <li>Pour tout \\(n \\in \\mathbb{N}\\), \\(1+2+2^2+2^3+\\dots+2^{n}=2^{n+1}-1\\) (formule de la somme des termes d'une suite g\u00e9om\u00e9trique de raison 2).</li> </ol> <p>Addition binaire:</p> Exercice sur l'addition binaireCorrection <ol> <li>Effectuer la somme des deux nombres binaires <code>00001101</code> et <code>00001011</code>.</li> <li>V\u00e9rifier que le r\u00e9sultat est coh\u00e9rent en base 10.</li> </ol> <ol> <li></li> <li>Cette addition correspond \u00e0 \\(13+11=24\\)</li> </ol> <p>A retenir</p> <ul> <li> <p>Sur \\(n\\) bits, on peut stocker \\(2^n\\) entiers positifs.</p> </li> <li> <p>Le plus grand entier positif que l'on peut repr\u00e9senter est \\(2^{n}-1\\).</p> </li> <li> <p>Pour \u00e9valuer le nombres de bits minimum n\u00e9cessaires pour l'\u00e9criture binaire d'un entier positifn il faut trouver la plus petite puissance de 2 qui soit strictement sup\u00e9rieure \u00e0 l'entier \u00e0 \u00e9crire.</p> </li> </ul>"},{"location":"1_premiere_nsi/representation/codage_entiers/#2-les-nombres-entiers-en-binaire-signe","title":"2. Les nombres entiers en binaire sign\u00e9","text":"<p>M\u00e9thode du compl\u00e9ment \u00e0 2</p> <ul> <li> <p>Les nombres positifs sont repr\u00e9sent\u00e9s comme vu au premier chapitre mais le bit le plus fort vaut forc\u00e9ment z\u00e9ro.</p> </li> <li> <p>Les nombres n\u00e9gatifs sont obtenus en deux \u00e9tapes:</p> <ul> <li>On inverse les bits de l'\u00e9criture binaire de sa valeur absolue. (Compl\u00e9ment \u00e0 1)</li> <li>On ajoute 1 au nombre obtenu. C'est le compl\u00e9ment \u00e0 2.</li> </ul> </li> </ul> <p>Exemple</p> <p>Repr\u00e9senton le nombre \\(-38\\) sur 8 bits.</p> <p>Le nombre \\(38_{10}\\) en binaire est \\(100110\\) et donc sur 8 bits: \\(0010010\\)</p> <p>Son compl\u00e9ment \u00e0 1 est \\(11011001\\)</p> <p>On ajoute 1, ce qui nous donne: \\(11011010\\)</p> <p>On a donc: \\(-38_{10} = 11011010_2\\)</p> ExerciceCorrection <p>Donner l'\u00e9criture binaire sur un octet du nombre \\(-13\\).</p> <p>Commen\u00e7ons par \u00e9crire le nombre 13 en binaire. Il s'\u00e9crit \u00a0<code>00001101</code>.</p> <ul> <li>en prenant le compl\u00e9ment \u00e0 1 de chaque bit, on obtient <code>11110010</code>.</li> <li>en ajoutant 1 \u00e0 ce dernier nombre, on obtient <code>11110011</code>.</li> </ul> <p>Le nombre \\(-13\\) s'\u00e9crit donc <code>11110011</code>.</p>"},{"location":"1_premiere_nsi/representation/codage_entiers/#travail-inverse-passage-du-binaire-signe-au-nombre-relatif","title":"Travail inverse : passage du binaire sign\u00e9 au nombre relatif","text":"<p>Ce sont les m\u00eame m\u00e9thodes.</p> <p>Si le bit fort (le plus \u00e0 gauche) est un 1, notre nombre est n\u00e9gatif et il faut faire le compl\u00e9ment \u00e0 2, sinon il est positif et on convertit comme pour tout entier naturel.</p> <p>Exemple \u00e0 connaitre</p> <p>Essayons avec 1111 1101</p> <p>M\u00e9thode 1: 1111 1101 devient 0000 0010 puis on ajoute 1 donc 0000 0011, ce qui donne 3, et donc \\(-3\\).</p> <p>M\u00e9thode 2: 1111 1101 = 253 et \\(2^8-253=3\\) , puisqu'il y a un 1 en bit fort, cela fait \\(-3\\)</p> ExerciceCorrection <ol> <li>En binaire sign\u00e9, \u00e0 quel nombre correspond \\(11110001\\) ?</li> <li>En binaire sign\u00e9, quel est le plus grand nombre que l'on puisse \u00e9crire sur un octet ?</li> <li>Quel est le plus petit nombre ?</li> </ol> <ol> <li>\\(11110001\\) devient \\(00001110\\) puis on ajoute 1 \\(00001111\\) qui donne 15 et donc \\(-15\\)</li> <li>Le plus grand nombre est <code>01111111</code>, soit \\(+127\\).</li> <li>Le nombre minimal est \\(-128\\).</li> </ol>"},{"location":"1_premiere_nsi/representation/codage_non_entiers/","title":"Le codage en binaire des nombres non entiers","text":"<p>Le principe est l'extension du syst\u00e8me d\u00e9j\u00e0 rencontr\u00e9 pour les nombres entiers. La partie d\u00e9cimale (\u00e0 droite de la virgule) correspondra aux puissances n\u00e9gatives de 2.</p> ... 8 4 2 1 0.5 0.25 0.125 ... ... \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) \\(2^{-1}\\) \\(2^{-2}\\) \\(2^{-3}\\) ... ... 0 1 1 0, 1 0 1 ... <p>Exemple :</p> <p>\\(110,101_2=1 \\times 2^2 + 1 \\times2^1 +0 \\times 2^0 + 1 \\times 2^{-1} +0 \\times 2^{-2}+1 \\times 2^{-2}\\)</p> <p>\\(=4+2+0,5+0,125=6,625\\)</p>"},{"location":"1_premiere_nsi/representation/codage_non_entiers/#tentatives-de-conversion","title":"Tentatives de conversion","text":"<p>Tout commence bien, avec un r\u00e9sultat math\u00e9matique rassurant : tous les nombres r\u00e9els peuvent s'\u00e9crire comme une somme de puissances de 2 (puissances positives et n\u00e9gatives).</p>"},{"location":"1_premiere_nsi/representation/codage_non_entiers/#theoreme","title":"Th\u00e9or\u00e8me","text":"<p>Pour tout r\u00e9el \\(x \\in \\mathbb{R}^+\\), il existe \\(p \\in \\mathbb{N}\\) et \\((a_p,a_{p-1},...,a_0,a_{-1},a_{-2},...)\\) tels que \\(x = \\sum_{i=0}^pa_i2^i+\\sum_{i=1}^{+\\infty}a_{-i}2^{-i}\\)</p> <p>\u00c9crire un nombre en binaire revient \u00e0 calculer les coefficients \\(a_k\\) (ils sont \u00e9gaux \u00e0 0 ou 1). Il y en a un nombre fini pour la partie enti\u00e8re, mais un nombre potentiellement infini pour la partie d\u00e9cimale.</p>"},{"location":"1_premiere_nsi/representation/codage_non_entiers/#methode-de-conversion","title":"M\u00e9thode de conversion","text":"<p>Consid\u00e9rons le nombre \\(3,6875\\). Il se d\u00e9compose en une partie enti\u00e8re (3) et une partie d\u00e9cimale (\\(0,6875\\)).</p> <ul> <li>partie enti\u00e8re : \\(3=11_2\\)</li> <li>partie enti\u00e8re : la conversion de \\(0,6875\\) se fait en plusieurs \u00e9tapes. \\(0,6875 \\times 2 = \\textbf{1},375\\) \\(0,375 \\times 2   = \\textbf{0},75\\) \\(0,75 \\times 2 = \\textbf{1},5\\) \\(0,5 \\times 2 = \\textbf{1}\\)</li> </ul> <p>On prend ensuite le chiffre des unit\u00e9s de tous les nombres obtenus : 1011</p> <p>Donc \\(3,6875=11,1011_2\\)</p>"},{"location":"1_premiere_nsi/representation/codage_non_entiers/#exercice-1","title":"Exercice 1","text":"<p>Donner l'\u00e9criture binaire de 20,875.</p> <p>correction :</p> <ul> <li>partie enti\u00e8re : \\(20 = 10100_2\\)</li> <li>partie d\u00e9cimale :</li> <li>\\(0,875 \\times 2 = \\textbf{1},75\\)</li> <li>\\(0,75 \\times 2 = \\textbf{1},5\\)</li> <li>\\(0,5 \\times 2  = \\textbf{1}\\)</li> </ul> <p>Donc \\(20,875=10100,111_2\\)</p>"},{"location":"1_premiere_nsi/representation/codage_non_entiers/#exercice-2","title":"Exercice 2","text":"<p>Donner l'\u00e9criture binaire de 0,2.</p> <p>correction :</p> <ul> <li>partie enti\u00e8re : \\(0 = 0_2\\)</li> <li>partie d\u00e9cimale :</li> <li>\\(0,2 \\times 2 = \\textbf{0},4\\)</li> <li>\\(0,4 \\times 2 = \\textbf{0},8\\)</li> <li>\\(0,8 \\times 2  = \\textbf{1},6\\)</li> <li>\\(0,6 \\times 2  = \\textbf{1},2\\)</li> <li>\\(0,2 \\times 2 = \\textbf{0},4\\)</li> <li>et cela continue...</li> </ul> <p>Le nombre 0,2 n'admet pas d'\u00e9criture binaire finie.</p>"},{"location":"1_premiere_nsi/representation/codage_non_entiers/#conclusion","title":"Conclusion","text":"<p>Certains nombres n'admettent pas une \u00e9criture binaire finie. Or la m\u00e9moire d'un ordinateur, quelqu'il soit, est toujours finie. Certains nombres ne peuvent donc pas \u00eatre repr\u00e9sent\u00e9s correctement en machine : c'est une impossibilit\u00e9 th\u00e9orique. Cela am\u00e8ne \u00e0 des comportements \u00e9tranges :</p> <pre><code>0.1+0.2\n# 0.30000000000000004\n</code></pre>"},{"location":"1_premiere_nsi/representation/codage_non_entiers/#consequences-la-difficile-manipulation-des-flottants","title":"Cons\u00e9quences : la difficile manipulation des flottants","text":"<p>En python, les nombres non entiers sont du type float.</p> <pre><code>type(0.1)\n# float\n</code></pre> <p>Ces flottants (traduction fran\u00e7aise) sont \u00e0 manipuler avec une extr\u00eame pr\u00e9caution. Il faut garder en t\u00eate que les calculs sont potentiellement faux, du moins impr\u00e9cis, lorsque des flottants interviennent.</p> <p>Histoire</p> <p>En 1991, durant la Guerre du Golfe, un missile anti-missile am\u00e9ricain a rat\u00e9 sa cible de 500 m\u00e8tres car son ordinateur interne \u00e9mettait un signal toutes les 0.1 secondes. Au bout de 100 heures de fonctionnement, l'approximation du nombre flottant 0.1 a conduit \u00e0 un d\u00e9calage de 0,34 secondes, ce qui lui a fait rater sa cible. (source)</p>"},{"location":"1_premiere_nsi/types_construits/1_listes/","title":"Listes en Python","text":""},{"location":"1_premiere_nsi/types_construits/1_listes/#definition-des-listes-en-python","title":"D\u00e9finition des listes en Python","text":"<p>D\u00e9finition</p> <p>Tableau: Un tableau est une collection ordonn\u00e9e d'\u00e9l\u00e9ments de n'importe quel type, organis\u00e9s s\u00e9quentiellement les uns \u00e0 la suite des autres.</p> <p>Info</p> <p>En Python, un tableau est appel\u00e9 liste. Il est de type <code>list</code></p> <p>Le tableau est modifiable par affectation, on dit qu'il est mutable</p>"},{"location":"1_premiere_nsi/types_construits/1_listes/#bases-sur-les-listes-en-python","title":"Bases sur les listes en Python","text":"<p>Cr\u00e9ation d'une liste</p> <p>Dans une liste, tous les termes doivent \u00eatre s\u00e9par\u00e9s par des virgules et entour\u00e9s de crochets</p> <p>Exemple</p> <pre><code>L = [1, 5, 8]\n</code></pre> <p>Info</p> <p>Une liste peut aussi contenir des \u00e9l\u00e9ments de types diff\u00e9rents</p> <pre><code>lst = [4, \"bonjour\", False, [7, 9]]\n</code></pre> <p>liste vide</p> <p>La liste vide est not\u00e9e <code>[]</code></p> <pre><code>lst = [] # liste vide\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/1_listes/#acces-aux-elements-dune-liste-en-python","title":"Acc\u00e8s aux \u00e9l\u00e9ments d'une liste en Python","text":"<p>Acc\u00e9der aux \u00e9l\u00e9ments d'une liste</p> <p>On acc\u00e8de \u00e0 un \u00e9l\u00e9ment d'une liste en mettant entre crochets l'indice de l'\u00e9l\u00e9m\u00e9nt (qui commence \u00e0 z\u00e9ro).</p> <p>Exemple</p> <pre><code>&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n&gt;&gt;&gt; famille[0]\n'Bart'\n&gt;&gt;&gt; famille[1]\n'Lisa'\n&gt;&gt;&gt; famille[2]\n'Maggie'\n</code></pre> <p>Danger</p> <p>Un indice qui d\u00e9passe la valeur <code>longueur de la liste -1</code> provoquera une erreur <code>list index out of range</code>.</p> <p>Exemple:</p> <pre><code>&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n&gt;&gt;&gt; famille[3] # Erreur de type list index out of range\nIndexError: list index out of range\n</code></pre> <p>Indices n\u00e9gatifs</p> <p>Il est possible d'utiliser des indices n\u00e9gatifs.</p> <p>\\(-1\\) correspond alors au dernier \u00e9l\u00e9ment de la liste.</p> <p>Exemple d'utilisation d'indices n\u00e9gatifs</p> <pre><code>&gt;&gt;&gt; famille = [\"Bart\", \"Lisa\", \"Maggie\"]\n&gt;&gt;&gt; famille[-1]\n'Maggie'\n&gt;&gt;&gt; famille[-2]\n'Lisa'\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/1_listes/#modification-dune-liste-par-affectation-en-python","title":"Modification d'une liste par affectation en Python","text":"<p>Modification d'une liste</p> <p>Les termes d'une listes peuvent \u00eatre modifi\u00e9s par affectation au cours d'un programme.</p> <p>Cela est possible car les listes sont des objets mutables.</p> <p>Exemple de modification par affectation</p> <pre><code>&gt;&gt;&gt; animaux = ['renards', 'crocodiles', 'z\u00e8bres']\n&gt;&gt;&gt; animaux[1] = 'toucans'\n&gt;&gt;&gt; print(animaux)\n['renards', 'toucans', 'z\u00e8bres']\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/1_listes/#longueur-dune-liste-en-python","title":"Longueur d'une liste en Python","text":"<p>Longueur d'une liste</p> <p>La longueur d'une liste sera donn\u00e9e par la fonction <code>len()</code></p> <p>Exemple</p> <pre><code>&gt;&gt;&gt; lst = [3, 'bonjour', True, [1, 2, 5]]\n&gt;&gt;&gt; len(lst)\n4\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/1_listes/#test-dappartenance-avec-in-en-python","title":"Test d'appartenance avec <code>in</code> en Python","text":"<p>Tester l'appartenance d'un \u00e9l\u00e9ment dans une liste</p> <p>On peut tester si un \u00e9l\u00e9ment appartient \u00e0 une liste avec <code>in</code></p> <p>Example de test d'appartenance</p> <pre><code>&gt;&gt;&gt; lst = ['n', 's', 'i']\n&gt;&gt;&gt; print('n' in lst)\nTrue\n&gt;&gt;&gt; print('b' in lst)\nFalse\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/1_listes/#operation-sur-les-listes-en-python","title":"Op\u00e9ration sur les listes en Python","text":"<p>La m\u00e9thode append()</p> <p>Les listes Python ont la particularit\u00e9 de pouvoir \u00eatre allong\u00e9es d'un \u00e9l\u00e9ment en fin de liste, gr\u00e2ce \u00e0 la m\u00e9thode <code>append()</code></p> <p>Example d'utilisation de la m\u00e9thode append()</p> <pre><code>&gt;&gt;&gt; felins = ['chats', 'tigres', 'l\u00e9opards']\n&gt;&gt;&gt; felins.append('lions')\n&gt;&gt;&gt; print(felins)\n['chats', 'tigres', 'l\u00e9opards', 'lions']\n</code></pre> <p>La concat\u00e9nation</p> <p>Avec l'op\u00e9rateur <code>+</code>, on peut concat\u00e9ner deux listes, c'est-\u00e0-dire cr\u00e9er une nouvelle liste form\u00e9e avec deux listes.</p> <p>Exemple de concat\u00e9nation</p> <pre><code>&gt;&gt;&gt; lst1 = [3, 5, 7]\n&gt;&gt;&gt; lst2 = [12, 15, 9]\n&gt;&gt;&gt; lst3 = lst1 + lst2\n&gt;&gt;&gt; print(lst3)\n[3, 5, 7, 12, 15, 9]\n</code></pre> <p>Multiplication par un entier</p> <p>On peut utiliser la multiplication par un entier <code>int</code> pour dupliquer une liste.</p> <p>Exemple de multiplication par un entier</p> <pre><code>&gt;&gt;&gt; lst1 = [0]*5\n&gt;&gt;&gt; print(lst1)\n[0, 0, 0, 0, 0]\n&gt;&gt;&gt; lst2 = ['t', 'u']*3\n&gt;&gt;&gt; print(lst2)\n['t', 'u', 't', 'u', 't', 'u']\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/1_listes/#le-slicing-en-python","title":"Le slicing en Python","text":"<p>Le slicing</p> <p>Le d\u00e9coupage de liste (appel\u00e9 slicing) permet d'extraire un s\u00e9quence d'une liste.</p> <p>Soit <code>lst</code> une liste</p> <p>La syntaxe <code>lst[i:j]</code> permet d'extraire de la liste tous les \u00e9l\u00e9ments cons\u00e9cutifs compris entre l'\u00e9l\u00e9ment de rang <code>i</code> inclus et l'\u00e9l\u00e9ment de rang <code>j</code> exclus.</p> <p>Exemples de slicing</p> <pre><code>&gt;&gt;&gt; jours = ['lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche']\n## Les deux premiers jours de la semaine\n&gt;&gt;&gt; jours[0:2]\n['lundi', 'mardi']\n## On peut omettre le 0\n&gt;&gt;&gt; jours[:2]\n['lundi', 'mardi']\n## Du mardi au vendredi\n&gt;&gt;&gt; jours[1:5]\n['mardi', 'mercredi', 'jeudi', 'vendredi']\n## Du jeudi jusqu'\u00e0 la fin\n&gt;&gt;&gt; jours[3:]\n['jeudi', 'vendredi', 'samedi', 'dimanche']\n## Tout sauf le dimanche\n&gt;&gt;&gt; jours[:-1]\n['lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi']\n</code></pre> <p>Info</p> <p>Dans le cas du slicing, il n'y a pas d'erreur d'indexation. Par exemple:</p> <pre><code>&gt;&gt;&gt; lst = [1, 2, 3]\n&gt;&gt;&gt; lst[2021:]\n[]\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/1_listes/#liste-en-comprehension-en-python","title":"Liste en compr\u00e9hension en Python","text":"<p>Info</p> <p>Il est possible et \u00e9l\u00e9gant de construire une liste en compr\u00e9hension avec le langage Python. C'est tr\u00e8s pratique pour cr\u00e9er, transformer ou filtrer une liste.</p> <p>Exemples de listes en compr\u00e9hension</p> <pre><code>&gt;&gt;&gt; nombres = [k for k in range(10)]\n&gt;&gt;&gt; nombres\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n</code></pre> <p>Il est bien s\u00fbr possible d'agir sur le param\u00e8tre :</p> <pre><code>&gt;&gt;&gt; carres_parfaits = [k**2 for k in range(10)]\n&gt;&gt;&gt; carres_parfaits\n[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n</code></pre> <p>Filtrage</p> <p>Ajouter une condition de filtrage permet de ne s\u00e9lectionner que certains \u00e9l\u00e9ments de la liste.</p> <p>Exemples de filtrages</p> <pre><code>&gt;&gt;&gt; c = [n for n in carres_parfaits if n % 3 == 0]\n&gt;&gt;&gt; c\n[0, 9, 36, 81]\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/1_listes/#matrices-les-listes-de-listes-en-python","title":"Matrices: les listes de listes en Python","text":"<p>Cr\u00e9ation d'une liste de listes</p> <p>Un tableau \u00e0 double entr\u00e9e, appel\u00e9 matrice, peut \u00eatre repr\u00e9sent\u00e9 par une liste de listes.</p> <p>Exemples de matrices</p> <p> 7 9 5 2 </p> <pre><code>L = [[7, 9], [5, 2]]\n</code></pre> <p>On peut aussi \u00e9crire sur plusieurs lignes pour plus de confort visuel:</p> <pre><code>L = [[7, 9],\n[5, 2]]\n</code></pre> <p>Exemple du jeu de morpion</p> <p></p> <p>On peut repr\u00e9senter ce tableau par une liste de listes:</p> <pre><code>morpion = [['X', ' ', ' '], ['X', ' ', ' '], ['O', 'O', ' ']]\n</code></pre> <p>Bien s\u00fbr on peut mettre sur plusieurs lignes:</p> <pre><code>morpion = [['X', ' ', ' '],\n['X', ' ', ' '],\n['O', 'O', ' ']]\n</code></pre> <p>Convention sur les lignes et les colonnes</p> <p>Par convention, les lignes sont not\u00e9es avec l'indice \\(i\\) et les colonnes sont not\u00e9es avec \\(j\\).</p> <p>Exemples d'acc\u00e8s aux \u00e9l\u00e9ments des matrices</p> <pre><code>morpion[i][j] # ligne d'indice i, colonne d'indice j\nmorpion[0][0] # ligne 1, colonne 1\nmorpion[0][0] # 'X'\nmorpion[2][1] # 'O'\nmorpion[1][2] # ' '\n</code></pre> <p>On suppose que le joueur 'X' veuille emp\u00eacher le joueur 'O' de gagner:</p> <pre><code>morpion[2][2] = 'X'\n# morpion = [['X', ' ', ' '],\n#           ['X', ' ', ' '],\n#           ['O', 'O', 'X']]\n</code></pre> <p>Matrices en compr\u00e9hension</p> <p>On peut g\u00e9n\u00e9rer des matrices en compr\u00e9hension</p> <p>Exemple de matrice en compr\u00e9hension</p> <pre><code>&gt;&gt;&gt; matrice = [[i+j for j in range(3)] for i in range(3)]\n&gt;&gt;&gt; matrice\n[[0, 1, 2], [1, 2, 3], [2, 3, 4]]\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/dictionnaires/","title":"Les dictionnaires en Python","text":""},{"location":"1_premiere_nsi/types_construits/dictionnaires/#definition-dun-dictionnaire-en-python","title":"D\u00e9finition d'un dictionnaire en Python","text":"<p>Dictionnaire</p> <p>Un dictionnaire est une collection non ordonn\u00e9e d'\u00e9l\u00e9ments.</p> <p>Ces \u00e9l\u00e9ments sont constitu\u00e9s d'une cl\u00e9 associ\u00e9e \u00e0 une valeur.</p> <p>Cl\u00e9s</p> <p>Les cl\u00e9s peuvent \u00eatre de n'importe quel type non-mutable: entier, cha\u00eene de caract\u00e8re, p-uplet.</p>"},{"location":"1_premiere_nsi/types_construits/dictionnaires/#creation-dun-dictionnaire-en-python","title":"Cr\u00e9ation d'un dictionnaire en Python","text":"<p>Cr\u00e9ation d'un dictionnaire</p> <p>Un nouveau dictionnaire est cr\u00e9\u00e9 par affectation et n\u00e9cessite l'utilisation d'accolades, ce qui la diff\u00e9rencie des listes et des p-iplet.</p> <p>Une valeur est associ\u00e9e \u00e0 une cl\u00e9 selon la syntaxe <code>cl\u00e9: valeur</code></p> <p>Exemple:</p> <pre><code>annuaire = {10: 'Paul', 20: 'Tom', 30: 'Nadia'}\n</code></pre> <p>Dans cet exemple, les cl\u00e9s sont des entiers: 10, 20, 30.</p> <p>La valeur associ\u00e9e \u00e0 la cl\u00e9 20 est: 'Tom'</p> <p>Dictionnaire vide</p> <p>Le dictionnaire vide est <code>{}</code></p>"},{"location":"1_premiere_nsi/types_construits/dictionnaires/#acces-aux-elements-dun-dictionnaire-en-python","title":"Acc\u00e8s aux \u00e9l\u00e9ments d'un dictionnaire en Python","text":"<p>Acc\u00e8s grace aux cl\u00e9s</p> <p>Les \u00e9l\u00e9ments du dictionnaire ne sont pas index\u00e9s.</p> <p>On acc\u00e8de \u00e0 une valeur grace \u00e0 la cl\u00e9 qui lui est associ\u00e9e.</p> <p>Danger</p> <p>Les cl\u00e9s d'un dictionnaire doivent \u00eatre toutes diff\u00e9rentes.</p> <p>Exemple:</p> <pre><code># On imagine un panier de fruits contenant\n# 2 pommes, 2 oranges, 3 fraises et 1 banane\npanier = {'pomme': 2, 'orange': 2, 'fraise': 3, 'banane': 1}\npanier['pomme'] # 2\npanier['fraise'] # 3\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/dictionnaires/#modification-du-dictionnaire-en-python","title":"Modification du dictionnaire en Python","text":"<p>Mutable</p> <p>Un dictionnaire est un objet mutable.</p> <p>Exemple:</p> <pre><code>panier = {'pomme': 2, 'orange': 2, 'fraise': 3, 'banane': 1}\npanier['banane'] = 5\nprint(panier)\n# {'pomme': 2, 'orange': 2, 'fraise': 3, 'banane': 5}\n</code></pre> <p>Ajout d'une cl\u00e9</p> <p>On peut ajouter une cl\u00e9 dans un dictionnaire</p> <p>Par exemple:</p> <pre><code>panier = {'pomme': 2, 'orange': 2, 'fraise': 3, 'banane': 1}\npanier['kiwi'] = 5\nprint(panier)\n# {'pomme': 2, 'orange': 2, 'fraise': 3, 'banane': 1, 'kiwi': 5}\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/dictionnaires/#methodes-specifiques-sur-les-dictionnaires-en-python","title":"M\u00e9thodes sp\u00e9cifiques sur les dictionnaires en Python","text":"<p>La m\u00e9thode items()</p> <p>La m\u00e9thode <code>items()</code> renvoie la collection de tous les objets du dictionnaire.</p> <pre><code>panier = {'pomme': 2, 'orange': 2, 'fraise': 3, 'banane': 1}\n# m\u00e9thode items()\nfor elem in panier.items(): # (1)\nprint(elem)\n# ('pomme', 2)\n# ('orange', 2)\n# ('fraise', 3)\n# ('banane', 1)\n</code></pre> <ol> <li>La m\u00e9thode <code>items()</code> renvoie la collection de tous les objets du dictionnaire.</li> </ol> <p>La m\u00e9thode keys()</p> <p>La m\u00e9thode <code>keys()</code> renvoie la collection it\u00e9rable de tous les cl\u00e9s du dictionnaire.</p> <pre><code>panier = {'pomme': 2, 'orange': 2, 'fraise': 3, 'banane': 1}\n# m\u00e9thode keys()\nfor cle in panier.keys(): # (1)\nprint(cle)\n# 'pomme'\n# 'orange'\n# 'fraise'\n# 'banane'\n</code></pre> <ol> <li>La m\u00e9thode <code>keys()</code> renvoie la collection it\u00e9rable de tous les cl\u00e9s du dictionnaire.</li> </ol> <p>La m\u00e9thode keys()</p> <p>La m\u00e9thode <code>values()</code> renvoie la collection it\u00e9rable de toutes les valeurs du dictionnaire.</p> <pre><code>panier = {'pomme': 2, 'orange': 2, 'fraise': 3, 'banane': 1}\n# m\u00e9thode values()\nfor valeur in panier.values(): # (1)\nprint(valeur)\n# 2\n# 2\n# 3\n# 1\n</code></pre> <ol> <li>La m\u00e9thode <code>values()</code> renvoie la collection it\u00e9rable de toutes les valeurs du dictionnaire.</li> </ol>"},{"location":"1_premiere_nsi/types_construits/dictionnaires/#exemples-dutilisation-scripts-python","title":"Exemples d'utilisation. Scripts Python","text":"<p>Test d'appartenance d'une cl\u00e9:</p> <pre><code>panier = {'pomme': 2, 'orange': 2, 'fraise': 3, 'banane': 1}\n'pomme' in panier # True\n'kiwi' in panier # False\n</code></pre> <p>Affichage format\u00e9:</p> <pre><code># Affichage des cl\u00e9s et des valeurs\nfor cle in panier.keys(): # (1)\nprint(f\"J'ai {panier[cle]} {cle}(s) dans mon panier.\")\n</code></pre> <ol> <li>La m\u00e9thode <code>keys()</code> renvoie la collection it\u00e9rable de tous les cl\u00e9s du dictionnaire.</li> </ol> <p>Affichage:</p> <pre><code>J'ai 2 pomme(s) dans mon panier.\nJ'ai 2 orange(s) dans mon panier.\nJ'ai 3 fraise(s) dans mon panier.\nJ'ai 1 banane(s) dans mon panier.\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/tuple/","title":"Les p-uplet en Python","text":""},{"location":"1_premiere_nsi/types_construits/tuple/#definition-des-tuple-en-python","title":"D\u00e9finition des tuple en Python","text":"<p>p-uplet</p> <p>Un p-uplet (ou tuple en anglais) est une collection ordonn\u00e9e d'\u00e9l\u00e9ments, appel\u00e9s composantes ou termes. Chaque terme peut \u00eatre de n'importe quel type.</p> <p>tuple</p> <p>Le p-uplet est de type <code>tuple</code>.</p> <p>non mutable</p> <p>Les termes du p-uplet ne sont pas modifiables par affectation.</p> <p>Un <code>tuple</code>est non-mutable</p>"},{"location":"1_premiere_nsi/types_construits/tuple/#creation-dun-p-uplet-en-python","title":"Cr\u00e9ation d'un p-uplet en Python","text":"<p>Cr\u00e9ation d'un tuple</p> <p>En langage Python, les termes d'un p-uplet sont s\u00e9par\u00e9s par des virgules. Les parenth\u00e8ses ne sont pas obligatoires mais sont fortement conseill\u00e9es pour la lisibilit\u00e9 du code.</p> <p>Exemples</p> <pre><code>t = (1, 8, 5)\nprint(type(t)) # &lt;class 'tuple'&gt;\n# ou bien, mais fortement d\u00e9conseill\u00e9.\n# Mis ici en exemple car cela arrive dans certains codes...\nt = 1, 8, 5\n</code></pre> <p>tuple vide</p> <p>Le tuple vide est <code>(, )</code></p>"},{"location":"1_premiere_nsi/types_construits/tuple/#indexation-des-elements-du-p-uplet-en-python","title":"Indexation des \u00e9l\u00e9ments du p-uplet en Python","text":"<p>Indexation</p> <p>L'indexation fonctionne exactement comme avec les listes.</p> <pre><code>pointA = (3, -4)\npointA[0] # 3\npointA[1] # -4\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/tuple/#modification-dun-p-uplet-en-python","title":"Modification d'un p-uplet en Python","text":"<p>Danger</p> <p>Il n'est pas possible de modifier par affectation les termes d'un p-uplet apr\u00e8s sa cr\u00e9ation.</p> <p>Un p-uplet est dit non-mutable</p> <p>Exemple</p> <pre><code>t= (1, 2, 8)\nt[0] = 12 # TypeError: 'tuple' object does not support item assignment\n</code></pre>"},{"location":"1_premiere_nsi/types_construits/tuple/#fonction-renvoyant-un-p-uplet-de-valeurs-en-python","title":"Fonction renvoyant un p-uplet de valeurs en Python","text":"<p>En programmation fonctionnelle, il est indispensable d'utiliser des fonctions pouvant renvoyer un ensemble de valeurs r\u00e9utilisables, contenus dans un p-uplet ou une liste.</p> <p>Par exemple, on souhaite calculer les coordonn\u00e9es du milieu I d'un segment [AB]:</p> <pre><code>def milieu(A, B):\nxI = (A[0]+B[0])/2\nyI = (A[1]+B[1])/2\nreturn (xI, yI)\nA = (2, 1)\nB = (3, 5)\nI = milieu(A, B)\nprint(I) # (2.5, 3.0)\n</code></pre>"},{"location":"2_terminales_nsi/","title":"Terminale NSI","text":""},{"location":"2_terminales_nsi/#programme-officiel","title":"Programme officiel","text":"<p>https://cache.media.education.gouv.fr/file/SPE8_MENJ_25_7_2019/93/3/spe247_annexe_1158933.pdf</p>"},{"location":"2_terminales_nsi/#logiciels-a-installer","title":"Logiciels \u00e0 installer:","text":"<ul> <li> <p>Python Anaconda: https://www.anaconda.com/products/individual#Downloads</p> </li> <li> <p>Visual Studio Code: https://code.visualstudio.com/Download</p> </li> </ul>"},{"location":"2_terminales_nsi/#bibliographie","title":"Bibliographie","text":"<ul> <li>Num\u00e9rique et Sciences Informatiques, Terminale, T. BALABONSKI, S. CONCHON, J.-C. FILLIATRE, K. NGUYEN, \u00e9ditions ELLIPSES.</li> <li>Pr\u00e9pabac NSI, Terminale, G.CONNAN, V.PETROV, G.ROZSAVOLGYI, L.SIGNAC, \u00e9ditions HATIER.</li> </ul>"},{"location":"2_terminales_nsi/1_poo/","title":"Programmatiion Orient\u00e9e Objet","text":""},{"location":"2_terminales_nsi/1_poo/#programme-officiel","title":"Programme officiel","text":"<p>Contenu</p> <p>Vocabulaire de la programmation objet :</p> <ul> <li>classes</li> <li>attributs</li> <li>m\u00e9thodes</li> <li>objets</li> </ul> <p>Capacit\u00e9s attendues</p> <ul> <li>\u00c9crire la d\u00e9finition d\u2019une classe.</li> <li>Acc\u00e9der aux attributs et m\u00e9thodes d\u2019une classe.</li> </ul> <p>Commentaire</p> <p>On n\u2019aborde pas ici tous les aspects de la programmation objet comme le polymorphisme et l\u2019h\u00e9ritage.</p>"},{"location":"2_terminales_nsi/1_poo/#le-paradigme-objet","title":"Le paradigme objet","text":"<p>Le paradigme objet en bref</p> <ul> <li>Un programme est un ensemble d\u2019objets</li> <li>La seule fa\u00e7on d\u2019interagir avec un objet est d\u2019appeler l\u2019une de ses m\u00e9thodes</li> </ul> <p>Objets</p> <p>Un objet regroupe :</p> <ul> <li>des attributs (contenant des valeurs)</li> <li>des m\u00e9thodes (des op\u00e9rations/fonctions) relatives \u00e0 cet objet.</li> </ul> <p>Un objet est un \u00e9l\u00e9ment issu d'une classe. On parle aussi d'instance de la classe.</p> <p>Classes</p> <p>Les classes sont des \" moules \" permettant de produire des objets en s\u00e9rie. On produit un objet en appelant le constructeur de la classe.</p>"},{"location":"2_terminales_nsi/1_poo/#imperatif-et-objet","title":"Imp\u00e9ratif et objet","text":"<p>Imp\u00e9ratif (Python)</p> <pre><code>l=[1,2,3]\ndef somme(l):\ns=0\nfor e in l:\ns=s + e\nreturn s\nprint(somme(l))\n</code></pre> <p>Objet (Python)</p> <pre><code>#D\u00e9finition de la classe\nclass listeEntier():\ndef __init__(self): # (1)\nself.v = [] # (2)\ndef ajouter(self, elt): # (3)\nself.v.append(elt)\ndef somme(self):\ns = 0\nfor e in self.valeur:\ns = s + e\nreturn s\n#Utilisation de la classe\nl = listeEntier() # (4)\nl.ajouter(1)     # (5)\nl.ajouter(2)\nl.ajouter(3)\nprint(l.somme())\n</code></pre> <ol> <li>Constructeur</li> <li>Un attribut</li> <li>Une m\u00e9thode</li> <li><code>l</code>est une instance de la classe <code>listeEntier</code></li> <li>Appel de la m\u00e9thode ajout</li> </ol>"},{"location":"2_terminales_nsi/1_poo/#quand-a-t-on-besoin-de-la-programmation-objet","title":"Quand a-t-on besoin de la programmation objet ?","text":"<ol> <li>Quand on manipule des donn\u00e9es de structures diff\u00e9rentes...</li> <li>... mais ayant des points communs.</li> <li>Quand des grandes familles de donn\u00e9es se d\u00e9gagent.    Ces \"familles\" constitueront nos classes...</li> </ol>"},{"location":"2_terminales_nsi/1_poo/#avantages-de-le-programmation-objet","title":"Avantages de le programmation objet","text":"<p>Encapsulation</p> <p>Encapsulation: pour une meilleure structuration du code.</p> <p>Dans le code du programme, on regroupe sous un m\u00eame nom (celui de la classe) les donn\u00e9es et les fonctions relatives \u00e0 ces donn\u00e9es.</p> <p>L'encapsulation est un principe qui consiste \u00e0 regrouper des donn\u00e9es avec un ensemble de m\u00e9thodes permettant de les lire ou de les manipuler dans le but de cacher ou de prot\u00e9ger certaines de ces donn\u00e9es.</p> <ul> <li>Les m\u00e9thodes et donn\u00e9es internes (celles plus ou moins \"cach\u00e9e\" \u00e0 l'utilisateur) sont dites priv\u00e9es.</li> <li>Les m\u00e9thodes et donn\u00e9es accessibles \u00e0 tout utilisateur (celles que les utilisateurs de la classe connaissent) sont dites publiques.</li> </ul> <p>Abstraction</p> <p>Abstraction: pour une programmation qui s\u2019abstrait des d\u00e9tails.</p> <p>Si des objets de classes diff\u00e9rentes partagent une m\u00eame m\u00e9thode, on peut appeler celle-ci sans conna\u00eetre, a priori, la classe/type de l\u2019objet.</p>"},{"location":"2_terminales_nsi/1_poo/#prive-public","title":"Priv\u00e9 - Public","text":"<p>Priv\u00e9/Public en Python</p> <p>En Python, il y a une convention de nommage : un attribut priv\u00e9 est toujours pr\u00e9fix\u00e9 (c'est-\u00e0-dire pr\u00e9c\u00e9d\u00e9) de deux espaces soulign\u00e9s (tiret du bas, celui du 8).</p> <pre><code>self.attribut1 # Public\nself.__attribut2 # Priv\u00e9\n</code></pre> <p>Typage (typage dynamique en Python)</p> <p>A l\u2019ex\u00e9cution, on peut distinguer des objets produits par diff\u00e9rentes classes.</p> <p>Exemple en Python:</p> <pre><code>class Point:\ndef __init__(self, x, y):\nself.x = x\nself.y = y\nA = Point(2, 3)\nprint(type(A)) # &lt;class '__main__.Point'&gt;\n</code></pre>"},{"location":"2_terminales_nsi/1_poo/#liens","title":"Liens","text":"<p>http://monlyceenumerique.fr/nsi_terminale/sd/sd2_programmation_objet.php</p>"},{"location":"2_terminales_nsi/2_recursivite/","title":"R\u00e9cursivit\u00e9","text":""},{"location":"2_terminales_nsi/2_recursivite/#programme-officiel","title":"Programme officiel","text":"<p>Capacit\u00e9s attendues</p> <ul> <li>\u00c9crire un programme r\u00e9cursif.</li> <li>Analyser le fonctionnement d'un programme r\u00e9cursif.</li> </ul>"},{"location":"2_terminales_nsi/2_recursivite/#principe-recursif","title":"Principe r\u00e9cursif","text":"<p>Pour r\u00e9soudre un probl\u00e8me, on se ram\u00e8ne \u00e0 la r\u00e9solution d'un probl\u00e8me similaire mais moins complexe, jusqu'\u00e0 l'obtention d'un probl\u00e8me \u00e9l\u00e9mentaire.</p> <p>Les diff\u00e9rents probl\u00e8mes interm\u00e9diaires sont stock\u00e9s dans une pile que l'on d\u00e9pilera</p> <p>Un peu d'histoire</p> <p>Les premiers langages de programmation qui ont autoris\u00e9 l'emploi de la r\u00e9cursivit\u00e9 sont LISP, d\u00e9velopp\u00e9 \u00e0 partir de 1958, et Algol 60 (\u00e0 partir de 1960). Depuis, tous les langages de programmation g\u00e9n\u00e9raux r\u00e9alisent une impl\u00e9mentation de la r\u00e9cursivit\u00e9.</p> <p>D\u00e9finition</p> <p>On qualifie de r\u00e9cursive toute fonction qui s'appelle elle-m\u00eame.</p> <p>Condition d'arr\u00eat</p> <p>Dans toute fonction r\u00e9cursive, il est n\u00e9cessaire d'avoir une condition d'arr\u00eat ; on parle aussi de condition de terminaison.</p> <p>Exemple</p> <pre><code>def puissance_rec(x: float, n: int) -&gt; float:\nif n == 0:\nreturn 1\nelse:\nreturn x*puissance_rec(x, n-1)\n</code></pre> <ul> <li> <p>La condition d'arr\u00eat est : \\(n=0\\) .</p> </li> <li> <p>Cette condition correspond aussi au cas \"simple\" o\u00f9 \\(x^0=1\\) : on conna\u00eet le r\u00e9sultat \u00e0 faire renvoyer par la fonction : 1.</p> </li> </ul> <p>Terminaison</p> <p>Pour s'assurer de la terminaison d'un algorithme r\u00e9cursif, il suffit d'identifier une suite strictement d\u00e9croissante d'entiers positifs ou nuls.</p> <p>Identifier une suite strictement d\u00e9croissante d'entiers positifs ou nuls permet de prouver qu'un algorithme r\u00e9cursif se termine en un nombre d'appels fini. Si cette suite commence \u00e0 \\(n\\), il y aura au maximum \\(n\\) appels r\u00e9cursifs.</p>"},{"location":"2_terminales_nsi/2_recursivite/#recursivite-simple","title":"R\u00e9cursivit\u00e9 simple","text":"<p>R\u00e9cursivit\u00e9 simple</p> <p>Un appel r\u00e9cursif est dit simple si la fonction ne contient qu'un seul appel r\u00e9cursif \u00e0 elle-m\u00eame.</p> <p>Fonction factorielle</p> <p>Un exemple classique de r\u00e9cursivit\u00e9 simple est celui de la fonction factorielle d\u00e9finie math\u00e9matiquement par :</p> \\[ n! =\\left \\{ \\begin{array}{rcl} 0!&amp;=&amp;1 \\\\ n! &amp;= &amp;n \\times (n-1)! \\text{ si } n \\geq 1 \\end{array} \\right. \\] <pre><code>def factorielle(n):\nif n == 0:\nreturn 1\nelse:\nreturn n * factorielle(n-1)\n</code></pre>"},{"location":"2_terminales_nsi/2_recursivite/#recursivite-imbriquee","title":"R\u00e9cursivit\u00e9 imbriqu\u00e9e","text":"<p>r\u00e9cursivit\u00e9 imbriqu\u00e9e</p> <p>Un appel r\u00e9cursif est dit imbriqu\u00e9 si l'appel r\u00e9cursif a comme argument un autre appel r\u00e9cursif \u00e0 la m\u00eame fonction.</p> <p>fonction de MacCarthy</p> <p>Un exemple classique de r\u00e9cursivit\u00e9 imbriqu\u00e9e est celui de la fonction de MacCarthy d\u00e9finie math\u00e9matiquement par :</p> \\[ \\left \\{ \\begin{array}{rcl} f(n)&amp;=&amp;n-10 \\text{ si } n&gt;100 \\\\ f(n)&amp;=&amp; f(f(n+11)) \\text{ si } n \\leq 100 \\end{array} \\right. \\] <pre><code>def carthy(n):\nif n &gt; 100 :\nreturn n - 10\nelse:\nreturn carthy(carthy(n+11))\n</code></pre>"},{"location":"2_terminales_nsi/2_recursivite/#recursivite-multiple","title":"R\u00e9cursivit\u00e9 multiple","text":"<p>r\u00e9cursivit\u00e9 multiple</p> <p>Un appel r\u00e9cursif est dit multiple si la fonction contient plusieurs appels r\u00e9cursifs \u00e0 elle-m\u00eame.</p> <p>Suite de Fibonacci</p> <p>Un exemple classique de r\u00e9cursivit\u00e9 multiple est celui de la fonction de Fibonacci d\u00e9finie math\u00e9matiquement par :</p> \\[ \\left \\{ \\begin{array}{rcl} f(0)&amp;=&amp;1 \\\\ f(1)&amp;=&amp;1 \\\\ f(n) &amp;=&amp; f(n-1)+f(n-2) \\text{ si } n \\geq 2 \\end{array} \\right. \\] <pre><code>def fibonacci(n):\nif n &lt; 2:\nreturn 1\nelse:\nreturn fibonacci(n-1) + fibonacci(n-2)\n</code></pre>"},{"location":"2_terminales_nsi/2_recursivite/#recursivite-croisee","title":"R\u00e9cursivit\u00e9 crois\u00e9e","text":"<p>r\u00e9cursivit\u00e9 crois\u00e9e</p> <p>Un appel r\u00e9cursif est dit crois\u00e9 si 2 fonctions r\u00e9cursives s'appellent mutuellement.</p> <p>Fonctions pairs et impairs</p> <p>Un exemple classique de r\u00e9cursivit\u00e9 crois\u00e9e est celui des fonctions de parit\u00e9 \\(pair\\) et \\(impair\\) d\u00e9finies math\u00e9matiquement par :</p> \\[ \\left \\{ \\begin{array}{rcl} pair(0)&amp; = &amp; Vrai \\\\ pair(n) &amp;=&amp; impair(n-1) \\text{ si } n \\geq 1 \\end{array} \\right. \\] \\[ \\left \\{ \\begin{array}{rcl} impair(0) &amp;=&amp; Faux \\\\ impair(n) &amp;=&amp; pair(n-1) \\text{ si } n \\geq 1 \\end{array} \\right. \\] <pre><code>def pair(n):\nif n == 0:\nreturn True\nelse :\nreturn impair(n-1)\ndef impair(n):\nif n == 0:\nreturn False\nelse:\nreturn pair(n-1)\n</code></pre>"},{"location":"2_terminales_nsi/2_recursivite/#demontrons-que-224","title":"D\u00e9montrons que 2+2=4","text":"<p>Dans l'ensemble des entiers naturels 0, 1, 2, 3, ... on peut d\u00e9finir le successeur d'un nombre de la fa\u00e7on suivante:</p> <p>2' = 3 (qui se lit 2 \"prime\" = 3). Le successeur de 2 est 3.</p> <p>De la m\u00eame fa\u00e7on, 5' = 6 , etc...</p> <p>La d\u00e9finition de l'addition est alors:</p> <p>D\u00e9finition de l'addition dans l'ensemble des entiers naturels</p> <p>Soit \\(n\\) un entier naturel:</p> <ul> <li>\\(n+0=n\\)</li> <li>pour tout \\(m\\) entier naturel, \\(n+m'=(n+m)'\\)</li> </ul> <p>Par cons\u00e9quent, pour monter que \\(2+2=4\\):</p> <p>\\(2+2 = 2+1' = (2+1)' = (2+0')' = ((2+0)')' = ((2)')'=3'=4\\)</p> <p>.... --&gt;</p>"},{"location":"2_terminales_nsi/2_recursivite/#liens","title":"Liens","text":"<p>http://monlyceenumerique.fr/nsi_terminale/lp/lp2_recursivite.php</p> <p>https://iriaf.univ-poitiers.fr/enibook/algorithmic/learning/site/html/recursivite-0-index.html</p>"},{"location":"2_terminales_nsi/3_sql/","title":"Bases de donn\u00e9es et SQL","text":""},{"location":"2_terminales_nsi/3_sql/#aspect-historique","title":"Aspect historique","text":"<p>Histoire des bases de donn\u00e9e</p> <ul> <li>En 1970, Edgar Codd invente le mod\u00e8le relationnel pour les bases de donn\u00e9es.</li> <li>En 1973, premi\u00e8re version du langage SQL (Structured Query Language). C'est un langage de requ\u00eates permettant d'interagir avec une base de donn\u00e9es.</li> <li>En 1979, apparition du premier Syst\u00e8me de Gestion de Base de Donn\u00e9es (sgbd) : Oracle qui fera la fortune de ses trois fondateurs (L. Ellison, E. Oats et B. Miner).</li> <li>En 1995 (et 1996), premi\u00e8re version d'importants sgbd libres}MySQL (et PostGreSQL).</li> <li>En 2020, Le volume mondial de donn\u00e9es stock\u00e9es est estim\u00e9 \u00e0 47 milliards de t\u00e9ra-octets (\\(47 \\times 10^{21}\\) octets) et a \u00e9t\u00e9 multipli\u00e9 par 20 en 10 ans.</li> </ul>"},{"location":"2_terminales_nsi/3_sql/#outils-traditionnels","title":"Outils traditionnels","text":"<p>Apport des bases de donn\u00e9es</p> <p>Les bases de donn\u00e9es corrigent de nombreux d\u00e9fauts des outils traditionnels de gestion des donn\u00e9es. En effet :</p> <ul> <li>Les acc\u00e8s simultan\u00e9s par plusieurs programmes aux m\u00eames donn\u00e9es pouvaient g\u00e9n\u00e9rer des conflits.</li> <li>Pour lire (ou modifier) les donn\u00e9es il fallait savoir comment elles \u00e9taient repr\u00e9sent\u00e9es.</li> <li>Les utilisateurs devaient s'assurer de  l'int\u00e9grit\u00e9 des donn\u00e9es avant de les stocker. C'est \u00e0 dire que c'est l'utilisateur qui \u00e9tait charg\u00e9 du contr\u00f4le de la validit\u00e9 de ses donn\u00e9es.</li> </ul>"},{"location":"2_terminales_nsi/3_sql/#principes","title":"Principes","text":"<p>Principes des bases de donn\u00e9es<p>Plusieurs aspects des bases de donn\u00e9es viennent corriger les limitations des outils traditionnels :</p> <ul> <li>Principe d'unicit\u00e9 : un enregistrement doit \u00eatre unique (une donn\u00e9e qui appara\u00eet plusieurs fois est dite redondante).</li> </ul> <p>Ici intervient la notion de cl\u00e9 primaire, c'est \u00e0 dire dans une table une identification unique de l'enregistrement.</p> <ul> <li>Principe d'int\u00e9grit\u00e9 : le contr\u00f4le de la validit\u00e9 des donn\u00e9es est effectu\u00e9 par le sgbd.</li> </ul> <p>Ici intervient la notion de domaine, c'est \u00e0 dire qu'on peut pr\u00e9ciser que les valeurs d'un champ doivent \u00eatre d'un certain types (par exemple entier, flottant, chaine de caract\u00e8res, ...) et appartenir \u00e0 un certain ensemble de valeurs  : le domaine.</p> <ul> <li>Principe d'ind\u00e9pendance logique : les utilisateurs acc\u00e8dent aux donn\u00e9es sans se soucier de la fa\u00e7on dont elles sont repr\u00e9sent\u00e9es ou cod\u00e9es dans la base.</li> </ul> </p> <p>Exemple</p> <p>Prenons l'exemple suivant :</p> Nom Pr\u00e9nom Naissance Pascal Blaise 1623 Lovelace Ada 1815 Boole George 1815 <ul> <li> <p>Il est certes peu probable (mais pas impossible) que deux personnes portant les m\u00eames noms et pr\u00e9noms naissent la m\u00eame ann\u00e9e, afin de respecter le principe d'unicit\u00e9, nous devons adjoindre \u00e0 chaque enregistrement un champ (par exemple <code>id</code>) unique qui servira de cl\u00e9 primaire.</p> </li> <li> <p>Les champs  <code>Nom</code> et <code>Pr\u00e9nom</code> sont au format texte, le champ <code>Naissance</code> est un entier.</p> </li> <li> <p>On peut par exemple pr\u00e9ciser les contraintes d'int\u00e9grit\u00e9 suivantes : <code>Nom</code> doit \u00eatre non vide, <code>Naissance</code> doit \u00eatre sup\u00e9rieur \u00e0 0.</p> </li> </ul>"},{"location":"2_terminales_nsi/3_sql/#schema-relationnel","title":"Sch\u00e9ma relationnel","text":"<p>Sch\u00e9ma relationnel<p>Le sch\u00e9ma relationnel d'une base de donn\u00e9es pr\u00e9sente les tables de cette base sous la forme de liste ou de tableau.</p> <p>Dans les deux cas, on pr\u00e9cise la cl\u00e9 primaire de la table en soulignant l'attribut.</p> <p>On indique aussi parfois le type des attributs.</p> </p> <p>Exemple</p> <p>Le sch\u00e9ma relationnel de la table <code>personne</code> peut s'\u00e9crire sous forme de liste :</p> <p>personnes (<code>id</code> : <code>int</code>, <code>Nom</code> : <code>text</code>, <code>Prenom</code> : <code>text</code>, <code>Naissance</code> : <code>int</code>)</p>"},{"location":"2_terminales_nsi/3_sql/#bases-de-sql","title":"Bases de SQL","text":""},{"location":"2_terminales_nsi/3_sql/#select-et-from","title":"SELECT et FROM","text":"<p>SELECT et FROM</p> <ul> <li>Pour r\u00e9cup\u00e9rer la totalit\u00e9 des champs d'une table <code>table</code> on utilise la syntaxe :</li> </ul> <pre><code>SELECT *\nFROM table;\n</code></pre> <ul> <li>Pour r\u00e9cup\u00e9rer simplement les champs <code>champ1</code>, <code>champ2</code>, ... on utilise :</li> </ul> <pre><code>SELECT champ1, champ2\nFROM table;\n</code></pre> <p>Exemple</p> <pre><code>SELECT Nom, Naissance\nFROM personne;\n</code></pre> Nom Naissance Pascal 1623 Lovelace 1815 Boole 1815"},{"location":"2_terminales_nsi/3_sql/#where","title":"WHERE","text":"<p>Clause WHERE<p>Une instruction <code>SELECT</code> peut \u00eatre suivie d'une clause <code>WHERE</code> qui permet de rechercher les enregistrements correspondants \u00e0 certains conditions. Ces conditions s'expriment \u00e0 l'aide des op\u00e9rateurs suivant :</p> <ul> <li> <p>Comparaison : <code>=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>,  <code>&lt;&gt;</code> (diff\u00e9rent)  et <code>BETWEEN</code> (entre)</p> </li> <li> <p>Logique : <code>AND</code>, <code>OR</code> et <code>NOT</code></p> </li> <li> <p>Mod\u00e8le de chaines de caract\u00e8res : <code>LIKE</code> o\u00f9 <code>%</code> d\u00e9signe n'importe quel suite de caract\u00e8res et <code>_</code> un unique caract\u00e8re.</p> </li> </ul> </p> <p>Exemples</p> <p>Pour chercher dans la table les personnes n\u00e9es apr\u00e8s 1789 :</p> <pre><code>SELECT *\nFROM personne\nWHERE naissance &gt; 1789;\n</code></pre> <p>Pour chercher dans la table les personnes dont la deuxi\u00e8me lettre du nom est un e :</p> <pre><code>SELECT *\nFROM personne\nWHERE nom LIKE \"_e%\";\n</code></pre>"},{"location":"2_terminales_nsi/3_sql/#classement-des-resultats","title":"Classement des r\u00e9sultats","text":"<p>Clause ORDER BY</p> <p>Une instruction <code>SELECT</code> peut \u00eatre suivie d'une clause <code>ORDER BY</code> qui permet de classer les enregistrements selon un ou plusieurs champs.</p> <p>Cette clause est elle m\u00eame suivie de :</p> <ul> <li> <p><code>ASC</code> pour indiquer un classement par ordre croissant</p> </li> <li> <p><code>DESC</code> pour indiquer un classement par ordre d\u00e9croissant</p> </li> </ul> <p>La valeur par d\u00e9faut est <code>ASC</code></p> <p>Exemple</p> <p>Pour classer par ordre alphab\u00e9tique nom puis pr\u00e9nom notre table exemple :</p> <pre><code>SELECT *\nFROM personne\nORDER BY Nom, Prenom ASC;\n</code></pre>"},{"location":"2_terminales_nsi/3_sql/#clauses-distinct-et-limit","title":"Clauses DISTINCT et LIMIT","text":"<p>Clauses DISCTINCT et LIMIT</p> <ul> <li> <p>Une instruction <code>SELECT</code> peut \u00eatre directement suivie d'une clause <code>DISTINCT champ</code>  qui indique que <code>champ</code> ne doit appara\u00eetre qu'une fois dans les r\u00e9sultats</p> </li> <li> <p>Une instruction <code>SELECT</code> peut \u00eatre suivie d'une clause <code>LIMIT</code> qui indique le nombre maximal d'enregistrement \u00e0 renvoyer. Cette clause est particuli\u00e8rement utile en relation avec <code>ORDER BY</code>.</p> </li> </ul> <p>Exemples</p> <ul> <li>Pour afficher les ann\u00e9es de naissance sans r\u00e9p\u00e9titions :</li> </ul> <pre><code>SELECT DISTINCT naissance\nFROM personne;\n</code></pre> <ul> <li>Pour afficher les trois plus jeunes personnes de la table :</li> </ul> <pre><code>SELECT *\nFROM personne\nORDER BY naissance DESC\nLIMIT 3;\n</code></pre>"},{"location":"2_terminales_nsi/3_sql/#agregation","title":"Agr\u00e9gation","text":"<p>Agr\u00e9gation</p> <p>Le langage SQL offre des op\u00e9rateurs appel\u00e9s <code>fonction d'agr\u00e9gation</code> permettant de calculer une valeur \u00e0 partir d'un ensemble d'enregistrement :</p> <ul> <li> <p><code>MIN</code>pour obtenir le minimum (d'un champ sur un ensemble d'enregistrement)</p> </li> <li> <p><code>MAX</code>pour obtenir le maximum</p> </li> <li> <p><code>SUM</code>pour obtenir la somme</p> </li> <li> <p><code>AVG</code> pour obtenir la moyenne</p> </li> <li> <p><code>COUNT</code> our compter le nombre d'enregistrements</p> </li> </ul> <p>Exemple</p> <p>Pour avoir la personne la plus \u00e2g\u00e9e pr\u00e9sente dans la table :</p> <pre><code>SELECT MIN(naissance), nom, prenom\nFROM personne;\n</code></pre>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/","title":"Structures de donn\u00e9es","text":""},{"location":"2_terminales_nsi/4_Structures_de_donnees/#programme-officiel","title":"Programme officiel","text":"<p>Contenu</p> <p>Structures de donn\u00e9es, interface et impl\u00e9mentation.</p> <ul> <li>classes</li> <li>attributs</li> <li>m\u00e9thodes</li> <li>objets</li> </ul> <p>Capacit\u00e9s attendues</p> <ul> <li>Sp\u00e9cifier une structure de donn\u00e9es par son interface</li> <li>Distinguer interface et impl\u00e9mentation</li> <li>Ecrire plusieurs impl\u00e9mentations d'une m\u00eame structure de donn\u00e9es</li> </ul> <p>Commentaire</p> <p>L'abstraction des structures de donn\u00e9es est introduite apr\u00e8s plusieurs impl\u00e9mentations d'une structure simple.</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/#preambule-interface-implementation","title":"Pr\u00e9ambule : interface \u2260 impl\u00e9mentation","text":"<p>Les structures que nous allons voir peuvent s'envisager sous deux aspects :</p> <ul> <li>le c\u00f4t\u00e9 utilisateur, qui utilisera une interface pour manipuler les donn\u00e9es.</li> <li>le c\u00f4t\u00e9 concepteur, qui aura choisi une impl\u00e9mentation pour construire la structure de donn\u00e9es.</li> </ul> <p>Un exemple d'interface et d'impl\u00e9mentation</p> <ul> <li> <p>Le volant et les p\u00e9dales d'une voiture constituent une partie de son interface.</p> </li> <li> <p>L'impl\u00e9mentation va d\u00e9signer tous les m\u00e9canismes techniques qui sont mis en \u0153uvre pour que (par exemple) le mouvement de rotation du volant aboutisse \u00e0 un changement de direction des roues.</p> </li> <li> <p>La standardisation des interfaces fait qu'un utilisateur peut passer sans probl\u00e8me d'une voiture \u00e0 une autre, m\u00eame si l'impl\u00e9mentation est compl\u00e8tement diff\u00e9rente.</p> </li> </ul> <p>Nous avons d\u00e9j\u00e0 abord\u00e9 ces deux aspects lors de la d\u00e9couverte de la Programmation Orient\u00e9e Objet. Le principe d'encapsulation fait que l'utilisateur n'a qu'\u00e0 conna\u00eetre l'existence des m\u00e9thodes disponibles, et non pas le contenu technique de celle-ci. Cela permet notamment de modifier le contenu technique (l'impl\u00e9mentation) sans que les habitudes de l'utilisateur (l'interface) ne soient chang\u00e9es.</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/#structures-de-donnees-lineaires","title":"Structures de donn\u00e9es lin\u00e9aires","text":""},{"location":"2_terminales_nsi/4_Structures_de_donnees/#a-chaque-donnee-sa-structure","title":"\u00c0 chaque donn\u00e9e sa structure","text":"<p>En informatique comme dans la vie courante, il est conseill\u00e9 d'adapter sa mani\u00e8re de stocker et de traiter des donn\u00e9es en fonction de la nature de celles-ci :</p> <ul> <li>Le serveur d'un caf\u00e9, charg\u00e9 de transporter les boissons du comptoir aux tables des clients, n'utilisera pas un sac en plastique pour faire le transport : il pr\u00e9f\u00e8rera un plateau.</li> <li>Le chercheur de champignons, lui, n'utilisera pas un plateau pour stocker ses trouvailles : il pr\u00e9f\u00e8rera un panier.</li> <li>Pour stocker des chaussettes, on pr\u00e9f\u00e8rera les entasser dans un tiroir (apr\u00e8s les avoir appair\u00e9es), plut\u00f4t que de les suspendre \u00e0 des cintres.</li> </ul> <p>De m\u00eame en informatique, pour chaque type de donn\u00e9es, pour chaque utilisation pr\u00e9vue, une structure particuli\u00e8re de donn\u00e9es se rev\u00e8lera (peut-\u00eatre) plus adapt\u00e9e qu'une autre.</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/#donnees-lineaires","title":"Donn\u00e9es lin\u00e9aires","text":"<p>Int\u00e9ressons nous par exemple aux donn\u00e9es lin\u00e9aires. Ce sont des donn\u00e9es qui ne comportent pas de hi\u00e9rarchie : toutes les donn\u00e9es sont de la m\u00eame nature et ont le m\u00eame r\u00f4le. Par exemple, un relev\u00e9 mensuel de temp\u00e9ratures, la liste des \u00e9l\u00e8ves d'une classe, un historique d'op\u00e9rations bancaires...</p> <p>Ces donn\u00e9es sont \u00abplates\u00bb, n'ont pas de sous-domaines : la structure de liste para\u00eet parfaitement adapt\u00e9e.</p> <p>Lorsque les donn\u00e9es de cette liste sont en fait des couples (comme dans le cas d'une liste de noms/num\u00e9ros de t\u00e9l\u00e9phone), alors la structure la plus adapt\u00e9e est sans doute celle du dictionnaire.</p> <p>Les listes et les dictionnaires sont donc des exemples de structures de donn\u00e9es lin\u00e9aires.</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/#donnees-non-lineaires","title":"Donn\u00e9es non-lin\u00e9aires","text":"<p>M\u00eame si ce n'est pas l'objet de ce cours, donnons des exemples de structures adapt\u00e9es aux donn\u00e9es non-lin\u00e9aires :</p> <p>Si une liste de courses est subdivis\u00e9e en \"rayon frais / bricolage / papeterie\" et que le rayon frais est lui-m\u00eame s\u00e9par\u00e9 en \"laitages / viandes / fruits &amp; l\u00e9gumes\", alors une structure d'arbre sera plus adapt\u00e9e pour la repr\u00e9senter. Les structures arborescentes seront vues plus tard en Terminale.</p> <p>Enfin, si nos donn\u00e9es \u00e0 \u00e9tudier sont les relations sur les r\u00e9seaux sociaux des \u00e9l\u00e8ves d'une classe, alors la structure de graphe s'imposera d'elle-m\u00eame. Cette structure sera elle-aussi \u00e9tudi\u00e9e plus tard cette ann\u00e9e.</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/#comment-seront-traitees-ces-donnees-lineaires-introduction-des-listes-des-piles-et-des-files","title":"Comment seront trait\u00e9es ces donn\u00e9es lin\u00e9aires ? Introduction des listes, des piles et des files","text":"<p>La nature des donn\u00e9es ne fait pas tout. Il faut aussi s'int\u00e9resser \u00e0 la mani\u00e8re dont on voudra les traiter :</p> <ul> <li>\u00c0 quelle position les faire entrer dans notre structure ?</li> <li>\u00c0 quel moment devront-elles en \u00e9ventuellement en sortir ?</li> <li>Veut-on pouvoir acc\u00e9der rapidement \u00e0 n'importe quel \u00e9l\u00e9ment de la structure, ou simplement au premier ? ou au dernier ?</li> </ul> <p>Lorsque ces probl\u00e9matiques d'entr\u00e9e/sortie n'interviennent pas, la structure \u00abclassique\u00bb de liste est adapt\u00e9e. Mais lorsque celle-ci est importante, il convient de diff\u00e9rencier la structure de pile de celle de file.</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/#les-piles-stack","title":"Les piles (stack)","text":"<p>Une structure de pile (penser \u00e0 une pile d'assiette) est associ\u00e9e \u00e0 la m\u00e9thode LIFO (Last In, First Out) :</p> <p>les \u00e9l\u00e9ments sont empil\u00e9s les uns au-dessus des autres, et on ne peut toujours d\u00e9piler que l'\u00e9l\u00e9ment du haut de la pile. Le dernier \u00e9l\u00e9ment \u00e0 \u00eatre arriv\u00e9 est donc le premier \u00e0 \u00eatre sorti.</p> <p></p> <p>Exemples de donn\u00e9es stock\u00e9es sous forme de pile</p> <ul> <li>lors de l'ex\u00e9cution d'une fonction r\u00e9cursive, le processeur empile successivement les appels \u00e0 traiter : seule l'instruction du haut de la pile peut \u00eatre trait\u00e9e.</li> </ul> <p></p> <ul> <li>dans un navigateur internet, la liste des pages parcourues est stock\u00e9e sous forme de pile : la fonction \u00abBack\u00bb permet de \u00abd\u00e9piler\u00bb peu \u00e0 peu les pages pr\u00e9c\u00e9demment parcourues :   </li> <li>lors d'un Devoir Surveill\u00e9, la derni\u00e8re copie remise sur le bureau du professeur est (souvent) la premi\u00e8re corrig\u00e9e.</li> </ul>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/#les-files-queue","title":"Les files (queue)","text":"<p>Une structure de file (penser \u00e0 une file d'attente) est associ\u00e9e \u00e0 la m\u00e9thode FIFO (First In, First Out) :</p> <p>les \u00e9l\u00e9ments sont enfil\u00e9s les uns \u00e0 la suite des autres, et on ne peut toujours d\u00e9filer que l'\u00e9l\u00e9ment du haut de la file. Le premier \u00e9l\u00e9ment \u00e0 \u00eatre arriv\u00e9 est donc le premier \u00e0 en sortir. Sinon \u00e7a r\u00e2le dans la file d'attente.</p> <p></p> <p>Exemples de donn\u00e9es stock\u00e9es sous forme de file :</p> <ul> <li>les documents envoy\u00e9s \u00e0 l'imprimante sont trait\u00e9es dans une file d'impression.</li> <li>la \u00abqueue\u00bb \u00e0 la cantine est (normalement) trait\u00e9e sous forme de file.</li> </ul>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/#le-probleme-du-stockage-transformer-les-piles-en-files","title":"Le probl\u00e8me du stockage : transformer les piles en files","text":"<p>Dans les entrep\u00f4ts de stockage, comme dans les rayons d'un supermarch\u00e9, la structure naturelle est celle de la pile : les gens attrapent l'\u00e9l\u00e9ment situ\u00e9 devant eux (\u00aben haut de la pile\u00bb). Si les employ\u00e9s du supermarch\u00e9 remettent en rayon les produits plus r\u00e9cents sur le dessus de la pile, les produits au bas de la pile ne seront jamais choisis et p\u00e9rimeront.</p> <p>Ils doivent donc transformer la pile en file : lors de la mise en rayon de nouveaux produits, ceux-ci seront plac\u00e9s derri\u00e8re (\u00abau bas de la file\u00bb) afin que partent en priorit\u00e9 les produits \u00e0 date de p\u00e9remption plus courte.</p> <p>On passe donc du LIFO au FIFO.</p> <p>Certains dispositifs permettent de le faire naturellement : Ci-dessous, une file... de piles (\u00e9lectriques). Le chargement par le haut du distributeur fait que celle qui sera sortie (en bas) sera celle qui aura \u00e9t\u00e9 rentr\u00e9e en premier (par le haut). Ce FIFO est donc provoqu\u00e9 naturellement par la gravit\u00e9 (et un peu d'astuce).  On notera que cette probl\u00e9matique est universelle : voir par exemple ce site.</p> <p>Apr\u00e8s avoir pr\u00e9sent\u00e9 rapidement ces trois types de donn\u00e9es lin\u00e9aires, nous allons maintenant les \u00e9tudier plus en d\u00e9tail, et proposer pour chacune d'elles une interface et plusieurs impl\u00e9mentations.</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/1_listes-chainees/","title":"Les listes cha\u00een\u00e9es","text":""},{"location":"2_terminales_nsi/4_Structures_de_donnees/1_listes-chainees/#definition-generale","title":"D\u00e9finition g\u00e9n\u00e9rale","text":"<p>Une liste est un ensemble ordonn\u00e9 d'objets. G\u00e9n\u00e9ralement, ces donn\u00e9es seront de m\u00eame type, mais ce n'est pas structurellement obligatoire.</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/1_listes-chainees/#les-listes-chainees-linked-lists","title":"Les listes cha\u00een\u00e9es (linked lists)","text":"<p>Lorsque l'impl\u00e9mentation de la liste fait appara\u00eetre une cha\u00eene de valeurs, chacune pointant vers la suivante, on dit que la liste est une liste cha\u00een\u00e9e.</p> <p></p> <p>Impl\u00e9mentation choisie :</p> <ul> <li>Une liste est caract\u00e9ris\u00e9e par un ensemble de cellules.</li> <li>Le lien (on dira souvent le \u00abpointeur\u00bb) de la variable est un lien vers la premi\u00e8re cellule, qui renverra elle-m\u00eame sur la deuxi\u00e8me, etc.</li> <li>Chaque cellule contient donc une valeur et un lien vers la cellule suivante.</li> <li>Une liste peut \u00eatre vide (la liste vide est not\u00e9e <code>x</code> ou bien <code>None</code> sur les sch\u00e9mas)</li> </ul> <p>Une cons\u00e9quence de cette impl\u00e9mentation sous forme de liste cha\u00een\u00e9e est la non-constance du temps d'acc\u00e8s \u00e0 un \u00e9l\u00e9ment de liste : pour acc\u00e9der au 3\u00e8me \u00e9l\u00e9ment, il faut obligatoirement passer par les deux pr\u00e9c\u00e9dents.</p> <p>A retenir</p> <p>Dans une liste cha\u00een\u00e9e, le temps d'acc\u00e8s aux \u00e9l\u00e9ments n'est pas constant.</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/1_listes-chainees/#exemple-dimplementation-minimale-dune-liste-chainee","title":"Exemple d'impl\u00e9mentation minimale d'une liste cha\u00een\u00e9e","text":"<p>Exemple fondateur : impl\u00e9mentation d'une liste chain\u00e9e en POO</p> <pre><code>class Cellule :\ndef __init__(self, contenu, suivante):\nself.contenu = contenu\nself.suivante = suivante\n</code></pre> <p>Cette impl\u00e9mentation rudimentaire permet bien la cr\u00e9ation d'une liste :</p> <pre><code>&gt;&gt;&gt; lst = Cellule(3, Cellule(5, Cellule(1,None)))\n</code></pre> <p>La liste cr\u00e9\u00e9e est donc : </p> <p>Mais plus pr\u00e9cis\u00e9ment, on a :</p> <p></p> <p>Exercice  1</p> \u00c9nonc\u00e9Correction <p>Retrouvez comment acc\u00e9der aux \u00e9l\u00e9ments 3, 5 et 1.</p> <pre><code>&gt;&gt;&gt; lst.contenu\n3\n&gt;&gt;&gt; lst.suivante.contenu\n5\n&gt;&gt;&gt; lst.suivante.suivante.contenu\n1\n</code></pre> <p>On pourra remarquer que l'interface propos\u00e9e \u00e0 l'utilisateur n'est pas des plus pratiques...</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/1_listes-chainees/#et-les-listes-de-python","title":"Et les listes de Python ???","text":"<p>Nous connaissons d\u00e9j\u00e0 les listes de Python :</p> <pre><code>&gt;&gt;&gt; maliste = [3, 1, -1, 42]\n</code></pre> <p>Et nous connaissons aussi (un peu) l'interface de ce type <code>list</code>, notamment avec les m\u00e9thodes <code>append()</code> ou <code>reverse()</code>. N\u00e9anmoins, l'impl\u00e9mentation qui a \u00e9t\u00e9 choisie par les concepteurs de Python de ce type <code>list</code> fait que le celui-ci se rapproche plus d'un tableau dynamique.</p> <p>Dans un tableau dynamique :</p> <ul> <li>le temps d'acc\u00e8s \u00e0 n'importe quel \u00e9l\u00e9ment est rapide. Ce temps d'acc\u00e8s est constant quelque soit l'\u00e9l\u00e9ment : on dit que l'acc\u00e8s est en \\(O(1)\\).</li> <li>l'insertion d'un \u00e9l\u00e9ment au d\u00e9but ou au milieu de la liste est lente : cela oblige \u00e0 d\u00e9caler tous les \u00e9l\u00e9ments \u00e0 droite de celui-ci. Le temps pris par l'insertion est proportionnel au nombre d'\u00e9l\u00e9ments \u00e0 d\u00e9placer : on dit que l'insertion est en \\(O(n)\\).</li> </ul> <p>Dans une liste cha\u00een\u00e9e :</p> <ul> <li>le temps d'acc\u00e8s \u00e0 n'importe quel \u00e9l\u00e9ment peut \u00eatre lent (proportionnel \u00e0 la position de l'\u00e9l\u00e9ment dans la liste). Le temps d'acc\u00e8s est en \\(O(n)\\).</li> <li>l'insertion d'un \u00e9l\u00e9ment \u00e0 l'int\u00e9rieur de la liste est rapide : il y a simplement \u00e0 modifier la valeur du lien de la cellule \u00e0 gauche de l'endroit d'insertion. L'action d'ins\u00e9rer est donc en \\(O(1)\\). Toutefois, avant d'arriver \u00e0 l'endroit d'insertion, il faut avoir parcouru toutes les cellules pr\u00e9c\u00e9dentes ! Le temps total d'insertion est donc lui aussi lin\u00e9aire, en \\(O(n)\\).</li> </ul> <p>Nous nous servirons parfois du type <code>list</code> de Python dans la suite de ce cours, mais il ne faut pas oublier qu'il n'est pas un \u00abvrai\u00bb type <code>list</code>.</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/1_listes-chainees/#un-exemple-dinterface-pour-les-listes","title":"Un exemple d'interface pour les listes","text":"<p>Imaginons que nous poss\u00e9dons une interface offrant les fonctionnalit\u00e9s suivantes :</p> <ul> <li><code>Liste()</code> : cr\u00e9e une liste vide.</li> <li><code>est_vide()</code> : indique si la liste est vide.</li> <li><code>ajoute_tete()</code> : ins\u00e8re un \u00e9l\u00e9ment en t\u00eate de liste.</li> <li><code>renvoie_tete()</code> : renvoie la valeur de l'\u00e9l\u00e9ment en t\u00eate de liste ET le supprime de la liste.</li> </ul> <p>Exercice  2</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re l'encha\u00eenement d'op\u00e9rations ci-dessous.</p> <p>\u00c9crire \u00e0 chaque \u00e9tape l'\u00e9tat de la liste <code>lst</code> et la valeur \u00e9ventuellement renvoy\u00e9e.</p> <pre><code>lst = Liste()\nlst.ajoute_tete(3)\nlst.ajoute_tete(5)\nlst.ajoute_tete(1)\nlst.renvoie_tete()\nlst.est_vide()\nlst.ajoute_tete(2)\nlst.renvoie_tete()\nlst.renvoie_tete()\nlst.renvoie_tete()\nlst.est_vide()\n</code></pre> <pre><code>```python\n1. lst = Liste()      # lst = None\n2. lst.ajoute_tete(3) # lst = 3\n3. lst.ajoute_tete(5) # lst = 5 3\n4. lst.ajoute_tete(1) # lst = 1 5 3\n5. lst.renvoie_tete() # lst = 5 3 valeur renvoy\u00e9e : 1\n6. lst.est_vide()     # valeur renvoy\u00e9e : False\n7. lst.ajoute_tete(2) # lst = 2 5 3\n8. lst.renvoie_tete() # lst = 5 3 valeur renvoy\u00e9e : 2\n9. lst.renvoie_tete() # lst = 3 valeur renvoy\u00e9e : 5\n10. lst.renvoie_tete()# lst = None valeur renvoy\u00e9e : 3\n11. lst.est_vide()    #  valeur renvoy\u00e9e : True\n```\n</code></pre>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/2_piles/","title":"Les piles","text":"<p>Comme expliqu\u00e9 pr\u00e9c\u00e9demment, une pile travaille en mode LIFO (Last In First Out). Pour \u00eatre utilis\u00e9e, l'interface d'une pile doit permettre a minima :</p> <ul> <li>la cr\u00e9ation d'une pile vide</li> <li>l'ajout d'un \u00e9l\u00e9ment dans la pile (qui sera forc\u00e9ment au dessus). On dira qu'on empile.</li> <li>le retrait d'un \u00e9l\u00e9ment de la pile (qui sera forc\u00e9ment celui du dessus) et le renvoi de sa valeur. On dira qu'on d\u00e9pile.</li> </ul>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/2_piles/#utilisation-dune-interface-de-pile","title":"Utilisation d'une interface de pile","text":"<p>Exercice  3</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re l'encha\u00eenement d'op\u00e9rations ci-dessous. \u00c9crire \u00e0 chaque \u00e9tape l'\u00e9tat de la pile <code>p</code> et la valeur \u00e9ventuellement renvoy\u00e9e.</p> <p>Bien comprendre que la classe <code>Pile()</code> et ses m\u00e9thodes n'existent pas vraiment. Nous jouons avec son interface.</p> <p>On prendra pour convention que la t\u00eate de la pile est \u00e0 droite.</p> <pre><code>1. p = Pile()\n2. p.empile(3)\n3. p.empile(5)\n4. p.est_vide()\n4. p.empile(1)\n5. p.depile()\n6. p.depile()\n7. p.empile(9)\n8. p.depile()\n9. p.depile()\n10. p.est_vide()\n</code></pre> <pre><code>1. p = Pile()  # p = None\n2. p.empile(3)   # p = 3\n3. p.empile(5)  # p = 3 5 par convention\n4. p.est_vide()  #  False\n4. p.empile(1)  # p = 3 5 1\n5. p.depile()  # p = 3 5    valeur renvoy\u00e9e : 1\n6. p.depile()  # p = 3      valeur renvoy\u00e9e : 5\n7. p.empile(9)  # p = 3 9\n8. p.depile()  # p = 3       valeur renvoy\u00e9e :9\n9. p.depile()  # p est vide      valeur renvoy\u00e9e : 3\n10. p.est_vide() # True\n</code></pre>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/2_piles/#implementations-dune-pile","title":"Impl\u00e9mentation(s) d'une pile","text":"<p>L'objectif est de cr\u00e9er une classe <code>Pile</code>. L'instruction <code>Pile()</code> cr\u00e9era une pile vide. Chaque objet <code>Pile</code> disposera des m\u00e9thodes suivantes :</p> <ul> <li><code>est_vide()</code> : indique si la pile est vide.</li> <li><code>empile()</code> : ins\u00e8re un \u00e9l\u00e9ment en haut de la pile.</li> <li><code>depile()</code> : renvoie la valeur de l'\u00e9l\u00e9ment en haut de la pile ET le supprime de la pile.</li> <li><code>__str__()</code> : permet d'afficher la pile sous forme agr\u00e9able (par ex : <code>|3|6|2|5|</code>) par <code>print()</code></li> </ul>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/2_piles/#a-laide-du-type-list-de-python","title":"\u00c0 l'aide du type <code>list</code> de Python","text":"<p>Exercice  4</p> \u00c9nonc\u00e9Correction  <p>Cr\u00e9er la classe <code>Pile</code> ci-dessus.</p> <p>Le type <code>list</code> de Python est parfaitement adapt\u00e9. Des renseignements int\u00e9ressants \u00e0 son sujet peuvent \u00eatre trouv\u00e9s ici.</p> <p><pre><code>class Pile:\ndef __init__(self):\nself.data = []\ndef est_vide(self):\nreturn len(self.data) == 0\ndef empile(self,x):\nself.data.append(x)\ndef depile(self):\nif self.est_vide():\nprint('Vous avez essay\u00e9 de d\u00e9piler une pile vide !')\nreturn None\nelse :\nreturn self.data.pop()\ndef __str__(self):       # Hors-Programme : pour afficher\ns = '|'              # convenablement la pile avec print(p)\nfor k in self.data :\ns = s + str(k) + '|'\nreturn s\ndef __repr__(self):       # Hors-Programme : pour afficher\ns = '|'              # convenablement la pile avec p\nfor k in self.data :\ns = s + str(k) + '|'\nreturn s\n</code></pre> Test de l'impl\u00e9mentation : <pre><code>&gt;&gt;&gt; p = Pile()\n&gt;&gt;&gt; p.empile(5)\n&gt;&gt;&gt; p.empile(3)\n&gt;&gt;&gt; p.empile(7)\n&gt;&gt;&gt; p\n|5|3|7|\n</code></pre></p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/2_piles/#a-laide-dune-liste-chainee-et-de-la-classe-cellule","title":"\u00c0 l'aide d'une liste cha\u00een\u00e9e et de la classe <code>Cellule</code>","text":"<p>Pr\u00e9c\u00e9demment nous avons cr\u00e9\u00e9 la classe <code>Cellule</code> :</p> <pre><code>class Cellule :\ndef __init__(self, contenu, suivante):\nself.contenu = contenu\nself.suivante = suivante\n</code></pre> <p>Exercice  5</p> \u00c9nonc\u00e9 <p>\u00c0 l'aide cette classe, re-cr\u00e9er une classe <code>Pile</code> disposant exactement de la m\u00eame interface que dans l'exercice pr\u00e9c\u00e9dent.</p> Correction  <pre><code>class Pile:\ndef __init__(self):\nself.data = None\ndef est_vide(self):\nreturn self.data == None\ndef empile(self, val):\nself.data = Cellule(val, self.data)\ndef depile(self):\nv = self.data.contenu #on r\u00e9cup\u00e8re la valeur \u00e0 renvoyer\nself.data = self.data.suivante  # on supprime la 1\u00e8re cellule\nreturn v\ndef __str__(self):\ns = '|'\nc = self.data\nwhile c != None :\ns += str(c.contenu) + '|'\nc = c.suivante\nreturn s\n</code></pre> <p>Test de l'impl\u00e9mentation : <pre><code>&gt;&gt;&gt; p = Pile()\n&gt;&gt;&gt; p.empile(5)\n&gt;&gt;&gt; p.empile(3)\n&gt;&gt;&gt; p.empile(7)\n&gt;&gt;&gt; print(p)\n|7|3|5|\n</code></pre></p> <p>A retenir</p> <p>Pour l'utilisateur, les interfaces pr\u00e9c\u00e9dentes sont strictement identiques. Il ne peut pas savoir, en les utilisant, l'impl\u00e9mentation qui est derri\u00e8re.</p> <p></p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/2_piles/#application-des-piles","title":"Application des piles","text":"<p>Exercice  6</p> \u00c9nonc\u00e9Correction <p>Simulez une gestion de l'historique de navigation internet, en cr\u00e9ant une classe <code>Nav</code> qui utilisera une pile.</p> <p>Attention, il ne faut pas r\u00e9inventer la classe <code>Pile</code>, mais s'en servir !</p> <p>Exemple d'utilisation : <pre><code>&gt;&gt;&gt; n = Nav()\n&gt;&gt;&gt; n.visite('lemonde.fr')\npage actuelle : lemonde.fr\n&gt;&gt;&gt; n.visite('google.fr')\npage actuelle : google.fr\n&gt;&gt;&gt; n.visite('netflix.fr')\npage actuelle : netflix.fr\n&gt;&gt;&gt; n.back()\npage quitt\u00e9e : netflix.fr\n&gt;&gt;&gt; n.back()\npage quitt\u00e9e : google.fr\n</code></pre></p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/files/","title":"Les files","text":"<p>Comme expliqu\u00e9 pr\u00e9c\u00e9demment, une file travaille en mode FIFO (First In First Out). Pour \u00eatre utilis\u00e9e, une interface de file doit proposer a minima :</p> <ul> <li>la cr\u00e9ation d'une file vide</li> <li>l'ajout d'un \u00e9l\u00e9ment dans la file. On dira qu'on enfile.</li> <li>le retrait d'un \u00e9l\u00e9ment de la file et le renvoi de sa valeur. On dira qu'on d\u00e9file.</li> </ul> <p>La repr\u00e9sentation la plus courante d'une file se fait horizontalement, en enfilant par la gauche et en d\u00e9filant par la droite :</p> <p></p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/files/#utilisation-dune-interface-de-file","title":"Utilisation d'une interface de file","text":"<p>Exercice  7</p> \u00c9nonc\u00e9Correction <p>On consid\u00e8re l'encha\u00eenement d'op\u00e9rations ci-dessous. \u00c9crire \u00e0 chaque \u00e9tape l'\u00e9tat de la file <code>f</code> et la valeur \u00e9ventuellement renvoy\u00e9e.</p> <p>Par convention, on enfilera \u00e0 gauche et on d\u00e9filera \u00e0 droite.</p> <pre><code>1. f = File()\n2. f.enfile(3)\n3. f.enfile(5)\n4. f.est_vide()\n5. f.enfile(1)\n6. f.defile()\n7. f.defile()\n8. f.enfile(9)\n9. f.defile()\n10. f.defile()\n11. f.est_vide()\n</code></pre> <pre><code>```python\n1. f est vide\n2. f = 3\n3. f = 5 3\n4. val renvoy\u00e9e : False\n5. f  = 1 5 3\n6. val renvoy\u00e9e : 3 , f = 1 5\n7. val renvoy\u00e9e : 5 , f =  1\n8. f =  9 1\n9. val renvoy\u00e9e : 1 , f =  9\n10. val renvoy\u00e9e : 9 , f est vide\n11. val renvoy\u00e9e : True\n```\n</code></pre>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/files/#implementation-dune-file","title":"Impl\u00e9mentation d'une file","text":"<p>L'objectif est de cr\u00e9er une classe <code>File</code>, disposant des m\u00e9thodes suivantes :</p> <ul> <li><code>File()</code> : cr\u00e9e une file vide.</li> <li><code>est_vide()</code> : indique si la file est vide.</li> <li><code>enfile()</code> : ins\u00e8re un \u00e9l\u00e9ment en queue de file.</li> <li><code>defile()</code> : renvoie la valeur de l'\u00e9l\u00e9ment en t\u00eate de la file ET le supprime de la file.</li> <li><code>__str__()</code> : permet d'afficher la file sous forme agr\u00e9able (par ex : <code>|3|6|2|5|</code>) par <code>print()</code></li> </ul> <p>Exercice</p> \u00c9nonc\u00e9Correction <p>Cr\u00e9er la classe ci-dessus. L\u00e0 encore, le type <code>list</code> de Python est peut \u00eatre utilis\u00e9.</p> <p>Penser \u00e0 aller voir ici les m\u00e9thodes des objets de types <code>list</code>, notamment la m\u00e9thode <code>insert</code>.</p> <pre><code>class File:\ndef __init__(self):\nself.data = []\ndef est_vide(self):\nreturn len(self.data) == 0\ndef enfile(self, x):\nself.data.insert(0, x)\ndef defile(self):\nif self.est_vide():\nprint('Vous avez essay\u00e9 de d\u00e9filer une file vide !')\nreturn None\nelse :\nreturn self.data.pop()\ndef __str__(self):       # Hors-Programme : pour afficher\ns = '|'              # convenablement la file avec print(p)\nfor k in self.data:\ns = s + str(k) + '|'\nreturn s\n</code></pre> <pre><code>&gt;&gt;&gt; f = File()\n&gt;&gt;&gt; f.enfile(5)\n&gt;&gt;&gt; f.enfile(8)\n&gt;&gt;&gt; print(f)\n|8|5|\n&gt;&gt;&gt; f.defile()\n5\n</code></pre> <p>Remarque : Notre impl\u00e9mentation r\u00e9pond parfaitement \u00e0 l'interface qui \u00e9tait demand\u00e9e. Mais si le \u00abcahier des charges\u00bb obligeait \u00e0 ce que les op\u00e9rations <code>enfile()</code> et <code>defile()</code> aient lieu en temps constant (en \\(O(1)\\)), notre impl\u00e9mentation ne conviendrait pas.</p> <p>En cause : notre m\u00e9thode <code>enfile()</code> agit en temps lin\u00e9aire (\\(O(n)\\)) et non pas en temps constant. L'utilisation de la structure de \u00abliste\u00bb de Python (les tableaux dynamiques) provoque, lors de l'instruction <code>self.data.insert(0, x)</code> un redimensionnement de la liste. Le tableau doit \u00eatre agrandi et chaque \u00e9l\u00e9ment doit \u00eatre recopi\u00e9 dans la case suivante. Ceci nous co\u00fbte un temps lin\u00e9aire.</p>"},{"location":"2_terminales_nsi/4_Structures_de_donnees/files/#implementation-dune-file-avec-deux-piles","title":"Impl\u00e9mentation d'une file avec deux piles","text":"<p>Comment cr\u00e9er une file avec 2 piles ? L'id\u00e9e est la suivante : on cr\u00e9e une pile d'entr\u00e9e et une pile de sortie.</p> <ul> <li>quand on veut enfiler, on empile sur la pile d'entr\u00e9e.</li> <li>quand on veut d\u00e9filer, on d\u00e9pile sur la pile de sortie.</li> <li>si celle-ci est vide, on d\u00e9pile enti\u00e8rement la pile d'entr\u00e9e dans la pile de sortie.</li> </ul> <p> </p> <pre><code># il est imp\u00e9ratif de comprendre qu'on peut choisir l'impl\u00e9mentation\n# de la classe Pile qu'on pr\u00e9f\u00e8re parmi les deux trait\u00e9es plus haut.\n# Comme elles ont la M\u00caME INTERFACE et qu'on ne va se servir que\n# de cette interface, leur m\u00e9canisme interne n'a aucune influence\n# sur le code de la classe File que nous ferons ensuite.\n# Par exemple, on choisit celle avec la liste cha\u00een\u00e9e :\nclass Cellule :\ndef __init__(self, contenu, suivante):\nself.contenu = contenu\nself.suivante = suivante\nclass Pile:\ndef __init__(self):\nself.data = None\ndef est_vide(self):\nreturn self.data == None\ndef empile(self, x):\nself.data = Cellule(x, self.data)\ndef depile(self):\nv = self.data.contenu #on r\u00e9cup\u00e8re la valeur \u00e0 renvoyer\nself.data = self.data.suivante  # on supprime la 1\u00e8re cellule\nreturn v\ndef __str__(self):\ns = \"|\"\nc = self.data\nwhile c != None :\ns += str(c.contenu)+\"|\"\nc = c.suivante\nreturn s\n# -------------------------------------------------------\n# Impl\u00e9mentation d'une file \u00e0 l'aide de deux piles\nclass File:\ndef __init__(self):\nself.entree = Pile()\nself.sortie = Pile()\ndef est_vide(self):\nreturn self.entree.est_vide() and self.sortie.est_vide()\ndef enfile(self,x):\nself.entree.empile(x)\ndef defile(self):\nif self.est_vide():\nprint(\"File vide !\")\nreturn None\nif self.sortie.est_vide():\nwhile not self.entree.est_vide():\nself.sortie.empile(self.entree.depile())\nreturn self.sortie.depile()\n</code></pre> <pre><code>&gt;&gt;&gt; f = File()\n&gt;&gt;&gt; f.enfile(5)\n&gt;&gt;&gt; f.enfile(8)\n&gt;&gt;&gt; f.defile()\n5\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/dm1/","title":"Enonc\u00e9 DM1","text":"<p>Ce DM comporte trois exercices.</p> <p>Le premier exercice porte sur la r\u00e9cursivit\u00e9.</p> <p>Le deuxi\u00e8me exercice porte sur la programmation objet.</p> <p>Le troisi\u00e8me exercice porte sur la programmation objet et la programmation en g\u00e9n\u00e9ral.</p> <p>A rendre</p> <p>Vous devrez rendre trois fichiers:</p> <ul> <li><code>hanoi.py</code></li> <li><code>geometrieObjet.py</code></li> <li><code>jeuObjet.py</code></li> </ul> <p>Sur Pronote on ne peut rendre qu'un seul fichier !</p> <p>Il faudra donc les mettre dans un dossier compress\u00e9.</p> <p>A voir ici par exemple: https://www.youtube.com/watch?v=6HylLLHihA0</p>"},{"location":"2_terminales_nsi/DM/DM1/dm1/#exercice-tours-de-hanoi","title":"Exercice Tours de Hanoi","text":"<p>L'\u00e9nonc\u00e9 se trouve ici: Tours de Hanoi</p>"},{"location":"2_terminales_nsi/DM/DM1/dm1/#exercice-geometrie-objet","title":"Exercice g\u00e9om\u00e9trie objet","text":"<p>L'\u00e9nonc\u00e9 se trouve ici: G\u00e9om\u00e9trie objet</p>"},{"location":"2_terminales_nsi/DM/DM1/dm1/#exercice-jeu-objet","title":"Exercice jeu objet","text":"<p>L'\u00e9nonc\u00e9 se trouve ici: Jeu objet</p>"},{"location":"2_terminales_nsi/DM/DM1/geometrie/","title":"G\u00e9om\u00e9trie en POO","text":""},{"location":"2_terminales_nsi/DM/DM1/geometrie/#objectifs","title":"Objectifs","text":"<p>En utilisant la programmation objet, nous allons d\u00e9finir des points et des figures g\u00e9om\u00e9triques (rectangles, cercles, etc.) ainsi que les m\u00e9thodes pour les repr\u00e9senter graphiquement et les transformer (translation).</p> <p>Attention</p> <p>Le fichier <code>graphNSI.py</code> ne devra pas \u00eatre modifi\u00e9.</p> <pre><code>Le rendu sera uniquement le fichier `geometrieObjet.py`\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/geometrie/#graphnsipy","title":"graphNSI.py","text":"<p>Commencez par cr\u00e9er un fichier <code>graphNSI.py</code>et y coller le code suivant:</p> graphNSI.py<pre><code># graphNSI.py\nfrom tkinter import Tk, Frame, Canvas, TOP, BOTH, YES\nroot = None\napplication = None\ncanvas = None\nbtnQuitter = None\n# Dimensions de la fen\u00eatre graphique\nlongueur = 1600\nhauteur = 800\ndef init(titre):\n\"\"\"Initialisation de la fen\u00eatre graphique\"\"\"\ninitDrawing(titre, 0, 0, longueur, hauteur)\ndef show():\nshowDrawing()\ndef tracerRepere():\nminX = -longueur / 2\nmaxX = longueur / 2\nminY = -hauteur / 2\nmaxY = hauteur / 2\ntracerDroite(minX, 0, maxX, 0, 1)\ntracerDroite(0, minY, 0, maxY, 1)\ndef tracerRectangle(x1, y1, x2, y2, e):\n\"\"\"\n    Tracer un rectangle de coordonn\u00e9es (x1,y1) (x2,y2) et d'\u00e9paisseur e (en pixels).\n    Le rep\u00e8re est un rep\u00e8re orthonorm\u00e9 classique.\n    y\n    \u02c6\n    |\n    (0,0) --&gt; x\n    \"\"\"\ndrawRect(\nx1 + (longueur / 2),\nhauteur / 2 - y1,\nx2 + (longueur / 2),\nhauteur / 2 - y2,\ne,\n0,\n0,\n0,\n)\ndef tracerDroite(x1, y1, x2, y2, e):\n\"\"\"\n    Tracer une droite de coordonn\u00e9es (x1,y1) (x2,y2) et d'\u00e9paisseur e (en pixels).\n    Le rep\u00e8re est un rep\u00e8re orthonorm\u00e9 classique.\n    y\n    \u02c6\n    |\n    (0,0) --&gt; x\n    \"\"\"\ndrawLine(\nx1 + (longueur / 2),\nhauteur / 2 - y1,\nx2 + (longueur / 2),\nhauteur / 2 - y2,\ne,\n0,\n0,\n0,\n)\ndef tracerCercle(x1, y1, rayon, e):\n\"\"\"\n    Tracer un cercle de centre (x1,y1) et de rayon 'rayon' avec une \u00e9paisseur\n    e (en pixels). Le rep\u00e8re est un rep\u00e8re orthonorm\u00e9 classique.\n    y\n    \u02c6\n    |\n    (0,0) --&gt; x\n    \"\"\"\ndrawCircle(x1 + (longueur / 2), hauteur / 2 - y1, rayon, e, 0, 0, 0)\ndef initDrawing(titre, x, y, largeur, hauteur):\n\"\"\"D\u00e9finition d'une fen\u00eatre graphique\"\"\"\nglobal root, application, canvas, btnQuitter\nroot = Tk()\nroot.geometry(\"{}x{}+{}+{}\".format(largeur, hauteur, x, y))\napplication = Frame(root, bg=\"white\")\napplication.pack(fill=BOTH, expand=YES)\napplication.master.title(titre)\ncanvas = Canvas(application, bg=\"white\", highlightthickness=0)\ncanvas.pack(side=TOP, fill=BOTH, expand=YES)\n#    btnQuitter = Button(application, text=\"Quitter\", command=root.destroy)\n#    btnQuitter.pack(side=RIGHT)\ndef drawRect(x1, y1, x2, y2, epaisseur, rouge, vert, bleu):\n\"\"\"Trac\u00e9 d'un rectangle\"\"\"\nglobal canvas\ncouleur = \"#%02x%02x%02x\" % (rouge, vert, bleu)\ncanvas.create_rectangle(\nx1, y1, x2, y2, width=str(epaisseur), outline=couleur, fill=None\n)\ndef paintRect(x1, y1, x2, y2, rouge, vert, bleu):\n\"\"\"Remplissage d'un rectangle\"\"\"\nglobal canvas\ncouleur = \"#%02x%02x%02x\" % (rouge, vert, bleu)\ncanvas.create_rectangle(x1, y1, x2, y2, outline=couleur, fill=couleur)\ndef drawCircle(x, y, rayon, epaisseur, rouge, vert, bleu):\n\"\"\"Trac\u00e9 d'un cercle\"\"\"\nglobal canvas\ncouleur = \"#%02x%02x%02x\" % (rouge, vert, bleu)\ncanvas.create_oval(\nx - rayon,\ny - rayon,\nx + rayon,\ny + rayon,\nwidth=str(epaisseur) + \"p\",\noutline=couleur,\nfill=None,\n)\ndef paintCircle(x, y, rayon, rouge, vert, bleu):\n\"\"\"Remplissage d'un cercle (disque)\"\"\"\nglobal canvas\ncouleur = \"#%02x%02x%02x\" % (rouge, vert, bleu)\ncanvas.create_oval(\nx - rayon, y - rayon, x + rayon, y + rayon, outline=couleur, fill=couleur\n)\ndef drawPixel(x, y, rouge, vert, bleu):\n\"\"\"Trac\u00e9 d'un pixel\"\"\"\nglobal canvas\ncouleur = \"#%02x%02x%02x\" % (rouge, vert, bleu)\ncanvas.create_rectangle(x, y, x, y, outline=couleur)\ndef drawLine(x1, y1, x2, y2, epaisseur, rouge, vert, bleu):\n\"\"\"Trac\u00e9 d'un segment de droite\"\"\"\nglobal canvas\ncouleur = \"#%02x%02x%02x\" % (rouge, vert, bleu)\ncanvas.create_line(x1, y1, x2, y2, width=str(epaisseur) + \"p\", fill=couleur)\ndef drawText(x1, y1, texte, taille, rouge, vert, bleu):\n\"\"\"Ecriture d'un texte\"\"\"\nglobal canvas\ncouleur = \"#%02x%02x%02x\" % (rouge, vert, bleu)\ncanvas.create_text(x1, y1, font=(\"Helvetica\", taille), text=texte)\ndef showDrawing():\n\"\"\"Affichage de la fen\u00eatre graphique et attente de la fermeture\"\"\"\nglobal root\nroot.mainloop()\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/geometrie/#geometrieobjetpy","title":"geometrieObjet.py","text":"<p>Dans le m\u00eame dossier que <code>graphNSI.py</code> cr\u00e9ez le fichier <code>geometrieObjet.py</code> puis y coller le code suivant:</p> geometrieObjet.py<pre><code># geometrieObjet.py\nimport math\nimport graphNSI as gd\n# On initialise l'affichage graphique\ngd.init(\"figures\")\n# On trace le rep\u00e8re dans la fen\u00eatre graphique\ngd.tracerRepere()\n# D\u00e9but de la description des objets\nclass Point():\n\"\"\"La classe Point. Un point est d\u00e9fini par ses coordonn\u00e9es\n    x et y\"\"\"\ndef __init__(self,x,y):\n\"\"\"Le constructeur de la classe Point\"\"\"\nself.x=x    # Initialisation des attributs de l'objet\nself.y=y\ndef tracer(self):\n\"\"\"La m\u00e9thode de tra\u00e7age d'un point dans la fen\u00eatre graphique\"\"\"\n#Un point est trac\u00e9 sous la forme d'un cercle (pour \u00eatre visible)\n#de rayon 1 et avec une \u00e9paisseur de trait 1\ngd.tracerCercle(self.x,self.y,1,1)\n# On fabrique deux objets de classe Point\np1= Point(20,10)\np2= Point(-100,-20)\nprint(p1.x)         #on peut acc\u00e9der aux attributs depuis un objet\np1.tracer()         #on peut appeler une m\u00e9thode sur un objet\n#cela trace le premier point\n# On trace le second point\np2.tracer()\n# On affiche le r\u00e9sultat\ngd.show()\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/geometrie/#question-1","title":"Question 1","text":"<p>Lisez le code de <code>geometrieObjet.py</code> et rep\u00e9rez la d\u00e9finition de la classe <code>Point</code>, son constructeur <code>__init__</code>, les attributs de l'objet et les m\u00e9thodes.</p> <p>En vous inspirant du code de <code>Point</code> d\u00e9finissez une classe <code>Cercle</code> (constructeur, attributs, m\u00e9thodes). Un cercle sera d\u00e9fini par son centre et un rayon. D\u00e9finissez une m\u00e9thode <code>tracer()</code> et testez-la en tra\u00e7ant plusieurs cercles construits \u00e0 l'aide de cette classe.</p> <p>Dans votre classe <code>Cercle</code>, est-ce que le centre est lui m\u00eame un objet de classe <code>Point</code> ? Si \u00e7a n'est pas le cas modifiez votre classe de fa\u00e7on \u00e0 ce que cela soit le cas. En particulier, votre constructeur prendra un point en param\u00e8tre.</p> <p>Liens avec le paradigme objet</p> <p>Les classes sont des moules pour fabriquer des objets en s\u00e9rie.</p> <p>L'unique classe <code>Point</code> permet de produire des objets points diff\u00e9rents (des instances). Dans le code du fichier <code>geometrieObjet.py</code>, un objet <code>point</code> est associ\u00e9 \u00e0 la variable <code>p1</code> et un autre est associ\u00e9 \u00e0 la variable <code>p2</code>. Ces objets ont des attributs qui contiennent des valeurs et des m\u00e9thodes qui sont des fonctions sp\u00e9cifiques aux objets de cette classe.</p> <p>Par exemple, on ne trace pas de la m\u00eame fa\u00e7on un point et un cercle. Dans votre code, la m\u00e9thode <code>tracer()</code> d'un point doit \u00eatre diff\u00e9rente de <code>tracer()</code> d'un cercle.</p>"},{"location":"2_terminales_nsi/DM/DM1/geometrie/#question-2","title":"Question 2","text":"<p>D\u00e9finissez une classe Rectangle d\u00e9fini par deux objets de classe Point : le coin sup\u00e9rieur gauche et le coin inf\u00e9rieur droit. En vous servant de <code>gd.tracerRectangle</code>, d\u00e9finissez une m\u00e9thode <code>tracer()</code> et testez-la en tra\u00e7ant plusieurs rectangles construits \u00e0 l'aide de cette classe.</p> <p>gd.tracerRectangle</p> <p>gd.tracerRectangle(x1,y1,x2,y2,e)</p> <p>Tracer un rectangle de coordonn\u00e9es (x1,y1) (x2,y2) et d'\u00e9paisseur e (en pixels).</p>"},{"location":"2_terminales_nsi/DM/DM1/geometrie/#question-3","title":"Question 3","text":"<p>D\u00e9finissez une classe Combinaison qui comporte une liste (unique) d'autres figures (point, cercle, rectangles). D\u00e9finissez une m\u00e9thode <code>tracer()</code> et testez-la en tra\u00e7ant une combinaison construite \u00e0 l'aide de cette classe.</p> <p>Liens avec le paradigme objet</p> <p>Tous vos objets ont des types. Dans ce que nous faisons ici, le type d'un objet sera toujours le nom de la classe qui l'a construit.</p> <p>Pour obtenir cette information, en Python on peut utiliser <code>type</code>.</p> <p>Par exemple print(type(p1)) doit vous donner : . <p>Ainsi, si j'appelle <code>p1.tracer()</code>, Python saura qu'il faut appeler la m\u00e9thode <code>tracer()</code> de la classe Point en consultant le type de p1. En objet, on parle aussi d'encapsulation. Avec l'encapsulation, un objet point/Cercle/Rectangle/Combinaison saura quelle m\u00e9thode <code>tracer()</code> appeler pour \u00eatre correctement trac\u00e9e.</p>"},{"location":"2_terminales_nsi/DM/DM1/geometrie/#question-4","title":"Question 4","text":"<p>Ajoutez une m\u00e9thode <code>translation(self,deplacement_x,deplacement_y)</code> dans vos classes Point, Cercle, Rectangle, Combinaison, puis testez-la.</p> <p>Liens avec le paradigme objet</p> <p>Une des principales \u00e9l\u00e9gances du mod\u00e8le objet est l'encapsulation : on regroupe sous un m\u00eame couvercle des donn\u00e9es et des fonctions relatives \u00e0 ces donn\u00e9es.</p> <p>Dans cet exercice, on peut appliquer une m\u00eame op\u00e9ration (ici une translation) \u00e0 des objets diff\u00e9rents (points, rectangles, cercles, combinaison) sans avoir besoin de conna\u00eetre leur type pr\u00e9cis dans le code. Ainsi, on peut \u00e9crire <code>p.translation(-2, 4)</code> sans savoir quel sera le type de <code>p</code>.</p> <p>Ceci est un exemple du principe d'abstraction, un autre pilier du paradigme objet. Avant de d\u00e9marrer un d\u00e9veloppement, on peut imposer ce principe d'abstraction en d\u00e9finissant une interface, mais c'est une autre histoire ...</p>"},{"location":"2_terminales_nsi/DM/DM1/hanoi/","title":"Tours de Hanoi","text":"<p>Les tours de Hano\u00ef est un casse-t\u00eate compos\u00e9 de trois tours et une pile de disques rang\u00e9s du plus grand au plus petit.</p> <p>Vous pouvez jouer en ligne en cliquant sur ce lien: http://www.monlyceenumerique.fr/nsi_terminale/lp/dl/tour_Hanoi.html</p> <p>Le but est de d\u00e9placer la pile de disques sur la tour de droite en ne d\u00e9pla\u00e7ant \u00e0 chaque fois qu'un seul disque et un disque ne peut pas \u00eatre pos\u00e9 sur un disque plus petit.</p>"},{"location":"2_terminales_nsi/DM/DM1/hanoi/#deroule-pour-3-disques","title":"D\u00e9roul\u00e9 pour 3 disques:","text":""},{"location":"2_terminales_nsi/DM/DM1/hanoi/#principe-recursif","title":"Principe r\u00e9cursif","text":"<p>Nous allons voir qu'il est tr\u00e8s simple de cr\u00e9er un programme r\u00e9cursif qui nous dit quoi faire pour r\u00e9soudre le probl\u00e8me.</p> <p>Tout d'abord on appelle les tours 1, 2 et 3.</p> <p>On appelle \\(n\\) le nombre de disque pr\u00e9sents au d\u00e9part dans la tour 1.</p> <p>Pour d\u00e9placer tous les disques de la tour 1 vers la tour 3, on peut raisonner comme suit :</p> <ul> <li>On d\u00e9place \\(n-1\\) disques de 1 vers la tour 2</li> <li>On d\u00e9place le dernier disque de 1 vers 3</li> <li>On d\u00e9place les \\(n-1\\) disques de 2 vers 3</li> </ul> <p>Exemple:</p> <p></p> <p>Pour d\u00e9placer une tour de \\(n\\) disques de tour 1 vers tour 3, on effectue ces trois \u00e9tapes :</p> <ul> <li>d\u00e9placer la tour des \\(n-1\\) premiers disques de tour 1 vers tour 2</li> </ul> <p></p> <ul> <li> <p>d\u00e9placer le plus grand disque de tour 1 vers tour 3   </p> </li> <li> <p>d\u00e9placer la tour des \\(n-1\\) premiers disques de tour 2 vers tour 3   </p> </li> </ul> <p>Astuce</p> <p>L'astuce ici est de cr\u00e9er une fonction hanoi qui prend 4 param\u00e8tres : <code>hanoi(n,debut,inter,fin)</code> o\u00f9 <code>n</code> est le nombre de disques \u00e0 d\u00e9placer, <code>debut</code> est la tour de d\u00e9part de nos \\(n\\) disques, <code>inter</code> est la tour interm\u00e9diaire que l'on peut utiliser pour d\u00e9placer et <code>fin</code> est la tour ou doivent se trouver les \\(n\\) disques au final.</p>"},{"location":"2_terminales_nsi/DM/DM1/hanoi/#consignes","title":"Consignes","text":"<p>Dans un fichier <code>hanoi.py</code> cr\u00e9er la fonction r\u00e9cursive <code>hanoi(n,debut,inter,fin)</code>.</p> <p>Lors de l'appel <code>hanoi(3, 1, 2, 3)</code>, vous devez obtenir comme affichage:</p> <pre><code>Bouge disque de la tour 1 \u00e0 la tour 3\nBouge disque de la tour 1 \u00e0 la tour 2\nBouge disque de la tour 3 \u00e0 la tour 2\nBouge disque de la tour 1 \u00e0 la tour 3\nBouge disque de la tour 2 \u00e0 la tour 1\nBouge disque de la tour 2 \u00e0 la tour 3\nBouge disque de la tour 1 \u00e0 la tour 3\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/jeu-objet/","title":"Jeu POO","text":"<p>Objectif</p> <p>Vous faites partie d'une soci\u00e9t\u00e9 qui cr\u00e9e des jeux vid\u00e9o. Dans le projet d'un nouveau jeu, vous devez g\u00e9rer les personnages. Afin d'\u00e9viter tout conflit dans le code produit par les autres collaborateurs, vous \u00e9crivez votre code en utilisant le paradigme de programmation objet.</p>"},{"location":"2_terminales_nsi/DM/DM1/jeu-objet/#demarrage","title":"D\u00e9marrage","text":"<p>Cr\u00e9er un fichier <code>jeuObjet.py</code>et y coller le code suivant:</p> <pre><code>class Personnage:\n\"\"\"\n    Un personnage du jeu vid\u00e9o\n    \"\"\"\ndef __init__(self,genre,experience=0):  # D\u00e9finition du constructeur\nself.genre=genre                    # premier attribut : le genre (f\u00e9minin, masculin, autre)\nself.experience=experience          # deuxi\u00e8me attribut : l'exp\u00e9rience (\u00e9valu\u00e9e par un nombre entier)\n</code></pre> <ul> <li>comme a priori, tout nouveau personnage doit commencer avec une exp\u00e9rience nulle, on d\u00e9finit la valeur par d\u00e9faut de cet attribut.</li> <li>l'appel au constructeur peut se faire avec un seul argument : le genre.</li> </ul> <p>Cr\u00e9ation simplifi\u00e9e d'un personnage avec une exp\u00e9rience banale :</p> <pre><code>Duc = Personnage('masculin')\n</code></pre> <p>On peut encore cr\u00e9er un personnage avec une autre experience en rajoutant un second argument :</p> <pre><code>Elsa = Personnage('feminin',42)\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/jeu-objet/#creer-des-outils","title":"Cr\u00e9er des outils","text":"<p>Les personnages du jeu vid\u00e9o g\u00e9reront des outils au cours de leur aventure. Ces outils poss\u00e8dent diff\u00e9rents attributs :</p> <ul> <li> <p>un nom (par exemple un tournevis)</p> </li> <li> <p>un niveau d'exp\u00e9rience minimal du personnage pour qu'il puisse le manipuler (cod\u00e9 sous forme d'un nombre entier),</p> </li> <li> <p>une masse (le personnage ne peut pas porter trop de charge) (cod\u00e9 sous forme d'un flottant),</p> </li> <li> <p>le nombre de mains n\u00e9cessairement libres pour pouvoir l'utiliser (de 1 \u00e0 4 : une coop\u00e9ration avec d'autres personnages peut \u00eatre n\u00e9cessaire).</p> </li> </ul> <p>D\u00e9finissez une nouvelle classe nomm\u00e9e Outil.</p> <p>Cr\u00e9ez le constructeur de cette classe permettant de d\u00e9finir les quatre attributs cit\u00e9s pour un outil. Par d\u00e9faut, le constructeur initialise \u00e0 1 le nombre de mains n\u00e9cessaires pour l'utilisation d'un objet.</p> <p>Cr\u00e9ez deux outils au choix dont un n\u00e9cessite plus d'une main.</p> <p>Pour chacun de vos outils, v\u00e9rifiez la valeur de l'attribut correspondant au nombre de main(s).</p> <p>Exemple</p> <pre><code># Une faux s'utilise \u00e0 deux mains et p\u00e8se environ 900 g (0,9 kg)\n# Ici on la d\u00e9finit avec une exp\u00e9rience minimale de 50\noutil1 = Outil(\"faux\", 0.9, 50, 2)\noutil1.nom # faux\noutil1.masse # 0.9\noutil1.xp_mini # 50\noutil1.mains # 2\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/jeu-objet/#les-accesseurs","title":"Les accesseurs","text":"<p>Pour l'interface graphique, le niveau d'exp\u00e9rience doit \u00eatre accessible mais le joueur ne doit pas pouvoir modifier la valeur directement. Pour pouvoir acc\u00e9der \u00e0 la valeur de l'attribut, on cr\u00e9\u00e9 dans la classe une m\u00e9thode appel\u00e9e <code>accesseur</code>.</p> <p>Info</p> <p>Par convention, un accesseur commence par le verbe anglais get (to get = obtenir = r\u00e9cup\u00e9rer).</p> <ul> <li>vous devez rendre priv\u00e9 l'attribut <code>experience</code>de la classe <code>Personnage</code></li> <li>\u00e9crivez une m\u00e9thode <code>get_experience</code>qui permet de r\u00e9cup\u00e9rer le niveau d'exp\u00e9rience (mais pas de modifier ce niveau)</li> </ul> <p>Exemple:</p> <pre><code>Frida = Personnage(\"feminin\", 37)\nFrida.get_experience() # 37\n</code></pre> <p>De la m\u00eame fa\u00e7on, vous devez rendre priv\u00e9s tous les attributs de la classe <code>Outil</code>, puis de cr\u00e9er les accesseurs correspondant (par exemple <code>get_masse</code>).</p>"},{"location":"2_terminales_nsi/DM/DM1/jeu-objet/#les-mutateurs","title":"Les mutateurs","text":"<p>Lors du jeu, le niveau d'exp\u00e9rience du personnage doit \u00e9voluer : cette exp\u00e9rience doit \u00eatre accessible en interne mais pas en externe.</p> <p>Pour pouvoir modifier la valeur de l'attribut d'un objet, on cr\u00e9\u00e9 dans la classe une m\u00e9thode appel\u00e9e mutateur.</p> <p>Info</p> <p>Par convention, un mutateur commence par le verbe anglais set (to set = modifier).</p> <ul> <li>Dans la classe <code>Personnage</code>, \u00e9crivez le mutateur <code>set_experience</code> qui permet de modifier l'exp\u00e9rience.</li> </ul> <pre><code>Grumpf = Personnage(\"masculin\", 28)\nGrumpf.set_experience(51)\nGrumpf.get_experience() # 51\n</code></pre> <ul> <li>Dans la classe <code>Outil</code>, rajoutez un mutateur permettant de diminuer de 1 le nombre de mains n\u00e9cessaire \u00e0 la manipulation d'un objet, si ce nombre n'est pas 1.</li> </ul> <pre><code># Une faux s'utilise \u00e0 deux mains et p\u00e8se environ 900 g (0,9 kg)\n# Ici on la d\u00e9finit avec une exp\u00e9rience minimale de 50\noutil1 = Outil(\"faux\", 0.9, 50, 2)\noutil1.set_mains()\noutil1.get_mains() # 1\noutil1.set_mains()\noutil1.get_mains() # Toujours 1 !\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/jeu-objet/#gain-dexperience","title":"Gain d'exp\u00e9rience","text":"<p>Il serait int\u00e9ressant :</p> <ul> <li> <p>d'ins\u00e9rer une m\u00e9thode rencontre qui fait progresser l'exp\u00e9rience du personnage en fonction des rencontres qu'il vit,</p> </li> <li> <p>faire en sorte que l'utilisateur ne puisse pas modifier l'exp\u00e9rience de son personnage par simple appel de la m\u00e9thode set_experience()</p> </li> </ul> <p>On peut supposer que chaque rencontre augmente l'exp\u00e9rience d'un nombre al\u00e9atoire compris entre 10 et 20.</p> <p>En Python, cela n\u00e9cessitera l'utilisation de la biblioth\u00e8que <code>random</code>. Ainsi, le d\u00e9but du programme devra d\u00e9sormais commencer par l'habituel :</p> <pre><code>from random import *\n</code></pre> <p>Rappel: pour obtenir un nombre entier au hasard entre deux entier, on utilise la fonction <code>randint</code>.</p> <ul> <li>rendre priv\u00e9 l'accesseur <code>set_experience</code> de la classe <code>Personnage</code></li> <li>cr\u00e9er une m\u00e9thode <code>rencontre</code> qui conduit au tirage al\u00e9atoire du gain d'exp\u00e9rience.</li> </ul> <pre><code>Hilda = Personnage(\"feminin\")\nHilda.rencontre()\nHilda.get_experience() # 12 par exemple (au hasard entre +10 et +20)\nHilda.rencontre()\nHilda.get_experience() # 27 par exemple (au hasard entre +10 et +20)\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/jeu-objet/#methode-str","title":"M\u00e9thode str","text":"<p>Si on fait <code>print(Hilda)</code> on obtient un affichage pas tr\u00e8s lisible...</p> <p>On va donc utiliser une m\u00e9thode particuli\u00e8re: la m\u00e9thode <code>__str__</code></p> <p>Par exemple:</p> <pre><code>def __str__(self):\nreturn f\"Personnage de genre {self.genre}\"\n</code></pre> <ul> <li>Si on cr\u00e9e un personnage <code>Alex = Personnage(\"masculin\", 14)</code>, on souhaite que <code>print(Alex)</code>affiche <code>Personnage de genre masculin et de niveau d'exp\u00e9rience 14</code>. Dans la classe <code>Personnage</code>, cr\u00e9er la m\u00e9thode <code>__str__</code> permettant l'affichage voulu.</li> </ul> <pre><code>Alex = Personnage(\"masculin\", 14)\nprint(Alex)\n# Personnage de genre masculin et de niveau d'exp\u00e9rience 14\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/jeu-objet/#personnage-avec-outil","title":"Personnage avec outil","text":"<p>On souhaite que chaque personnage puisse avoir des outils dans son inventaire.</p> <p>Pour cela, on consid\u00e8re que le personnage poss\u00e8de un nouvel attribut, nomm\u00e9 <code>inventaire</code>, qui correspond \u00e0 la liste des outils qu'il poss\u00e8de.</p> <p>On veut d\u00e9sormais que tout personnage nouvellement cr\u00e9\u00e9 commence avec un seul outil : un simple b\u00e2ton de marche, de masse 0.5 kg et que l'on peut tenir \u00e0 une seule main.</p> <ul> <li>Modifiez le script de la m\u00e9thode <code>__init__</code> pour ajouter:</li> </ul> <pre><code>self.inventaire = [Outil(\"baton de marche\", 0.5, 0, 1)]    # nom, poids, xp_mini, main = 1\n</code></pre> <ul> <li>On d\u00e9sire maintenant obtenir un accesseur pour ce nouvel attribut <code>inventaire</code>. On veut qu'il nous affiche la liste des outils, de mani\u00e8re lisible, et la masse totale port\u00e9e.</li> </ul> <p>Par exemple:</p> <pre><code>Frondon = Personnage(\"masculin\")\nFrondon.get_inventaire()\n</code></pre> <p>Doit afficher</p> <pre><code>Inventaire:\nbaton de marche: 0.5 kg, 1 main(s)\nMasse totale: 0.5 kg\n</code></pre> <ul> <li>Vous devez cr\u00e9er une nouvelle m\u00e9thode, nomm\u00e9e <code>decouverte</code> dans la classe <code>Personnage</code> qui mod\u00e9lise la d\u00e9couverte d'une nouvel outil par le joueur.</li> </ul> <p>Cette m\u00e9thode conduira \u00e0 l'ajout de l'outil dans l'inventaire dans le seul cas o\u00f9 le personage poss\u00e8de un niveau d'expr\u00e9rience suffisant pour cela.</p> <p>De plus, les affichages suivants sont attendus, par exemple :</p> <pre><code>Frida = Personnage(\"feminin\")\nFrida.get_inventaire()\n# Inventaire:\n# baton de marche: 0.5 kg, 1 main(s)\n# Masse totale: 0.5 kg\nFrida.decouverte(Outil(\"faux\", 0.9, 50, 2))\n# Vous avez d\u00e9couvert l'outil faux, mais vous n'avez pas assez d'exp\u00e9rience pour le prendre.\nFrida.decouverte(Outil(\"petite halt\u00e8re\", 2, 0, 1))\n# Vous avez d\u00e9couvert l'outil petite halt\u00e8re qui a \u00e9t\u00e9 ajout\u00e9 \u00e0 votre inventaire.\nFrida.get_inventaire()\n# Inventaire:\n# baton de marche: 0.5 kg, 1 main(s)\n# petite halt\u00e8re: 2 kg, 1 main(s)\n# Masse totale: 2.5 kg\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/jeu-objet/#interactivite","title":"Interactivit\u00e9","text":"<p>On souhaite maintenant avoir un peu d'interactions.</p> <p>Au lancement du programme, vous devez pouvoir choisir le genre du personnage.</p> <p>Par exemple:</p> <pre><code># gestion de l'affichage de la saisie du genre par l'utilisateur\ngenre = input(\"\"\"\n            Saisir la lette correspondant au genre d\u00e9sir\u00e9 pour votre personnage :\n                M : si vous voulez une h\u00e9ros de genre masculin,\n                F : si vous voulez une h\u00e9ro\u00efne de genre f\u00e9minin,\n                A : si vous d\u00e9sirez un personnage sans genre d\u00e9termin\u00e9\n            \"\"\")\ngenre = genre.upper()  # pour s'assurer que la lettre saisie est en majuscule\n# Cr\u00e9ation du nouveau personnage, appel\u00e9 ici par d\u00e9faut hero\nif genre=='F':\nhero = Personnage('feminin')\n</code></pre> <ul> <li>compl\u00e9tez pour prendre en compte les autres genres, et les fautes de saisie.</li> </ul> <p>Par exemple:</p> <pre><code>Saisir la lette correspondant au genre d\u00e9sir\u00e9 pour votre personnage :\n                M : si vous voulez une h\u00e9ros de genre masculin,\n                F : si vous voulez une h\u00e9ro\u00efne de genre f\u00e9minin,\n                A : si vous d\u00e9sirez un personnage sans genre d\u00e9termin\u00e9\nZ\nVous devez choisir uniquement M, F, ou A.\nF\nVous avez cr\u00e9\u00e9 votre personnage !\nVotre personnage a comme niveau d'exp\u00e9rience 0.\nVous commencez avec un b\u00e2ton de marche de masse 0.5 que vous pouvez tenir \u00e0 1 main.\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM1/jeu-objet/#syteme-de-jeu","title":"Syt\u00e8me de jeu","text":"<p>On souhaite maintenant avoir un syst\u00e8me de jeu rudimentaire.</p> <ul> <li>A chaque tour, on peut choisir entre partir \u00e0 la rencontre de quelqu'un, de fouiller les environs pour trouver un outil ou consulter son inventaire.</li> <li>Quand on part \u00e0 la rencontre de quelqu'un, on a une chance sur deux de rencontrer effectivement quelqu'un.</li> <li>Quand on fouille \u00e0 la recherche d'un outil, on trouve toujours un outil, pris au hasard dans une liste d'outils pr\u00e9-\u00e9tablie.</li> </ul> <p>Exemple de liste d'outils:</p> <pre><code>liste_outils = [Outil(\"faux\", 0.9, 50, 2), Outil(\"petite halt\u00e8re\", 2, 0, 1)]\n</code></pre> <p>Info</p> <p>Votre liste d'outils doit contenir au moins 5 \"outils\". Vous pouvez y mettre ce que vous voulez (\u00e9p\u00e9es, boucliers, ordinateur...). Vous n'\u00eates pas non plus contraints d'utiliser les outils \"faux\" et \"petite halt\u00e8re\", c'\u00e9tait juste des exemples.</p> <p>Info</p> <p>Pour prendre au hasard un \u00e9l\u00e9ment dans une liste, le module <code>random</code> nous offre aussi des fonctions sur les listes.</p> <p>Par exemple</p> <pre><code>from random import *\nma_liste = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\n# Obtenir un \u00e9l\u00e9ment au hasard\nun_element = choice(ma_liste)\n</code></pre> <p>Un exemple de s\u00e9quence de jeu:</p> <pre><code>Voulez-vous (R)echercher quelqu'un, (F)ouiller les environs ou consulter votre (I)nventaire ?\nR\nVous n'avez trouv\u00e9 personne...\nVoulez-vous (R)echercher quelqu'un, (F)ouiller les environs ou consulter votre (I)nventaire ?\nR\nVous avez rencontr\u00e9 quelqu'un ! Votre exp\u00e9rience est maintenant de 12.\nVoulez-vous (R)echercher quelqu'un, (F)ouiller les environs ou consulter votre (I)nventaire ?\nF\nVous avez d\u00e9couvert l'outil faux, mais vous n'avez pas assez d'exp\u00e9rience pour le prendre.\nVoulez-vous (R)echercher quelqu'un, (F)ouiller les environs ou consulter votre (I)nventaire ?\nF\nVous avez d\u00e9couvert l'outil petite halt\u00e8re qui a \u00e9t\u00e9 ajout\u00e9 \u00e0 votre inventaire.\nVoulez-vous (R)echercher quelqu'un, (F)ouiller les environs ou consulter votre (I)nventaire ?\nI\nInventaire:\nbaton de marche: 0.5 kg, 1 main(s)\npetite halt\u00e8re: 2 kg, 1 main(s)\nMasse totale: 2.5 kg\n</code></pre> <p>Impl\u00e9mentez tout \u00e7a.</p>"},{"location":"2_terminales_nsi/DM/DM1/jeu-objet/#ameliorations-optionnel","title":"Am\u00e9liorations (optionnel)","text":"<p>Si vous le souhaitez (optionnel), am\u00e9liorez le jeu.</p> <p>Pistes d'am\u00e9lioration:</p> <ul> <li>d\u00e9finir une masse maximale pouvant \u00eatre port\u00e9e, et donc ne pas pouvoir ajouter un nouvel outil si la masse totale d\u00e9passe la masse maximale autoris\u00e9e.</li> <li>ajouter une option pour se d\u00e9barrasser d'un objet de son inventaire.</li> <li>ajouter un attribut <code>nom</code> dans la classe <code>Personnage</code>, puis cr\u00e9er une liste de personnages non joueurs, que l'on peut rencontrer. Par exemple \"Vous avez rencontr\u00e9 Grumpf.\"</li> <li>ce que vous voulez...</li> </ul> <p>Tout cela est optionnel.</p>"},{"location":"2_terminales_nsi/DM/DM2/dm2/","title":"Enonc\u00e9 DM2","text":""},{"location":"2_terminales_nsi/DM/DM2/dm2/#consignes","title":"Consignes","text":"<p>Vous avez deux fichiers \u00e0 rendre, dans un dossier compress\u00e9:</p> <ul> <li><code>mini_jeu.py</code></li> <li><code>calculatrice_polonaise.py</code></li> </ul> <p>Qualit\u00e9 du code</p> <p>Vous aurez des tests avec des <code>assert</code>\u00e0 \u00e9crire dans chacun des deux exercices.</p> <p>La qualit\u00e9 des tests \u00e9crits sera prise en compte dans l'\u00e9valuation, ainsi que la qualit\u00e9 des docstring et des commentaires.</p>"},{"location":"2_terminales_nsi/DM/DM2/dm2/#mini-jeu","title":"Mini-jeu","text":"<p>On demande pour cet exercice d'impl\u00e9menter plusieurs classes qui pourront interragir entre elles.</p> <ol> <li>Cr\u00e9er classe <code>Personnage</code> ayant pour attributs <code>__nom</code> et <code>__points_de_vie</code>, ce dernier \u00e9tant un entier naturel.</li> <li>Cr\u00e9er l'accesseur <code>get_nom</code> qui renvoie le nom du personnage, puis l'accesseur pour les points de vie.</li> <li>Ecrire une m\u00e9thode <code>est_vivant(self)</code> qui renvoie <code>True</code> quand le personnange est vivant, et <code>False</code> sinon.</li> <li>Ecrire une m\u00e9thode <code>est_blesse(self, pv)</code> qui retire <code>pv</code> points de vie au personnage.</li> </ol> <p>Ecrire des tests</p> <p>Vous commencerez \u00e0 \u00e9crire des tests la fin de votre fichier avec des <code>assert</code>. Par exemple:</p> <pre><code>aragorn = Personnage(\"Aragorn\", 120)\nassert(aragorn.get_nom() == 'Aragorn'), \"l'accesseur ne renvoie pas le bon nom\"\n</code></pre> <p>Vous devez tester au moins tous les accesseurs.</p> <ol> <li>Cr\u00e9er une classe <code>Arme</code> ayant pour attributs <code>__nom</code>, <code>__degats_min</code> et <code>__degats_max</code>, ces derniers \u00e9tant des entiers naturels (dans le bon ordre \u00e9videmment).</li> </ol> <p>Les m\u00e9thodes \u00e0 impl\u00e9menter sont:</p> <ul> <li>Un accesseur pour chacun des attributs.</li> <li><code>degat_aleat(self)</code> qui renvoie un nombre al\u00e9atoire de d\u00e9g\u00e2ts entre les deux bornes d\u00e9finissant cette arme.</li> </ul> <p>Tests</p> <p>Vous devez \u00e9crire des tests pour les accesseurs.</p> <p>Pour <code>degat_aleat(self)</code>, on testera que le nombre renvoy\u00e9 est bien dans l'intervalle des d\u00e9g\u00e2ts de l'arme.</p> <ol> <li>Cr\u00e9er classe <code>Arbitre</code> ayant pour attributs deux personnages arm\u00e9s <code>__perso1</code> et <code>__perso2</code>.</li> </ol> <p>Les m\u00e9thodes \u00e0 impl\u00e9menter sont:</p> <ul> <li><code>personnage1(self)</code> et <code>personnage2(self)</code> qui renvoient les deux personnages respectivement.</li> <li><code>un_round(self)</code> qui effectue un round de combat entre les deux personnages.</li> </ul> <p>Dans un round, un seul personnage tape sur l'autre et on \u00e9change les r\u00f4les au round suivant, en utilisant son arme et en infligeant un nombre al\u00e9atoire de d\u00e9g\u00e2ts \u00e0 son adversaire.</p> <p>Exemple:</p> <pre><code>&gt;&gt;&gt; epee = Arme(\"son \u00e9p\u00e9e Narsil\", 6, 18)\n&gt;&gt;&gt; hache = Arme(\"sa hache de guerre\", 1, 21)\n&gt;&gt;&gt; aragorn = Personnage(\"Aragorn\", 120, epee)\n&gt;&gt;&gt; orc = Personnage(\"Ograukh\", 140, hache)\n&gt;&gt;&gt; mdj = Arbitre(aragorn, orc)\n&gt;&gt;&gt; mdj.un_round()\nAragorn inflige 13 points de d\u00e9g\u00e2ts \u00e0 Ograukh avec son \u00e9p\u00e9e Narsil.\n&gt;&gt;&gt; mdj.un_round()\nOgraukh inflige 5 points de d\u00e9g\u00e2ts \u00e0 Aragorn avec sa hache de guerre.\n</code></pre> <p>Info</p> <p>Il faudra peut-\u00eatre aussi modifier les classes <code>Personnage</code> et <code>Arme</code>, pour y ajouter \u00e9ventuellement des attributs et des m\u00e9thodes...</p> <p>On pensera \u00e0 ajouter les test suppl\u00e9mentaires.</p> <p>On ne testera pas la classe <code>Arbitre</code>: les tests des sorties console sont tout \u00e0 fait possibles, mais hors programme !</p> <ul> <li><code>combat(self)</code> qui simulera un combat complet, c'est-\u00e0-dire une alternance de rounds jusqu'\u00e0 ce que l'un des personnage perde la vie.</li> </ul> <p>On affichera le d\u00e9tail des combats dans la console (\u00e0 l'aide de <code>print</code>).</p> <p>Le personnage qui commence sera choisi au hasard.</p> <p>Voici un exemple d'une s\u00e9quence de jeu:</p> <pre><code>&gt;&gt;&gt; epee = Arme(\"son \u00e9p\u00e9e Narsil\", 6, 18)\n&gt;&gt;&gt; hache = Arme(\"sa hache de guerre\", 1, 21)\n&gt;&gt;&gt; aragorn = Personnage(\"Aragorn\", 120, epee)\n&gt;&gt;&gt; orc = Personnage(\"Ograukh\", 140, hache)\n&gt;&gt;&gt; mdj = Arbitre(aragorn, orc)\n&gt;&gt;&gt; mdj.combat()\nUn combat s'engage entre Aragorn et Ograukh.\nAragorn prend l'initiative et frappe en premier.\nAragorn inflige 13 points de d\u00e9g\u00e2ts \u00e0 Ograukh avec son \u00e9p\u00e9e Narsil.\nOgraukh inflige 5 points de d\u00e9g\u00e2ts \u00e0 Aragorn avec sa hache de guerre.\n...\n...\nAragorn inflige 7 points de d\u00e9g\u00e2ts \u00e0 Ograukh avec son \u00e9p\u00e9e Narsil.\nAragorn gagne le combat: il lui reste 5 points de vie alors que Ograukh est mort.\n</code></pre>"},{"location":"2_terminales_nsi/DM/DM2/dm2/#calculatrice-polonaise-inverse-a-pile","title":"Calculatrice polonaise inverse \u00e0 pile","text":"<p>L'\u00e9criture polonaise inverse des expressions arithm\u00e9tiques place l'op\u00e9rateur apr\u00e8s ses op\u00e9randes.</p> <p>Cette notation ne n\u00e9cessite aucune parenth\u00e8se ni aucune r\u00e8gle de priorit\u00e9.</p> <p>Ainsi l'expression polonaise inverse d\u00e9crite par la cha\u00eene de caract\u00e8res '1 2 3 _ + 4 _' d\u00e9signe l'expression traditionnellement not\u00e9e (1 + 2 x 3) x 4.</p> <p>La valeur d'une telle expression peut \u00eatre calcul\u00e9e facilement en utilisant une pile pour stocker les r\u00e9sultats interm\u00e9diaires.</p> <p>Pour cela, on observe un \u00e0 un les \u00e9l\u00e9ments de l'expression et on effectue les actions suivantes:</p> <ul> <li>si on voit un nombre, on le place sur la pile;</li> <li>si on voit un op\u00e9rateur binaire, on r\u00e9cup\u00e8re les deux nombres au sommet de la pile, on leur applique l'op\u00e9rateur, et on replace le r\u00e9sultat sur la pile.</li> </ul> <p>Exemple pour <code>1 2 3 * + 4 *</code></p> <ul> <li>On voit 1 on empile</li> <li>On voit 2 on empile</li> <li>On voit 3 on empile</li> <li>On voit <code>*</code>, on d\u00e9pile les deux nombres au sommet, c'est \u00e0 dire 3 puis 2, puis on applique <code>*</code> ce qui donne 6, que l'on empile. La pile contient donc 1 et 6 (du fond vers le haut).</li> <li>On voit <code>+</code>, on d\u00e9pile les deux nombres au sommet, c'est \u00e0 dire 6 puis 1, puis on applique <code>+</code>, ce qui donne 7, que l'on empile. La pile contient donc 7.</li> <li>On voit 4 on empile</li> <li>On voit <code>*</code>, on d\u00e9pile les deux nombres au sommet, c'est \u00e0 dire 4 puis 7, puis on applique <code>*</code> ce qui donne 28, que l'on empile. La pile contient donc 28.</li> <li>L'expression ne contient plus rien, le r\u00e9sultat est donc le seul \u00e9l\u00e9ment de la pile, c'est-\u00e0-dire 28.</li> </ul> <p>Testez par vous m\u00eame pour l'expression <code>2 5 * 6 + 2 *</code> qui doit vous donner 32.</p> <p>Si l'expression est bien \u00e9crite, il y a bien toujours au moins deux nombres dans la pile lorsque l'on voit un op\u00e9rateur, et \u00e0 la fin du processus il reste exactement un nombre sur la pile, qui est le r\u00e9sultat.</p> <p>A faire</p> <ul> <li>Ecrire une fonction <code>eval_polonaise_inverse(expression)</code> prenant en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant une expression en notation polonaise inverse compos\u00e9e d'additions et de multiplications de nombres entiers et renvoyant la valeur de cette expression.</li> </ul> <p>On supposera que les \u00e9l\u00e9ments de l'expression sont s\u00e9par\u00e9s par des espaces. (penser \u00e0 <code>split</code> !)</p> <ul> <li>Ecrire des tests avec des <code>assert</code> \u00e0 la fin du fichier.</li> </ul> <p>Attention</p> <p>Cette fonction ne doit pas renvoyer de r\u00e9sultat si l'expression est mal \u00e9crite.</p> <p>Exemples:</p> <pre><code>eval_polonaise_inverse(\"1 1 +\") # 2\neval_polonaise_inverse(\"2 5 *\") # 10\neval_polonaise_inverse(\"1 2 3 * +\") # 7 (3*2+1)\neval_polonaise_inverse(\"1 2 3 * + 4 *\") # 28\neval_polonaise_inverse(\"1 2 3\") # None\neval_polonaise_inverse(\"1 2 + *\") # None\n</code></pre> <p>On utilisera la classe <code>Pile</code> suivante, accompagn\u00e9e de la classe <code>Cellule</code>:</p> <pre><code>class Cellule:\ndef __init__(self, v, s):\nself.valeur = v\nself.suivante = s\nclass Pile:\ndef __init__(self):\nself. contenu = None\ndef est_vide(self):\nreturn self.contenu is None\ndef empiler(self, v):\nself. contenu = Cellule(v, self. contenu)\ndef depiler(self):\nif self.est_vide():\nraise IndexError(\"d\u00e9piler sur une pile vide\")\nv = self.contenu.valeur\nself.contenu = self.contenu.suivante\nreturn v\n</code></pre> <p>Attention</p> <p>Les classes <code>Cellule</code> et <code>Pile</code> sont livr\u00e9es volontairement sans docstring.</p> <p>Vous devez imp\u00e9rativement \u00e9crire les docstring pour le rendu final.</p>"},{"location":"2_terminales_nsi/sujets-ecrits/","title":"Programme 2022-2023","text":""},{"location":"2_terminales_nsi/sujets-ecrits/#programme","title":"Programme","text":"<p>Bulletin Officiel</p> <p>Pour l'\u00e9preuve de mars 2023</p> <p>Lors de l'\u00e9preuve terminale dans l'enseignement de sp\u00e9cialit\u00e9 num\u00e9rique et sciences informatiques, les candidats peuvent \u00eatre \u00e9valu\u00e9s sur les parties suivantes du programme de la classe de terminale :</p>"},{"location":"2_terminales_nsi/sujets-ecrits/#structures-de-donnees","title":"\u00ab Structures de donn\u00e9es \u00bb","text":"<ul> <li>Structures de donn\u00e9es, interface et impl\u00e9mentation</li> <li>Vocabulaire de la programmation objet : classes, attributs, m\u00e9thodes, objets</li> <li>Listes, piles, files : structures lin\u00e9aires. Dictionnaires, index et cl\u00e9</li> <li>Arbres : structures hi\u00e9rarchiques. Arbres binaires : n\u0153uds, racines, feuilles, sous-arbres gauches, sous-arbres droits</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/#bases-de-donnees","title":"\u00ab Bases de donn\u00e9es \u00bb:","text":"<ul> <li>Mod\u00e8le relationnel : relation, attribut, domaine, clef primaire, clef \u00e9trang\u00e8re, sch\u00e9ma relationnel</li> <li>Base de donn\u00e9es relationnelle</li> <li>Langage SQL : requ\u00eates d'interrogation et de mise \u00e0 jour d'une base de donn\u00e9es</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/#architectures-materielles-systemes-dexploitation-et-reseaux","title":"\u00ab Architectures mat\u00e9rielles, syst\u00e8mes d'exploitation et r\u00e9seaux \u00bb","text":"<ul> <li>Gestion des processus et des ressources par un syst\u00e8me d'exploitation</li> <li>Protocoles de routage</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/#langages-et-programmation","title":"\u00ab Langages et programmation \u00bb:","text":"<ul> <li>R\u00e9cursivit\u00e9</li> <li>Modularit\u00e9</li> <li>Mise au point des programmes. Gestion des bugs</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/#algorithmique","title":"\u00ab Algorithmique \u00bb:","text":"<ul> <li>Algorithmes sur les arbres binaires et sur les arbres binaires de recherche</li> <li>M\u00e9thode \u00ab diviser pour r\u00e9gner \u00bb</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/","title":"Sujets Complets","text":"<p>https://fabricenativel.github.io/NSITerminale/index_annales/</p> <p>https://fabricenativel.github.io/Terminale/Annales/2022/EE/#polynesie-jour-1-22-nsij1po1</p> <p>https://lewebpedagogique.com/dlaporte/corrections-epreuves-pratiques-2021-nsi/</p>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/#2022-asie-jour-1","title":"2022 Asie Jour 1","text":"<ul> <li>NSIJ1JA1 - 2022 Asie Jour 1 Exo 1: algorithmique \u2013 cha\u00eenes de caract\u00e8res \u2013 complexit\u00e9.</li> <li>NSIJ1JA1: 2022 Asie Jour 1 Exo 2 : base de donn\u00e9es</li> <li>NSIJ1JA1 - 2022 Asie Jour 1 Exo 3: syst\u00e8me d\u2019exploitation</li> <li>NSIJ1JA1 - 2022 Asie Jour 1 Exo 4: programmation objet en langage Python</li> <li>NSIJ1JA1 - 2022 Asie Jour 1 Exo 5: programmation Python.</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/#2022-liban-jour-1","title":"2022 Liban Jour 1","text":"<ul> <li>NSIJ1LR1-: 2022 Liban Jour 1 Exo 1: listes, piles et files</li> <li>NSIJ1LR1-: 2022 Liban Jour 1 Exo 2: programmation objet</li> <li>NSIJ1LR1-: 2022 Liban Jour 1 Exo 3: bases de donn\u00e9es relationnelles, langage SQL</li> <li>NSIJ1LR1-: 2022 Liban Jour 1 Exo 4: arbres binaires en profondeurs pr\u00e9fixe et infixe</li> <li>NSIJ1LR1-: 2022 Liban Jour 1 Exo 5: transmission de donn\u00e9es dans un r\u00e9seau, architecture d\u2019un r\u00e9seau, protocoles de routage, langages et programmation.</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/#2022-centres-etrangers-jour-1","title":"2022 Centres \u00e9trangers Jour 1","text":"<ul> <li>NSIJ1G11: 2022 Centres \u00e9trangers Jour 1 Exo 1: listes, p-uplets et dictionnaires</li> <li>NSIJ1G11: 2022 Centres \u00e9trangers Jour 1 Exo 2: files et la programmation objet en langage python</li> <li>NSIJ1G11: 2022 Centres \u00e9trangers Jour 1 Exo 3: dictionnaires</li> <li>NSIJ1G11: 2022 Centres \u00e9trangers Jour 1 Exo 4: base de donn\u00e9es</li> <li>NSIJ1G11: 2022 Centres \u00e9trangers Jour 1 Exo 5: architecture mat\u00e9rielle des ordinateurs, les r\u00e9seaux et sur les Protocoles de routage</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/#2022-metropole-jour-1","title":"2022 M\u00e9tropole Jour 1","text":"<ul> <li>NSIJ1ME1: 2022 M\u00e9tropole Jour 1 Exo 1: structures de donn\u00e9es, piles</li> <li>NSIJ1ME1: 2022 M\u00e9tropole Jour 1 Exo 2: bases de donn\u00e9es</li> <li>NSIJ1ME1: 2022 M\u00e9tropole Jour 1 Exo 3: repr\u00e9sentations binaires et protocoles de routage</li> <li>NSIJ1ME1: 2022 M\u00e9tropole Jour 1 Exo 4: parcours des arbres binaires, diviser pour r\u00e9gner, r\u00e9cursivit\u00e9</li> <li>NSIJ1ME1: 2022 M\u00e9tropole Jour 1 Exo 5: programmation orient\u00e9e objet</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/#polynesie-jour-1","title":"Polyn\u00e9sie Jour 1","text":"<ul> <li>NSIJ1PO1: 2022 Polyn\u00e9sie Jour 1 Exo 1: programmation et r\u00e9cursivit\u00e9</li> <li>NSIJ1PO1: 2022 Polyn\u00e9sie Jour 1 Exo 2: architecture mat\u00e9rielle, ordonnancement et expressions bool\u00e9ennes</li> <li>NSIJ1PO1: 2022 Polyn\u00e9sie Jour 1 Exo 3: base de donn\u00e9es, mod\u00e8le relationnel, langage SQL</li> <li>NSIJ1PO1: 2022 Polyn\u00e9sie Jour 1 Exo 4: structures de donn\u00e9es, piles</li> <li>NSIJ1PO1: 2022 Polyn\u00e9sie Jour 1 Exo 5: algorithmique, algorithme sur les abres binaires</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/#asie-jour-2","title":"Asie Jour 2","text":"<ul> <li>NSIJ2JA1: 2022 Asie Jour 2 Exo 1: syst\u00e8mes d'exploitation Linux</li> <li>NSIJ2JA1: 2022 Asie Jour 2 Exo 2: arbres binaires de recherche</li> <li>NSIJ2JA1: 2022 Asie Jour 2 Exo 3: structures de donn\u00e9es, programmation</li> <li>NSIJ2JA1: 2022 Asie Jour 2 Exo 4: bases de donn\u00e9es et langage SQL</li> <li>NSIJ2JA1: 2022 Asie Jour 2 Exo 5: Ex\u00e9cution de programmes, recherche et corrections de bugs</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/#mayotte-jour-2","title":"Mayotte Jour 2","text":"<ul> <li>22-NSIJ2LR1: 2022 Mayotte Jour 2 Exo 1: structures de donn\u00e9es (pile).</li> <li>22-NSIJ2LR1: 2022 Mayotte Jour 2 Exo 2: bases de donn\u00e9es.</li> <li>22-NSIJ2LR1: 2022 Mayotte Jour 2 Exo 3: repr\u00e9sentation binaire d\u2019un entier relatif et les syst\u00e8mes d\u2019exploitation.</li> <li>22-NSIJ2LR1: 2022 Mayotte Jour 2 Exo 4: arbres binaires de recherche.</li> <li>22-NSIJ2LR1: 2022 Mayotte Jour 2 Exo 5: les algorithmes et la programmation Python.</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/#metropole-jour-2","title":"M\u00e9tropole Jour 2","text":"<ul> <li>22-NSIJ2ME1: 2022 M\u00e9tropole Jour 2 Exo 1: arbres binaires de recherche, la programmation orient\u00e9e objet et la r\u00e9cursivit\u00e9.</li> <li>22-NSIJ2ME1: 2022 M\u00e9tropole Jour 2 Exo 2: structures de donn\u00e9es.(pile)</li> <li>22-NSIJ2ME1: 2022 M\u00e9tropole Jour 2 Exo 3: les r\u00e9seaux et les protocoles de routages.</li> <li>22-NSIJ2ME1: 2022 M\u00e9tropole Jour 2 Exo 4: bases de donn\u00e9es relationnelles et le langage SQL.</li> <li>22-NSIJ2ME1: 2022 M\u00e9tropole Jour 2 Exo 5: programmation objet et la m\u00e9thode diviser pour r\u00e9gner.</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/#amerique-du-nord-jour-1","title":"Am\u00e9rique du Nord Jour 1","text":"<ul> <li>22-NSIJ1AN1: 2022 Am\u00e9rique du Nord Jour 1 Exo 1: bases de donn\u00e9es et SQL</li> <li>22-NSIJ1AN1: 2022 Am\u00e9rique du Nord Jour 1 Exo 2: r\u00e9seaux et protocoles de routage</li> <li>22-NSIJ1AN1: 2022 Am\u00e9rique du Nord Jour 1 Exo 3: arbres binaires de recherche et algorithmes associ\u00e9s</li> <li>22-NSIJ1AN1: 2022 Am\u00e9rique du Nord Jour 1 Exo 4: cha\u00efnes de caract\u00e8res, tableaux et programmation de base</li> <li>22-NSIJ1AN1: 2022 Am\u00e9rique du Nord Jour 1 Exo 5: files, tableaux et algorithmes associ\u00e9s</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/#amerique-du-nord-jour-2","title":"Am\u00e9rique du Nord Jour 2","text":"<ul> <li>22-NSIJ2AN1: 2022 Am\u00e9rique du Nord Jour 2 Exo 1: listes, arbres binaires de recherche, objet</li> <li>22-NSIJ2AN1: 2022 Am\u00e9rique du Nord Jour 2 Exo 2: syst\u00e8mes d'exploitation et gestion des processus</li> <li>22-NSIJ2AN1: 2022 Am\u00e9rique du Nord Jour 2 Exo 3: bases de donn\u00e9es et SQL</li> <li>22-NSIJ2AN1: 2022 Am\u00e9rique du Nord Jour 2 Exo 4: arbres binaires et algorithmes associ\u00e9s</li> <li>22-NSIJ2AN1: 2022 Am\u00e9rique du Nord Jour 2 Exo 5: tableaux \u00e0 deux dimensions et programmation en g\u00e9n\u00e9ral</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/02-sujets/#amerique-du-sud-jour-1","title":"Am\u00e9rique du Sud Jour 1","text":"<ul> <li>22-NSIJ1AS1: 2022 Am\u00e9rique du Sud Jour 1 Exo 1: bases de donn\u00e9es</li> </ul> Proposition de correction <ol> <li> <p>.</p> <ol> <li><code>id_mere</code> ne peut \u00eatre utilis\u00e9 comme cl\u00e9 primaire. En effet une m\u00e8re peut avoir plusieurs enfants.</li> <li>Le 2-uplet (<code>date</code>, <code>rang</code>) donne un identifiant unique: pour une date donn\u00e9e, le rang augmente \u00e0 chaque naissance, donc chaque couple (<code>date</code>, <code>rang</code>) est unique.</li> <li>le 2-uplet ne peut pas assurer de donner un identifiant unique: deux b\u00e9b\u00e9s peuvent faire le m\u00eame poids et la m\u00eame taille.</li> </ol> </li> <li> <p>Il y a un probl\u00e8me de contrainte d\u2019inte\u0301grite\u0301 entre la table Naissances et la table Patientes: un enfant a obligatoirement une me\u0300re. Avec cette requ\u00eate on essaie de supprimer une m\u00e8re dans la table Patients, sans supprimer le ou les b\u00e9b\u00e9(s) associ\u00e9(s) dans la table Naissance.</p> </li> </ol> <p>3. <pre><code>INSERT INTO Patientes\nVALUES(13862, \"Be\u0301langer\", \"Ninette\", \"La Rochelle\");\n</code></pre></p> <p>4. <pre><code>UPDATE Naissances\nSET prenom = \"Laurette\"\nWHERE idmere = 13860;\n</code></pre></p> <p>5. <pre><code>SELECT nom, prenom\nFROM Patientes\nWHERE commune = \"Aigrefeuille d'Aunis\"\nORDER BY nom, prenom;\n</code></pre></p> <p>6. <pre><code>SELECT AVG(Naissances.poids)\nFROM Naissances, TypesAccouchement\nWHERE TypesAccouchement.libelleAcc = \"ce\u0301sarienne\"\nAND Naissances.acc = TypesAccouchement.idAcc;\n</code></pre></p> <p>7.. Les nom et pre\u0301nom des me\u0300res qui ont accouche\u0301 par voie naturelle</p> <ul> <li>22-NSIJ1AS1: 2022 Am\u00e9rique du Sud Jour 1 Exo 2: programmation et algorithmes de tris</li> <li>22-NSIJ1AS1: 2022 Am\u00e9rique du Sud Jour 1 Exo 3: arbres binaires</li> <li>22-NSIJ1AS1: 2022 Am\u00e9rique du Sud Jour 1 Exo 4: gestion des processus et des ressources par un syst\u00e8me d'exploitation</li> <li>22-NSIJ1AS1: 2022 Am\u00e9rique du Sud Jour 1 Exo 5: r\u00e9seaux et protocoles de routage</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/03-structures/","title":"Structures de donn\u00e9es","text":""},{"location":"2_terminales_nsi/sujets-ecrits/03-structures/#sujets","title":"Sujets","text":"<ul> <li>NSIJ1JA1 - 2022 Asie Jour 1 Exo 4: programmation objet en langage Python</li> <li>NSIJ1G11: 2022 Centres \u00e9trangers Jour 1 Exo 1: listes, p-uplets et dictionnaires</li> <li>NSIJ1G11: 2022 Centres \u00e9trangers Jour 1 Exo 2: files et la programmation objet en langage python</li> <li>NSIJ1G11: 2022 Centres \u00e9trangers Jour 1 Exo 3: dictionnaires</li> <li>NSIJ1LR1-: 2022 Liban Jour 1 Exo 1: listes, piles et files</li> <li>NSIJ1LR1-: 2022 Liban Jour 1 Exo 2: programmation objet</li> <li>NSIJ1ME1: 2022 M\u00e9trople Jour 1 Exo 1: structures de donn\u00e9es, piles</li> <li>NSIJ1ME1: 2022 M\u00e9trople Jour 1 Exo 5: programmation orient\u00e9e objet</li> <li>NSIJ1PO1: 2022 Polyn\u00e9sie Jour 1 Exo 4: structures de donn\u00e9es, piles</li> <li>NSIJ2JA1: 2022 Asie Jour 2 Exo 3: structures de donn\u00e9es, programmation</li> <li>22-NSIJ2LR1: 2022 Mayotte Jour 2 Exo 1: structures de donn\u00e9es (pile).</li> <li>22-NSIJ2ME1: 2022 M\u00e9tropole Jour 2 Exo 2: structures de donn\u00e9es.(pile)</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/04-bases-donnees/","title":"Bases de donn\u00e9es","text":"","tags":["Sujets"]},{"location":"2_terminales_nsi/sujets-ecrits/04-bases-donnees/#sujets-et-exercices","title":"Sujets et exercices","text":"<ul> <li>NSIJ1JA1: 2022 Asie Jour 1 Exo 2 : base de donn\u00e9es</li> <li>NSIJ1G11: 2022 Centres \u00e9trangers Jour 1 Exo 4: base de donn\u00e9es</li> <li>NSIJ1LR1-: 2022 Liban Jour 1 Exo 3: bases de donn\u00e9es relationnelles, langage SQL</li> <li>NSIJ1ME1: 2022 M\u00e9trople Jour 1 Exo 2: bases de donn\u00e9es</li> <li>NSIJ1PO1: 2022 Polyn\u00e9sie Jour 1 Exo 3: base de donn\u00e9es, mod\u00e8le relationnel, langage SQL</li> <li>NSIJ2JA1: 2022 Asie Jour 2 Exo 4: bases de donn\u00e9es et langage SQL</li> <li>22-NSIJ2LR1: 2022 Mayotte Jour 2 Exo 2: bases de donn\u00e9es.</li> <li>22-NSIJ2ME1: 2022 M\u00e9tropole Jour 2 Exo 4: bases de donn\u00e9es relationnelles et le langage SQL.</li> </ul>","tags":["Sujets"]},{"location":"2_terminales_nsi/sujets-ecrits/04-bases-donnees/#2022-polynesie-jour-1","title":"2022 Polyn\u00e9sie Jour 1","text":"<p>L\u2019\u00e9nonc\u00e9 de cet exercice peut utiliser les mots du langage SQL suivants :</p> <p>CREATE TABLE, SELECT, FROM, WHERE, JOIN ON, INSERT INTO, VALUES,</p> <p>UPDATE, SET, DELETE, COUNT, DISTINCT, AND, OR, AS, ORDER BY, ASC, DESC</p> <p>Un site web recueille des donn\u00e9es de navigation dans une base de donn\u00e9es afin d'\u00e9tudier les profils de ses visiteurs.</p> <p>Chaque requ\u00eate d'interrogation d'une page de ce site est enregistr\u00e9e dans une premi\u00e8re table d\u00e9nomm\u00e9e Visites sous la forme d'un 5-uplet : (identifiant, adresse IP, date et heure de visite, nom de la page, navigateur).</p> <p>Le chargement de la page index.html par 192.168.1.91 le 12 juillet 1998 \u00e0 22h48 aura par exemple \u00e9t\u00e9 enregistr\u00e9 de la fa\u00e7on suivante :</p> <p>(1534, \"192.168.1.91\", \"1998-07-12 22:48:00\", \"index.html\", \"Internet explorer 4.1\").</p> <p>La commande SQL ayant permis de cr\u00e9er cette table est la suivante:</p> <pre><code>CREATE TABLE Visites (\nidentifiant INTEGER NOT NULL UNIQUE,\nip VARCHAR(15),\ndateheure DATETIME,\nnompage TEXT,\nnavigateur TEXT\n);\n</code></pre> <ol> <li>a. Donner une commande d'interrogation en langage SQL permettant d'obtenir    l'ensemble des 2-uplets (adresse IP, nom de la page) de cette table.</li> </ol> <p>b. Donner une commande en langage SQL permettant d'obtenir l'ensemble des adresses IP ayant interrog\u00e9 le site, sans doublon.</p> <p>c. Donner une commande en langage SQL permettant d'obtenir la liste des noms des pages visit\u00e9es par l'adresse IP 192.168.1.91</p> <p>Ce site web met en place, sur chacune de ses pages, un programme en javascript qui envoie au serveur, \u00e0 intervalle r\u00e9gulier de 15 secondes, le temps en secondes de pr\u00e9sence sur la page. Ces envois contiennent tous la valeur de identifiant correspondant au chargement initial de la page.</p> <p>Par exemple, si le visiteur du 12 juillet 1998 est rest\u00e9 65 secondes sur la page, celle-ci a envoy\u00e9 au serveur les 4 doublets (1534, 15), (1534, 30), (1534, 45) et (1534, 60).</p> <p>Ces donn\u00e9es sont enregistr\u00e9es dans une table nomm\u00e9e Pings cr\u00e9\u00e9e avec la commande ci-dessous :</p> <pre><code>CREATE TABLE Pings (\nidentifiant INTEGER,\nduree INTEGER\n);\n</code></pre> <p>En plus de l'inscription d'une ligne dans la table Visites, chaque chargement d'une nouvelle page provoque l'insertion d'une ligne dans la table Pings comprenant l'identifiant de ce chargement et une dur\u00e9e de 0.</p> <p>Les attributs identifiant des tables Visites et Pings partagent les m\u00eames valeurs.</p> <ol> <li>a. De quelle table l\u2019attribut identifiant est-il la cl\u00e9 primaire ?</li> </ol> <p>b. De quelle table l\u2019attribut identifiant est-il une cl\u00e9 \u00e9trang\u00e8re ?</p> <p>c. Par cons\u00e9quent, quelles v\u00e9rifications sont automatiquement effectu\u00e9es par le syst\u00e8me de gestion de base de donn\u00e9es ?</p> <ol> <li>Le serveur re\u00e7oit le doublet (identifiant, duree) suivant : (1534, 105).    \u00c9crire la commande SQL d'insertion qui permet d'ajouter cet enregistrement \u00e0 la    table Pings.</li> </ol> <p>On envisage ensuite d'optimiser la table en se contentant d'une seule ligne par identifiant dans la table Pings : les valeurs de l'attribut duree devraient alors \u00eatre mises \u00e0 jour \u00e0 chaque r\u00e9ception d'un nouveau doublet (identifiant, duree).</p> <ol> <li>a. \u00c9crire la requ\u00eate de mise \u00e0 jour permettant de fixer \u00e0 120 la valeur de l'attribut    duree associ\u00e9e \u00e0 l'identifiant 1534 dans la table Pings.</li> </ol> <p>b. Expliquer pourquoi on ne peut pas \u00eatre certain que les donn\u00e9es envoy\u00e9es par une page web, depuis le navigateur d'un client, via plusieurs requ\u00eates formul\u00e9es en javascript, arrivent au serveur dans l'ordre dans lequel elles ont \u00e9t\u00e9 \u00e9mises.</p> <p>c. En d\u00e9duire qu'il est pr\u00e9f\u00e9rable d'utiliser une requ\u00eate d'insertion plut\u00f4t qu'une requ\u00eate de mise \u00e0 jour pour ajouter des donn\u00e9es \u00e0 la table Pings.</p> <ol> <li>\u00c9crire une requ\u00eate SQL utilisant le mot-clef JOIN et une clause WHERE,    permettant de trouver les noms de toutes les pages qui ont \u00e9t\u00e9 consult\u00e9es plus    d'une minute par au moins un utilisateur.</li> </ol>","tags":["Sujets"]},{"location":"2_terminales_nsi/sujets-ecrits/05-architecture/","title":"Architectures mat\u00e9rielles, syst\u00e8mes d'exploitation et r\u00e9seaux","text":""},{"location":"2_terminales_nsi/sujets-ecrits/05-architecture/#sujet","title":"Sujet","text":"<ul> <li>NSIJ1JA1 - 2022 Asie Jour 1 Exo 3: syst\u00e8me d\u2019exploitation</li> <li>NSIJ1G11: 2022 Centres \u00e9trangers Jour 1 Exo 5: architecture mat\u00e9rielle des ordinateurs, les r\u00e9seaux et sur les Protocoles de routage</li> <li>NSIJ1LR1-: 2022 Liban Jour 1 Exo 5: transmission de donn\u00e9es dans un r\u00e9seau, architecture d\u2019un r\u00e9seau, protocoles de routage, langages et programmation.</li> <li>NSIJ1ME1: 2022 M\u00e9trople Jour 1 Exo 3: repr\u00e9sentations binaires et protocoles de routage</li> <li>NSIJ1PO1: 2022 Polyn\u00e9sie Jour 1 Exo 2: architecture mat\u00e9rielle, ordonnancement et expressions bool\u00e9ennes</li> <li>NSIJ2JA1: 2022 Asie Jour 2 Exo 1: syst\u00e8mes d'exploitation Linux</li> <li>22-NSIJ2LR1: 2022 Mayotte Jour 2 Exo 3: repr\u00e9sentation binaire d\u2019un entier relatif et les syst\u00e8mes d\u2019exploitation.</li> <li>22-NSIJ2ME1: 2022 M\u00e9tropole Jour 2 Exo 3: les r\u00e9seaux et les protocoles de routages.</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/06-langages/","title":"Langages et programmation","text":""},{"location":"2_terminales_nsi/sujets-ecrits/06-langages/#sujets","title":"Sujets","text":"<ul> <li>NSIJ1JA1 - 2022 Asie Jour 1 Exo 5: programmation Python.</li> <li>NSIJ1PO1: 2022 Polyn\u00e9sie Jour 1 Exo 1: programmation et r\u00e9cursivit\u00e9</li> <li>NSIJ2JA1: 2022 Asie Jour 2 Exo 5: Ex\u00e9cution de programmes, recherche et corrections de bugs</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/07-algorithmique/","title":"Algorithmique","text":""},{"location":"2_terminales_nsi/sujets-ecrits/07-algorithmique/#sujets","title":"Sujets","text":"<ul> <li>NSIJ1JA1 - 2022 Asie Jour 1 Exo 1: algorithmique \u2013 cha\u00eenes de caract\u00e8res \u2013 complexit\u00e9.</li> <li>NSIJ1LR1-: 2022 Liban Jour 1 Exo 4: arbres binaires en profondeurs pr\u00e9fixe et infixe</li> <li>NSIJ1ME1: 2022 M\u00e9trople Jour 1 Exo 4: parcours des arbres binaires, diviser pour r\u00e9gner, r\u00e9cursivit\u00e9</li> <li>NSIJ1PO1: 2022 Polyn\u00e9sie Jour 1 Exo 5: algorithmique, algorithme sur les abres binaires</li> <li>NSIJ2JA1: 2022 Asie Jour 2 Exo 2: arbres binaires de recherche</li> <li>22-NSIJ2LR1: 2022 Mayotte Jour 2 Exo 5: les algorithmes et la programmation Python.</li> <li>22-NSIJ2LR1: 2022 Mayotte Jour 2 Exo 4: arbres binaires de recherche.</li> <li>22-NSIJ2ME1: 2022 M\u00e9tropole Jour 2 Exo 5: programmation objet et la m\u00e9thode diviser pour r\u00e9gner.</li> <li>22-NSIJ2ME1: 2022 M\u00e9tropole Jour 2 Exo 1: arbres binaires de recherche, la programmation orient\u00e9e objet et la r\u00e9cursivit\u00e9.</li> </ul>"},{"location":"2_terminales_nsi/sujets-ecrits/2022-polynesie-1/","title":"2022 Polyn\u00e9sie Jour 1","text":"","tags":["Sujets"]},{"location":"2_terminales_nsi/sujets-ecrits/2022-polynesie-1/#sujet-polynesie-jour-1-en-pdf","title":"Sujet Polyn\u00e9sie Jour 1 en PDF","text":"","tags":["Sujets"]},{"location":"2_terminales_nsi/sujets-ecrits/2022-polynesie-1/#programmation-et-principalement-de-la-recursivite","title":"\u00abprogrammation\u00bb, et principalement de la r\u00e9cursivit\u00e9.","text":"<p>On rappelle qu'une cha\u00eene de caract\u00e8res peut \u00eatre repr\u00e9sent\u00e9e en Python par un texte entre guillemets \"\" et que :</p> <ul> <li>la fonction len renvoie la longueur de la cha\u00eene de caract\u00e8res pass\u00e9e en   param\u00e8tre ;</li> <li>si une variable ch d\u00e9signe une cha\u00eene de caract\u00e8res, alors ch[0] renvoie son   premier caract\u00e8re, ch[1] le deuxi\u00e8me, etc. ;</li> <li>l'op\u00e9rateur + permet de concat\u00e9ner deux cha\u00eenes de caract\u00e8res.</li> </ul> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; texte = \"bricot\"\n&gt;&gt;&gt; len(texte)\n6\n&gt;&gt;&gt; texte[0]\n\"b\"\n&gt;&gt;&gt; texte[1]\n\"r\"\n&gt;&gt;&gt; \"a\" + texte\n\"abricot\"\n</code></pre> <p>On s'int\u00e9resse dans cet exercice \u00e0 la construction de cha\u00eenes de caract\u00e8res suivant certaines r\u00e8gles de construction.</p> <p>R\u00e8gle A : une cha\u00eene est construite suivant la r\u00e8gle A dans les deux cas suivants:</p> <ul> <li>soit elle est \u00e9gale \u00e0 \"a\" ;</li> <li>soit elle est de la forme \"a\"+chaine+\"a\", o\u00f9 chaine est une cha\u00eene de   caract\u00e8res construite suivant la r\u00e8gle A.</li> </ul> <p>R\u00e8gle B : une cha\u00eene est construite suivant la r\u00e8gle B dans les deux cas suivants :</p> <ul> <li>soit elle est de la forme \"b\"+chaine+\"b\", o\u00f9 chaine est une cha\u00eene de   caract\u00e8res construite suivant la r\u00e8gle A ;</li> <li>soit elle est de la forme \"b\"+chaine+\"b\", o\u00f9 chaine est une cha\u00eene de   caract\u00e8res construite suivant la r\u00e8gle B.</li> </ul> <p>On a reproduit ci-dessous l'aide de la fonction choice du module random.</p> <pre><code>&gt;&gt;&gt;from random import choice\n&gt;&gt;&gt;help(choice)\nHelp on method choice in module random:\nchoice(seq) method of random.Random instance\nChoose a random element from a non-empty sequence.\n</code></pre> <p>La fonction A() ci-dessous renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A, en choisissant al\u00e9atoirement entre les deux cas de figure de cette r\u00e8gle.</p> <pre><code>def A():\nif choice([True, False]):\nreturn \"a\"\nelse:\nreturn \"a\" + A() + \"a\"\n</code></pre> <ol> <li>a. Cette fonction est-elle r\u00e9cursive ? Justifier.    b. La fonction choice([True, False]) peut renvoyer False un tr\u00e8s grand    nombre de fois cons\u00e9cutives. Expliquer pourquoi ce cas de figure am\u00e8nerait \u00e0    une erreur d'ex\u00e9cution.</li> </ol> <p>Dans la suite, on consid\u00e8re une deuxi\u00e8me version de la fonction A. \u00c0 pr\u00e9sent, la fonction prend en param\u00e8tre un entier n tel que, si la valeur de n est n\u00e9gative ou nulle, la fonction renvoie \"a\". Si la valeur de n est strictement positive, elle renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle A avec un n d\u00e9cr\u00e9ment\u00e9 de 1, en choisissant al\u00e9atoirement entre les deux cas de figure de cette r\u00e8gle.</p> <pre><code>def A(n):\nif ... or choice([True, False]) :\nreturn \"a\"\nelse:\nreturn \"a\" + ... + \"a\"\n</code></pre> <ol> <li>a. Recopier sur la copie et compl\u00e9ter aux emplacements des points de    suspension ... le code de cette nouvelle fonction A.</li> </ol> <p>b. Justifier le fait qu'un appel de la forme A(n) avec n un nombre entier positif inf\u00e9rieur \u00e0 50, termine toujours.</p> <p>On donne ci-apr\u00e8s le code de la fonction r\u00e9cursive B qui prend en param\u00e8tre un entier n et qui renvoie une cha\u00eene de caract\u00e8res construite suivant la r\u00e8gle B.</p> <pre><code>def B(n):\nif n &lt;= 0 or choice([True, False]):\nreturn \"b\" + A(n-1) + \"b\"\nelse:\nreturn \"b\" + B(n-1) + \"b\"\n</code></pre> <p>On admet que :</p> <ul> <li>les appels A(-1)et A(0) renvoient la cha\u00eene \"a\";</li> <li>l\u2019appel A(1) renvoie la cha\u00eene \"a\" ou la cha\u00eene \"aaa\";</li> <li> <p>l\u2019appel A(2) renvoie la cha\u00eene \"a\", la cha\u00eene \"aaa\" ou la cha\u00eene \"aaaaa\".</p> </li> <li> <p>Donner toutes les cha\u00eenes possibles renvoy\u00e9es par les appels B(0), B(1)    et B(2).</p> </li> </ul> <p>On suppose maintenant qu'on dispose d'une fonction raccourcir qui prend comme param\u00e8tre une cha\u00eene de caract\u00e8res de longueur sup\u00e9rieure ou \u00e9gale \u00e0 2, et renvoie la cha\u00eene de caract\u00e8res obtenue \u00e0 partir de la cha\u00eene initiale en lui \u00f4tant le premier et le dernier caract\u00e8re.</p> <p>Par exemple :</p> <pre><code>&gt;&gt;&gt; raccourcir(\"abricot\")\n\"brico\"\n&gt;&gt;&gt; raccourcir(\"ab\")\n\"\"\n</code></pre> <ol> <li>a. Recopier sur la copie et compl\u00e9ter les points de suspension ... du code de la    fonction regleA ci-dessous pour qu'elle renvoie True si la cha\u00eene pass\u00e9e en    param\u00e8tre est construite suivant la r\u00e8gle A, et False sinon.</li> </ol> <pre><code>def regleA(chaine):\nn = len(chaine)\nif n &gt;= 2:\nreturn chaine[0] == \"a\" and chaine[n-1] == \"a\" and\nregleA(...)\nelse:\nreturn chaine == ...\n</code></pre> <p>b. \u00c9crire le code d\u2019une fonction regleB, prenant en param\u00e8tre une cha\u00eene de caract\u00e8res et renvoyant True si la cha\u00eene est construite suivant la r\u00e8gle B, et False sinon.</p>","tags":["Sujets"]},{"location":"2_terminales_nsi/sujets-ecrits/2022-polynesie-1/#architecture-materielle-et-principalement-dordonnancement-et-dexpressions-booleennes","title":"\u00ab architecture mat\u00e9rielle \u00bb, et principalement d'ordonnancement et d'expressions bool\u00e9ennes.","text":"<p>Un syst\u00e8me est compos\u00e9 de 4 p\u00e9riph\u00e9riques, num\u00e9rot\u00e9s de 0 \u00e0 3, et d'une m\u00e9moire, reli\u00e9s entre eux par un bus auquel est \u00e9galement connect\u00e9 un dispositif ordonnanceur. \u00c0 l'aide d'un signal sp\u00e9cifique envoy\u00e9 sur le bus, l'ordonnanceur sollicite \u00e0 tour de r\u00f4le les p\u00e9riph\u00e9riques pour qu'ils indiquent le type d'op\u00e9ration (lecture ou \u00e9criture) qu'ils souhaitent effectuer, et l'adresse m\u00e9moire concern\u00e9e.</p> <p>Un tour a lieu quand les 4 p\u00e9riph\u00e9riques ont \u00e9t\u00e9 sollicit\u00e9s. Au d\u00e9but d'un nouveau tour, on consid\u00e8re que toutes les adresses sont disponibles en lecture et \u00e9criture.</p> <p>Si un p\u00e9riph\u00e9rique demande l'\u00e9criture \u00e0 une adresse m\u00e9moire \u00e0 laquelle on n'a pas encore acc\u00e9d\u00e9 pendant le tour, l'ordonnanceur r\u00e9pond \"OK\" et l'\u00e9criture a lieu.</p> <p>Si on a d\u00e9j\u00e0 demand\u00e9 la lecture ou l'\u00e9criture \u00e0 cette adresse, l'ordonnanceur r\u00e9pond \"ATT\" et l'op\u00e9ration n'a pas lieu.</p> <p>Si un p\u00e9riph\u00e9rique demande la lecture \u00e0 une adresse \u00e0 laquelle on n'a pas encore acc\u00e9d\u00e9 en \u00e9criture pendant le tour, l'ordonnanceur r\u00e9pond \"OK\" et la lecture a lieu.</p> <p>Plusieurs lectures peuvent avoir donc lieu pendant le m\u00eame tour \u00e0 la m\u00eame adresse.</p> <p>Si un p\u00e9riph\u00e9rique demande la lecture \u00e0 une adresse \u00e0 laquelle on a d\u00e9j\u00e0 acc\u00e9d\u00e9 en \u00e9criture, l'ordonnanceur r\u00e9pond \"ATT\" et la lecture n'a pas lieu.</p> <p>Ainsi, pendant un tour, une adresse peut \u00eatre utilis\u00e9e soit une seule fois en \u00e9criture, soit autant de fois qu'on veut en lecture, soit pas utilis\u00e9e.</p> <p>Si un p\u00e9riph\u00e9rique ne peut pas effectuer une op\u00e9ration \u00e0 une adresse, il demande la m\u00eame op\u00e9ration \u00e0 la m\u00eame adresse au tour suivant.</p> <ol> <li> <p>Le tableau donn\u00e9 en annexe 1 indique, sur chaque ligne, le p\u00e9riph\u00e9rique    s\u00e9lectionn\u00e9, l'adresse \u00e0 laquelle il souhaite acc\u00e9der et l'op\u00e9ration \u00e0 effectuer sur    cette adresse. Compl\u00e9ter dans la derni\u00e8re colonne de cette annexe, \u00e0 rendre    avec la copie, la r\u00e9ponse donn\u00e9e par l'ordonnanceur pour chaque op\u00e9ration.    On suppose dans toute la suite que :</p> </li> <li> <p>le p\u00e9riph\u00e9rique 0 \u00e9crit syst\u00e9matiquement \u00e0 l'adresse 10 ;</p> </li> <li>le p\u00e9riph\u00e9rique 1 lit syst\u00e9matiquement \u00e0 l'adresse 10 ;</li> <li>le p\u00e9riph\u00e9rique 2 \u00e9crit alternativement aux adresses 11 et 12 ;</li> <li>le p\u00e9riph\u00e9rique 3 lit alternativement aux adresses 11 et 12 ;</li> </ol> <p>Pour les p\u00e9riph\u00e9riques 2 et 3, le changement d\u2019adresse n\u2019est effectif que lorsque l\u2019op\u00e9ration et r\u00e9alis\u00e9e.</p> <ol> <li>On suppose que les p\u00e9riph\u00e9riques sont s\u00e9lectionn\u00e9s \u00e0 chaque tour dans l'ordre    0 ; 1 ; 2 ; 3. Expliquer ce qu'il se passe pour le p\u00e9riph\u00e9rique 1.</li> </ol> <p>Les p\u00e9riph\u00e9riques sont sollicit\u00e9s de la mani\u00e8re suivante lors de quatre tours successifs :</p> <ul> <li>au premier tour, ils sont sollicit\u00e9s dans l\u2019ordre 0 ; 1 ; 2 ; 3 ;</li> <li>au deuxi\u00e8me tour, dans l\u2019ordre 1 ; 2 ; 3 ; 0 ;</li> <li>au troisi\u00e8me tour, 2 ; 3 ; 0 ; 1 ;</li> <li>puis 3 ; 0 ; 1 ; 2 au dernier tour.</li> <li> <p>Et on recommence...</p> </li> <li> <p>a. Pr\u00e9ciser pour chacun de ces tours si le p\u00e9riph\u00e9rique 0 peut \u00e9crire et si le    p\u00e9riph\u00e9rique 1 peut lire.</p> </li> </ul> <p>b. En d\u00e9duire la proportion des valeurs \u00e9crites par le p\u00e9riph\u00e9rique 0 qui sont effectivement lues par le p\u00e9riph\u00e9rique 1.</p> <p>On change la m\u00e9thode d'ordonnancement : on d\u00e9termine l'ordre des p\u00e9riph\u00e9riques au cours d'un tour \u00e0 l'aide de deux listes d'attente ATTL_L et ATT_E \u00e9tablies au tour pr\u00e9c\u00e9dent.</p> <p>Au cours d'un tour, on place dans la liste ATT_L toutes les op\u00e9rations de lecture mises en attente, et dans la liste d'attente ATT_E toutes les op\u00e9rations d'\u00e9criture mises en attente.</p> <p>Au d\u00e9but du tour suivant, on \u00e9tablit l'ordre d'interrogation des p\u00e9riph\u00e9riques en proc\u00e9dant ainsi :</p> <ul> <li> <p>on interroge ceux pr\u00e9sents dans la liste ATT_L, par ordre croissant d'adresse,</p> </li> <li> <p>on interroge ensuite ceux pr\u00e9sents dans la liste ATT_E, par ordre croissant   d'adresse,</p> </li> </ul> <p>puis on interroge les p\u00e9riph\u00e9riques restants, par ordre croissant d\u2019adresse.</p> <ol> <li>Compl\u00e9ter et rendre avec la copie le tableau fourni en annexe 2, en utilisant    l'ordonnancement d\u00e9crit ci-dessus, sur 3 tours.</li> </ol> <p>Les colonnes e0 et e1 du tableau suivant recensent les deux chiffres de l'\u00e9criture binaire de l\u2019entier n de la premi\u00e8re colonne.</p> nombre n \u00e9criture binaire de n sur deux bits e1 e0 0 00 0 0 1 01 0 1 2 10 1 0 3 11 1 1 <p>L'ordonnanceur attribue \u00e0 deux signaux sur le bus de donn\u00e9es les valeurs de e0 et e1 associ\u00e9es au num\u00e9ro du circuit qu\u2019il veut s\u00e9lectionner. On souhaite construire \u00e0 l'aide des portes ET, OU et NON un circuit pour chaque p\u00e9riph\u00e9rique.</p> <p>Chacun des quatre circuits \u00e0 construire prend en entr\u00e9e deux signaux e0 et e1, le signal de sortie s valant 1 uniquement lorsque les niveaux de e0 et e1 correspondent aux bits de l'\u00e9criture en binaire du num\u00e9ro du p\u00e9riph\u00e9rique correspondant.</p> <p>Par exemple, le circuit ci-dessous r\u00e9alise la s\u00e9lection du p\u00e9riph\u00e9rique 3. En effet, le signal s vaut 1 si et seulement si e0 et e1 valent tous les deux 1.</p> <p></p> <ol> <li>a. Recopier sur la copie et indiquer dans le circuit ci-dessous les entr\u00e9es e0 et    e1 de fa\u00e7on \u00e0 ce que ce circuit s\u00e9lectionne le p\u00e9riph\u00e9rique 1.</li> </ol> <p></p> <p>b. Dessiner un circuit constitu\u00e9 d'une porte ET et d'une porte NON, qui s\u00e9lectionne le p\u00e9riph\u00e9rique 2.</p> <p>c. Dessiner un circuit permettant de s\u00e9lectionner le p\u00e9riph\u00e9rique 0.</p>","tags":["Sujets"]},{"location":"2_terminales_nsi/sujets-ecrits/2022-polynesie-1/#base-de-donnees-et-principalement-du-modele-relationnel-et-du-langage-sql","title":"\u00ab base de donn\u00e9es \u00bb, et principalement du mod\u00e8le relationnel et du langage SQL.","text":"<p>L\u2019\u00e9nonc\u00e9 de cet exercice peut utiliser les mots du langage SQL suivants :</p> <p>CREATE TABLE, SELECT, FROM, WHERE, JOIN ON, INSERT INTO, VALUES,</p> <p>UPDATE, SET, DELETE, COUNT, DISTINCT, AND, OR, AS, ORDER BY, ASC, DESC</p> <p>Un site web recueille des donn\u00e9es de navigation dans une base de donn\u00e9es afin d'\u00e9tudier les profils de ses visiteurs.</p> <p>Chaque requ\u00eate d'interrogation d'une page de ce site est enregistr\u00e9e dans une premi\u00e8re table d\u00e9nomm\u00e9e Visites sous la forme d'un 5-uplet : (identifiant, adresse IP, date et heure de visite, nom de la page, navigateur).</p> <p>Le chargement de la page index.html par 192.168.1.91 le 12 juillet 1998 \u00e0 22h48 aura par exemple \u00e9t\u00e9 enregistr\u00e9 de la fa\u00e7on suivante :</p> <p>(1534, \"192.168.1.91\", \"1998-07-12 22:48:00\", \"index.html\", \"Internet explorer 4.1\").</p> <p>La commande SQL ayant permis de cr\u00e9er cette table est la suivante:</p> <pre><code>CREATE TABLE Visites (\nidentifiant INTEGER NOT NULL UNIQUE,\nip VARCHAR(15),\ndateheure DATETIME,\nnompage TEXT,\nnavigateur TEXT\n);\n</code></pre> <ol> <li>a. Donner une commande d'interrogation en langage SQL permettant d'obtenir    l'ensemble des 2-uplets (adresse IP, nom de la page) de cette table.</li> </ol> <p>b. Donner une commande en langage SQL permettant d'obtenir l'ensemble des adresses IP ayant interrog\u00e9 le site, sans doublon.</p> <p>c. Donner une commande en langage SQL permettant d'obtenir la liste des noms des pages visit\u00e9es par l'adresse IP 192.168.1.91</p> <p>Ce site web met en place, sur chacune de ses pages, un programme en javascript qui envoie au serveur, \u00e0 intervalle r\u00e9gulier de 15 secondes, le temps en secondes de pr\u00e9sence sur la page. Ces envois contiennent tous la valeur de identifiant correspondant au chargement initial de la page.</p> <p>Par exemple, si le visiteur du 12 juillet 1998 est rest\u00e9 65 secondes sur la page, celle-ci a envoy\u00e9 au serveur les 4 doublets (1534, 15), (1534, 30), (1534, 45) et (1534, 60).</p> <p>Ces donn\u00e9es sont enregistr\u00e9es dans une table nomm\u00e9e Pings cr\u00e9\u00e9e avec la commande ci-dessous :</p> <pre><code>CREATE TABLE Pings (\nidentifiant INTEGER,\nduree INTEGER\n);\n</code></pre> <p>En plus de l'inscription d'une ligne dans la table Visites, chaque chargement d'une nouvelle page provoque l'insertion d'une ligne dans la table Pings comprenant l'identifiant de ce chargement et une dur\u00e9e de 0.</p> <p>Les attributs identifiant des tables Visites et Pings partagent les m\u00eames valeurs.</p> <ol> <li>a. De quelle table l\u2019attribut identifiant est-il la cl\u00e9 primaire ?</li> </ol> <p>b. De quelle table l\u2019attribut identifiant est-il une cl\u00e9 \u00e9trang\u00e8re ?</p> <p>c. Par cons\u00e9quent, quelles v\u00e9rifications sont automatiquement effectu\u00e9es par le syst\u00e8me de gestion de base de donn\u00e9es ?</p> <ol> <li>Le serveur re\u00e7oit le doublet (identifiant, duree) suivant : (1534, 105).    \u00c9crire la commande SQL d'insertion qui permet d'ajouter cet enregistrement \u00e0 la    table Pings.</li> </ol> <p>On envisage ensuite d'optimiser la table en se contentant d'une seule ligne par identifiant dans la table Pings : les valeurs de l'attribut duree devraient alors \u00eatre mises \u00e0 jour \u00e0 chaque r\u00e9ception d'un nouveau doublet (identifiant, duree).</p> <ol> <li>a. \u00c9crire la requ\u00eate de mise \u00e0 jour permettant de fixer \u00e0 120 la valeur de l'attribut    duree associ\u00e9e \u00e0 l'identifiant 1534 dans la table Pings.</li> </ol> <p>b. Expliquer pourquoi on ne peut pas \u00eatre certain que les donn\u00e9es envoy\u00e9es par une page web, depuis le navigateur d'un client, via plusieurs requ\u00eates formul\u00e9es en javascript, arrivent au serveur dans l'ordre dans lequel elles ont \u00e9t\u00e9 \u00e9mises.</p> <p>c. En d\u00e9duire qu'il est pr\u00e9f\u00e9rable d'utiliser une requ\u00eate d'insertion plut\u00f4t qu'une requ\u00eate de mise \u00e0 jour pour ajouter des donn\u00e9es \u00e0 la table Pings.</p> <ol> <li>\u00c9crire une requ\u00eate SQL utilisant le mot-clef JOIN et une clause WHERE,    permettant de trouver les noms de toutes les pages qui ont \u00e9t\u00e9 consult\u00e9es plus    d'une minute par au moins un utilisateur.</li> </ol>","tags":["Sujets"]},{"location":"2_terminales_nsi/sujets-ecrits/2022-polynesie-1/#structures-de-donnees-et-principalement-des-piles","title":"\u00ab structures de donn\u00e9es \u00bb, et principalement des piles.","text":"<p>La classe Pile utilis\u00e9e dans cet exercice est impl\u00e9ment\u00e9e en utilisant des listes Python et propose quatre \u00e9l\u00e9ments d'interface :</p> <ul> <li>Un constructeur qui permet de cr\u00e9er une pile vide, repr\u00e9sent\u00e9e par [] ;</li> <li>La m\u00e9thode est_vide()qui renvoie True si l'objet est une pile ne contenant   aucun \u00e9l\u00e9ment, et False sinon ;</li> <li>La m\u00e9thode empiler qui prend un objet quelconque en param\u00e8tre et ajoute cet   objet au sommet de la pile. Dans la repr\u00e9sentation de la pile dans la console, cet   objet appara\u00eet \u00e0 droite des autres \u00e9l\u00e9ments de la pile ;</li> <li>La m\u00e9thode depiler qui renvoie l'objet pr\u00e9sent au sommet de la pile et le retire   de la pile.</li> </ul> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; mapile = Pile()\n&gt;&gt;&gt; mapile.empiler(2)\n&gt;&gt;&gt; mapile\n[2]\n&gt;&gt;&gt; mapile.empiler(3)\n&gt;&gt;&gt; mapile.empiler(50)\n&gt;&gt;&gt; mapile\n[2, 3, 50]\n&gt;&gt;&gt; mapile.depiler()\n50\n&gt;&gt;&gt; mapile\n[2, 3]\n</code></pre> <p>La m\u00e9thode est_triee ci-dessous renvoie True si, en d\u00e9pilant tous les \u00e9l\u00e9ments, ils sont trait\u00e9s dans l'ordre croissant, et False sinon.</p> <p>```python showLineNumbers def est_triee(self):     if not self.est_vide() :         e1 = self.depiler()         while not self.est_vide():             e2 = self.depiler()             if e1 ... e2 :                 return False             e1 = ...         return True <pre><code>1. Recopier sur la copie les lignes 6 et 8 en compl\u00e9tant les points de suspension.\n\nOn cr\u00e9\u00e9 dans la console la pile A repr\u00e9sent\u00e9e par [1, 2, 3, 4].\n\n2. a. Donner la valeur renvoy\u00e9e par l\u2019appel A.est_triee().\n\nb. Donner le contenu de la pile A apr\u00e8s l'ex\u00e9cution de cette instruction.\n\nOn souhaite maintenant \u00e9crire le code d\u2019une m\u00e9thode depileMax d'une pile non vide\nne contenant que des nombres entiers et renvoyant le plus grand \u00e9l\u00e9ment de cette pile\nen le retirant de la pile.\n\nApr\u00e8s l'ex\u00e9cution de p.depileMax(), le nombre d'\u00e9l\u00e9ments de la pile p diminue donc\nde 1.\n\n```python showLineNumbers\ndef depileMax(self):\n    assert not self.est_vide(), \"Pile vide\"\n    q = Pile()\n    maxi = self.depiler()\n    while not self.est_vide() :\n        elt = self.depiler()\n        if maxi &lt; elt :\n            q.empiler(maxi)\n            maxi = ...\n        else :\n            ...\n    while not q.est_vide():\n        self.empiler(q.depiler())\n    return maxi\n</code></pre></p> <ol> <li>Recopier sur la copie les lignes 9 et 11 en compl\u00e9tant les points de suspension.</li> </ol> <p>On cr\u00e9\u00e9 la pile B repr\u00e9sent\u00e9e par [9, -7, 8, 12, 4] et on effectue l\u2019appel B.depileMax().</p> <ol> <li>a. Donner le contenu des piles B et q \u00e0 la fin de chaque it\u00e9ration de la boucle    while de la ligne 5.</li> </ol> <p>b. Donner le contenu des piles B et q avant l\u2019ex\u00e9cution de la ligne 14.</p> <p>c. Donner un exemple de pile qui montre que l'ordre des \u00e9l\u00e9ments restants n\u2019est pas pr\u00e9serv\u00e9 apr\u00e8s l\u2019ex\u00e9cution de depileMax.</p> <p>On donne le code de la m\u00e9thode traiter() :</p> <p>```python showLineNumbers def traiter(self):     q = Pile()     while not self.est_vide():         q.empiler(self.depileMax())     while not q.est_vide():         self.empiler(q.depiler()) <pre><code>5. a. Donner les contenus successifs des piles B et q\n\n- avant la ligne 3,\n- avant la ligne 5,\n- \u00e0 la fin de l\u2019ex\u00e9cution de la fonction traiter\n\nlorsque la fonction traiter est appliqu\u00e9e sur la pile B contenant [1, 6, 4, 3, 7, 2].\n\nb. Expliquer le traitement effectu\u00e9 par cette m\u00e9thode.\n\n## \u00ab algorithmique \u00bb, et principalement des algorithmes sur les arbres binaires.\n\n_Cet exercice traite du th\u00e8me \u00ab algorithmique \u00bb, et principalement des algorithmes sur les arbres binaires._\n\nOn manipule ici les arbres binaires avec trois fonctions :\n\n- est_vide(A) qui renvoie True si l'arbre binaire A est vide, False s'il ne l'est\n  pas ;\n- sous_arbre_gauche(A) qui renvoie le sous-arbre gauche de l'arbre binaire A ;\n- sous_arbre_droit(A) qui renvoie le sous-arbre droit de l'arbre binaire A.\n\nL'arbre\nbinaire\nrenvoy\u00e9\npar\nles\nfonctions\nsous_arbre_gauche\nsous_arbre_droit peut \u00e9ventuellement \u00eatre l'arbre vide.\n\net\n\nOn d\u00e9finit la hauteur d'un arbre binaire non vide de la fa\u00e7on suivante :\n\n- si ses sous-arbres gauche et droit sont vides, sa hauteur est 0 ;\n- si l'un des deux au moins est non vide, alors sa hauteur est \u00e9gale \u00e0 1 + M, o\u00f9 M\n  est la plus grande des hauteurs de ses sous-arbres (gauche et droit) non vides.\n\n1. a. Donner la hauteur de l'arbre ci-dessous.\n\nb. Dessiner sur la copie un arbre binaire de hauteur 4.\n\nLa hauteur d'un arbre est calcul\u00e9e par l'algorithme r\u00e9cursif suivant :\n\n1 Algorithme hauteur(A):\n2\ntest d'assertion : A est suppos\u00e9 non vide\n3\nsi sous_arbre_gauche(A) vide et sous_arbre_droit(A) vide:\n4\nrenvoyer 0\n5\nsinon, si sous_arbre_gauche(A) vide:\n6\nrenvoyer 1 + hauteur(sous_arbre_droit(A))\n7\nsinon, si ... :\n8\nrenvoyer ...\n9\nsinon:\n10\nrenvoyer 1 + max(hauteur(sous_arbre_gauche(A)),\n11\nhauteur(sous_arbre_droit(A)))\n\n2. Recopier sur la copie les lignes 7 et 8 en compl\u00e9tant les points de suspension.\n\n3. On consid\u00e8re un arbre binaire R dont on note G le sous-arbre gauche et D le\n   sous-arbre droit. On suppose que R est de hauteur 4 et G de hauteur 2.\n\na. Justifier le fait que D n'est pas l'arbre vide et d\u00e9terminer sa hauteur.\n\nb. Illustrer cette situation par un dessin.\n\nSoit un arbre binaire non vide de hauteur h. On note n le nombre de n\u0153uds de cet\nh+1\narbre. On admet que h+ 1 \u2a7d n \u2a7d 2 \u22121 . 4. a. V\u00e9rifier ces in\u00e9galit\u00e9s sur l'arbre binaire de la question 1.a.\n\nb. Expliquer comment construire un arbre binaire de hauteur h quelconque\nayant h+1 n\u0153uds.\n\nc. Expliquer comment construire un arbre binaire de hauteur h quelconque ayant\nh+1\n2 \u22121 n\u0153uds.\n\nIndication : 2h+1\u22121 = 1+2+4+...+2h .\n\nL'objectif de la fin de l\u2019exercice est d'\u00e9crire le code d'une fonction fabrique(h, n) qui\nprend comme param\u00e8tres deux nombres entiers positifs h et n tels que\nh+1\nh+ 1 &lt; n &lt; 2 \u22121 , et qui renvoie un arbre binaire de hauteur h \u00e0 n n\u0153uds.\n\nPour cela, on a besoin des deux fonctions suivantes:\n\n- arbre_vide(), qui renvoie un arbre vide ;\n- arbre(gauche, droit) qui renvoie l'arbre de fils gauche gauche et de fils\n  droit droit.\n\n5. Recopier sur la copie l'arbre binaire ci-dessous et num\u00e9roter ses n\u0153uds de 1 en\n   1 en commen\u00e7ant \u00e0 1, en effectuant un parcours en profondeur pr\u00e9fixe.\n\nLa fonction fabrique ci-dessous a pour but de r\u00e9pondre au probl\u00e8me pos\u00e9. Pour cela,\nla fonction annexe utilise la valeur de n, qu'elle peut modifier, et renvoie un arbre\nbinaire de hauteur hauteur_max dont le nombre de n\u0153uds est \u00e9gal \u00e0 la valeur de n au\nmoment de son appel.\n\n```python showLineNumbers\n1. def fabrique(h, n):\n2.\ndef annexe(hauteur_max):\n3.\nif n == 0 :\n4.\nreturn arbre_vide()\n5.\nelif hauteur_max == 0:\n6.\nn = n - 1\n7.\nreturn ...\n8.\nelse:\n9.\nn = n - 1\n10.\ngauche = annexe(hauteur_max - 1)\n11.\ndroite = ...\n12.\nreturn arbre(gauche, droite)\n13.\nreturn annexe(h)\n</code></pre></p> <ol> <li>Recopier sur la copie les lignes 7 et 11 en compl\u00e9tant les points de suspension.</li> </ol>","tags":["Sujets"]},{"location":"2_terminales_nsi/sujets-ecrits/2022-polynesie-1/#annexe-1-de-lexercice-2-a-rendre-avec-la-copie","title":"Annexe 1 de l\u2019exercice 2, \u00e0 rendre avec la copie.","text":"<p>Num\u00e9ro du p\u00e9riph\u00e9rique</p> <p>Adresse</p> <p>Op\u00e9ration</p> <p>R\u00e9ponse de l'ordonnanceur</p> <p>0</p> <p>10</p> <p>\u00e9criture</p> <p>OK</p> <p>1</p> <p>11</p> <p>lecture</p> <p>OK</p> <p>2</p> <p>10</p> <p>lecture</p> <p>ATT</p> <p>3</p> <p>10</p> <p>\u00e9criture</p> <p>ATT</p> <p>0</p> <p>12</p> <p>lecture</p> <p>1</p> <p>10</p> <p>lecture</p> <p>2</p> <p>10</p> <p>lecture</p> <p>3</p> <p>10</p> <p>\u00e9criture</p> <p>Annexe 2 de l'exercice 2, \u00e0 rendre avec la copie Tour Num\u00e9ro du p\u00e9riph\u00e9rique</p> <p>Adresse</p> <p>Op\u00e9ration</p> <p>R\u00e9ponse de l'ordonnanceur</p> <p>ATT_L</p> <p>ATT_E</p> <p>1</p> <p>0</p> <p>10</p> <p>\u00e9criture</p> <p>OK</p> <p>vide</p> <p>vide</p> <p>1</p> <p>1</p> <p>10</p> <p>lecture</p> <p>ATT</p> <p>(1,10)</p> <p>vide</p> <p>1</p> <p>2</p> <p>11</p> <p>\u00e9criture</p> <p>1</p> <p>3</p> <p>11</p> <p>lecture</p> <p>2</p> <p>1</p> <p>10</p> <p>lecture</p> <p>3</p> <p>0</p> <p>10</p> <p>\u00e9criture</p> <p>3</p> <p>1</p> <p>10</p> <p>lecture</p> <p>3</p> <p>2</p> <p>11</p> <p>\u00e9criture</p> <p>3</p> <p>3</p> <p>12</p> <p>lecture</p> <p>vide</p> <p>2 2 2</p> <p>22-NSIJ1PO1</p> <p>vide</p> <p>vide vide</p> <p>OK</p> <p>(1,10)</p> <p>vide</p> <p>16/16</p>","tags":["Sujets"]},{"location":"2_terminales_nsi/sujets_pratiques/","title":"\u00c9preuve Pratique BNS 2022","text":"<p>Warning</p> <p>Les sujets correspondent \u00e0 la derni\u00e8re version officielle, publi\u00e9e le 24/02/2022.</p>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet01/","title":"Sujet NSI 2022 - Sujet 1","text":""},{"location":"2_terminales_nsi/sujets_pratiques/sujet01/#exercice-1","title":"Exercice 1","text":"SujetCorrection <p>\u00c9crire une fonction <code>recherche</code> qui prend en param\u00e8tres <code>caractere</code>, un caract\u00e8re, et <code>mot</code>, une cha\u00eene de caract\u00e8res,    et qui renvoie le nombre d\u2019occurrences de <code>caractere</code> dans <code>mot</code>,    c\u2019est-\u00e0-dire le nombre de fois o\u00f9 <code>caractere</code> appara\u00eet dans <code>mot</code>.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; recherche('e', \"sciences\")\n2\n&gt;&gt;&gt; recherche('i',\"mississippi\")\n4\n&gt;&gt;&gt; recherche('a',\"mississippi\")\n0\n</code></pre> <pre><code>def recherche(caractere, mot):\noccurence = 0\nfor elem in mot:\nif elem == caractere:\noccurence += 1\nreturn occurence\nassert recherche('e', \"sciences\") == 2\nassert recherche('i', \"mississippi\") == 4\nassert recherche('a', \"mississippi\") == 0\n</code></pre>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet01/#exercice-2","title":"Exercice 2","text":"SujetCorrection <p>On s\u2019int\u00e9resse \u00e0 un algorithme r\u00e9cursif qui permet de rendre la monnaie    \u00e0 partir d\u2019une liste donn\u00e9e de valeurs de pi\u00e8ces et de billets - le syst\u00e8me mon\u00e9taire est    donn\u00e9 sous forme d\u2019une liste <code>pieces=[100, 50, 20, 10, 5, 2, 1]</code> - (on supposera qu\u2019il n\u2019y a pas de limitation quant    \u00e0 leur nombre), on cherche \u00e0 donner la liste de pi\u00e8ces \u00e0 rendre pour une somme donn\u00e9e en argument.</p> <p>Compl\u00e9ter le code Python ci-dessous de la fonction <code>rendu_glouton</code> qui impl\u00e9mente cet    algorithme et renvoie la liste des pi\u00e8ces \u00e0 rendre.</p> <pre><code>Pieces = [100,50,20,10,5,2,1]\ndef rendu_glouton(arendre, solution=[], i=0):\nif arendre == 0:\nreturn ...\np = pieces[i]\nif p &lt;= ... :\nsolution.append(...)\nreturn rendu_glouton(arendre - p, solution, i)\nelse :\nreturn rendu_glouton(arendre, solution, ...)\n</code></pre> <pre><code>Pieces = [100, 50, 20, 10, 5, 2, 1]\ndef rendu_glouton(arendre, solution=[], i=0):\nif arendre == 0:\nreturn solution\np = Pieces[i]\nif p &lt;= arendre:\nsolution.append(p)\nreturn rendu_glouton(arendre - p, solution, i)\nelse:\nreturn rendu_glouton(arendre, solution, i+1)\nassert rendu_glouton(68, [], 0) == [50, 10, 5, 2, 1]\nassert rendu_glouton(291, [], 0) == [100, 100, 50, 20, 20, 1]\n</code></pre>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet02/","title":"Sujet NSI 2022 - Sujet 2","text":""},{"location":"2_terminales_nsi/sujets_pratiques/sujet02/#exercice-1","title":"Exercice 1","text":"Sujet <p>Soit le couple (<code>note</code>,<code>coefficient</code>):</p> <ul> <li><code>note</code> est un nombre de type flottant (<code>float</code>) compris entre 0 et 20 ;</li> <li><code>coefficient</code> est un nombre entier positif.</li> </ul> <p>Les r\u00e9sultats aux \u00e9valuations d'un \u00e9l\u00e8ve sont regroup\u00e9s dans une liste compos\u00e9e de couples (<code>note</code>,<code>coefficient</code>).</p> <p>\u00c9crire une fonction moyenne qui renvoie la moyenne pond\u00e9r\u00e9e de cette liste donn\u00e9e en param\u00e8tre.</p> <p>Par exemple, l\u2019expression <code>moyenne([(15,2),(9,1),(12,3)])</code> devra renvoyer le r\u00e9sultat du calcul suivant :</p> <p>\\(\\dfrac{2 \\times 15 + 1 \\times 9 + 3 \\times 12 }{2+1+3}=12,5\\)</p> Correction <pre><code>def moyenne(tab):\nsomme_notes = 0\nsomme_coeffs = 0\nfor devoir in tab:\nnote = devoir[0]\ncoeff = devoir[1]\nsomme_notes += note * coeff\nsomme_coeffs += coeff\nreturn somme_notes / somme_coeffs\n</code></pre>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet02/#exercice-2","title":"Exercice 2","text":"Sujet <p>On cherche \u00e0 d\u00e9terminer les valeurs du triangle de Pascal. Dans ce tableau de forme triangulaire, chaque ligne commence et se termine par le nombre 1. Par ailleurs, la valeur qui occupe une case situ\u00e9e \u00e0 l\u2019int\u00e9rieur du tableau s\u2019obtient en ajoutant les valeurs des deux cases situ\u00e9es juste au-dessus, comme l\u2019indique la figure suivante :</p> <p></p> <p>Compl\u00e9ter la fonction <code>pascal</code> ci-apr\u00e8s. Elle doit renvoyer une liste correspondant au triangle de Pascal de la ligne <code>1</code> \u00e0 la ligne <code>n</code> o\u00f9 <code>n</code> est un nombre entier sup\u00e9rieur ou \u00e9gal \u00e0 <code>2</code> (le tableau sera contenu dans la variable <code>C</code>). La variable <code>Ck</code> doit, quant \u00e0 elle, contenir, \u00e0 l\u2019\u00e9tape num\u00e9ro <code>k</code>, la <code>k</code>-i\u00e8me ligne du tableau.</p> <pre><code>def pascal(n):\nC= [[1]]\nfor k in range(1,...):\nCk = [...]\nfor i in range(1,k):\nCk.append(C[...][i-1]+C[...][...] )\nCk.append(...)\nC.append(Ck)\nreturn C\n</code></pre> <p>Pour <code>n = 4</code>, voici ce qu'on devra obtenir :</p> <pre><code>&gt;&gt;&gt; pascal(4)\n[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\n</code></pre> <p>Pour <code>n = 5</code>, voici ce qu'on devra obtenir :</p> <pre><code>&gt;&gt;&gt; pascal(5)\n[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1]]\n</code></pre> Correction <pre><code>def pascal(n):\nC = [[1]]\nfor k in range(1,n+1):\nCk = [1]\nfor i in range(1,k):\nCk.append(C[k-1][i-1]+C[k-1][i] )\nCk.append(1)\nC.append(Ck)\nreturn C\n</code></pre>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet03/","title":"Sujet NSI 2022 - Sujet 3","text":""},{"location":"2_terminales_nsi/sujets_pratiques/sujet03/#exercice-1","title":"Exercice 1","text":"\u00c9nonc\u00e9 <p>Le codage par diff\u00e9rence (delta encoding en anglais) permet de compresser un tableau de donn\u00e9es en indiquant pour chaque donn\u00e9e, sa diff\u00e9rence avec la pr\u00e9c\u00e9dente (plut\u00f4t que la donn\u00e9e elle-m\u00eame). On se retrouve alors avec un tableau de donn\u00e9es assez petites n\u00e9cessitant moins de place en m\u00e9moire. Cette m\u00e9thode se r\u00e9v\u00e8le efficace lorsque les valeurs cons\u00e9cutives sont proches.</p> <p>Programmer la fonction <code>delta</code> qui prend en param\u00e8tre un tableau non vide de nombres entiers et qui renvoie un tableau contenant les valeurs enti\u00e8res compress\u00e9es \u00e0 l\u2019aide cette technique.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; delta([1000, 800, 802, 1000, 1003])\n[1000, -200, 2, 198, 3]\n&gt;&gt;&gt; delta([42])\n[42]\n</code></pre> Correction <pre><code>def delta(tab):\ndiff = [tab[0]]\nfor i in range(1, len(tab)):\ndiff.append(tab[i] - tab[i-1])\nreturn diff\n</code></pre>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet03/#exercice-2","title":"Exercice 2","text":"\u00c9nonc\u00e9 <p>Une expression arithm\u00e9tique ne comportant que les quatre op\u00e9rations +, \u2212,\u00d7,\u00f7 peut \u00eatre repr\u00e9sent\u00e9e sous forme d\u2019arbre binaire. Les n\u0153uds internes sont des op\u00e9rateurs et les feuilles sont des nombres. Dans un tel arbre, la disposition des n\u0153uds joue le r\u00f4le des parenth\u00e8ses que nous connaissons bien.</p> <p></p> <p>En parcourant en profondeur infixe l\u2019arbre binaire ci-dessus, on retrouve l\u2019expression not\u00e9e habituellement :</p> \\[3 \\times (8 + 7) \u2212 (2 + 1)\\] <p>La classe <code>Noeud</code> ci-apr\u00e8s permet d\u2019impl\u00e9menter une structure d\u2019arbre binaire. Compl\u00e9ter la fonction r\u00e9cursive <code>expression_infixe</code> qui prend en param\u00e8tre un objet de la classe <code>Noeud</code> et qui renvoie l\u2019expression arithm\u00e9tique repr\u00e9sent\u00e9e par l\u2019arbre binaire pass\u00e9 en param\u00e8tre, sous forme d\u2019une cha\u00eene de caract\u00e8res contenant des parenth\u00e8ses.</p> <p>R\u00e9sultat attendu avec l\u2019arbre ci-dessus :</p> <pre><code>&gt;&gt;&gt; e = Noeud(Noeud(Noeud(None, 3, None), '*', Noeud(Noeud(None, 8, None),\n'+', Noeud(None, 7, None))), '-', Noeud(Noeud(None, 2, None), '+',\nNoeud(None, 1, None)))\n&gt;&gt;&gt; expression_infixe(e)\n'((3*(8+7))-(2+1))'\n</code></pre> <pre><code>class Noeud:\n'''\n    Classe impl\u00e9mentant un noeud d'arbre binaire disposant de 3\n    attributs :\n    - valeur : la valeur de l'\u00e9tiquette,\n    - gauche : le sous-arbre gauche.\n    - droit : le sous-arbre droit.\n    '''\ndef __init__(self, g, v, d):\nself.gauche = g\nself.valeur = v\nself.droit = d\ndef est_une_feuille(self):\n'''Renvoie True si et seulement si le noeud est une feuille'''\nreturn self.gauche is None and self.droit is None\ndef expression_infixe(e):\ns = ...\nif e.gauche is not None:\ns = '(' + s + expression_infixe(...)\ns = s + ...\nif ... is not None:\ns = s + ... + ...\nreturn s # (1)\n</code></pre> <ol> <li>Attention, l'\u00e9nonc\u00e9 original fait pr\u00e9c\u00e9der ce <code>return</code> d'un <code>if ...</code> qui a \u00e9t\u00e9 supprim\u00e9 ici. Il faudrait \u00e9crire <code>if True:</code>, ce qui est inutile...</li> </ol> Correction <pre><code>class Noeud:\n'''\n    Classe impl\u00e9mentant un noeud d'arbre binaire disposant de 3\n    attributs :\n    - valeur : la valeur de l'\u00e9tiquette,\n    - gauche : le sous-arbre gauche.\n    - droit : le sous-arbre droit.\n    '''\ndef __init__(self, g, v, d):\nself.gauche = g\nself.valeur = v\nself.droit = d\ndef est_une_feuille(self):\n'''Renvoie True si et seulement si le noeud est une feuille'''\nreturn self.gauche is None and self.droit is None\ne = Noeud(Noeud(Noeud(None, 3, None), '*', Noeud(Noeud(None, 8, None),\n'+', Noeud(None, 7, None))), '-', Noeud(Noeud(None, 2, None), '+',\nNoeud(None, 1, None)))\ndef expression_infixe(e):\ns = ''\nif e.gauche is not None:\ns = '(' + s + expression_infixe(e.gauche)\ns = s + str(e.valeur)\nif e.droit is not None:\ns = s + expression_infixe(e.droit) + ')'\nreturn s\n</code></pre>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet04/","title":"Sujet NSI 2022 - Sujet 4","text":""},{"location":"2_terminales_nsi/sujets_pratiques/sujet04/#exercice-1","title":"Exercice 1","text":"\u00c9nonc\u00e9 <p>\u00c9crire une fonction <code>recherche</code> qui prend en param\u00e8tre un tableau de nombres entiers <code>tab</code>, et qui renvoie la liste (\u00e9ventuellement vide) des couples d'entiers cons\u00e9cutifs successifs qu'il peut y avoir dans <code>tab</code>.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; recherche([1, 4, 3, 5])\n[]\n&gt;&gt;&gt; recherche([1, 4, 5, 3])\n[(4, 5)]\n&gt;&gt;&gt; recherche([7, 1, 2, 5, 3, 4])\n[(1, 2), (3, 4)]\n&gt;&gt;&gt; recherche([5, 1, 2, 3, 8, -5, -4, 7])\n[(1, 2), (2, 3), (-5, -4)]\n</code></pre> Correction <pre><code>def recherche(tab):\nsolution = []\nfor i in range(len(tab)-1):\nif tab[i] + 1 == tab[i+1]:\nsolution.append((tab[i], tab[i+1]))\nreturn solution\n</code></pre>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet04/#exercice-2","title":"Exercice 2","text":"\u00c9nonc\u00e9 <p>Soit une image binaire repr\u00e9sent\u00e9e dans un tableau \u00e0 2 dimensions. Les \u00e9l\u00e9ments <code>M[i][j]</code>, appel\u00e9s pixels, sont \u00e9gaux soit \u00e0 <code>0</code> soit \u00e0 <code>1</code>.</p> <p>Une composante d\u2019une image est un sous-ensemble de l\u2019image constitu\u00e9 uniquement de <code>1</code> et de <code>0</code> qui sont c\u00f4te \u00e0 c\u00f4te, soit horizontalement soit verticalement.</p> <p>Par exemple, les composantes de</p> <p></p> <p>sont</p> <p></p> <p>On souhaite, \u00e0 partir d\u2019un pixel \u00e9gal \u00e0 <code>1</code> dans une image <code>M</code>, donner la valeur <code>val</code> \u00e0 tous les pixels de la composante \u00e0 laquelle appartient ce pixel.</p> <p>La fonction <code>propager</code> prend pour param\u00e8tre une image <code>M</code>, deux entiers <code>i</code> et <code>j</code> et une valeur enti\u00e8re <code>val</code>. Elle met \u00e0 la valeur <code>val</code> tous les pixels de la composante du pixel <code>M[i][j]</code> s\u2019il vaut <code>1</code> et ne fait rien s\u2019il vaut <code>0</code>.</p> <p>Par exemple, <code>propager(M,2,1,3)</code> donne </p> <p>Compl\u00e9ter le code r\u00e9cursif de la fonction <code>propager</code> donn\u00e9 ci-dessous :</p> <pre><code>def propager(M, i, j, val):\nif M[i][j]== ...:\nreturn None # (1)\nM[i][j] = val\n# l'\u00e9l\u00e9ment en haut fait partie de la composante\nif ((i-1) &gt;= 0 and M[i-1][j] == ...):\npropager(M, i-1, j, val)\n# l'\u00e9l\u00e9ment en bas fait partie de la composante\nif ((...) &lt; len(M) and M[i+1][j] == 1):\npropager(M, ..., j, val)\n# l'\u00e9l\u00e9ment \u00e0 gauche fait partie de la composante\nif ((...) &gt;= 0 and M[i][j-1] == 1):\npropager(M, i, ..., val)\n# l'\u00e9l\u00e9ment \u00e0 droite fait partie de la composante\nif ((...) &lt; len(M) and M[i][j+1] == 1): # (2)\npropager(M, i, ..., val)\n</code></pre> <ol> <li>Dans l'\u00e9nonc\u00e9 original, il n'y a rien apr\u00e8s le <code>return</code>.</li> <li>Il faudrait \u00e9crire <code>len(M[0])</code> plut\u00f4t que <code>len(M)</code>. (\u00e9quivalent ici car l'image est carr\u00e9e...)</li> </ol> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; M = [[0,0,1,0],[0,1,0,1],[1,1,1,0],[0,1,1,0]]\n&gt;&gt;&gt; propager(M,2,1,3)\n&gt;&gt;&gt; M\n[[0, 0, 1, 0], [0, 3, 0, 1], [3, 3, 3, 0], [0, 3, 3, 0]]\n</code></pre> Correction <pre><code>def propager(M, i, j, val):\nif M[i][j]== 0 :\nreturn None\nM[i][j] = val\n# l'\u00e9l\u00e9ment en haut fait partie de la composante\nif ((i-1) &gt;= 0 and M[i-1][j] == 1):\npropager(M, i-1, j, val)\n# l'\u00e9l\u00e9ment en bas fait partie de la composante\nif ((i+1) &lt; len(M) and M[i+1][j] == 1):\npropager(M, i+1, j, val)\n# l'\u00e9l\u00e9ment \u00e0 gauche fait partie de la composante\nif ((j-1) &gt;= 0 and M[i][j-1] == 1):\npropager(M, i, j-1, val)\n# l'\u00e9l\u00e9ment \u00e0 droite fait partie de la composante\nif ((j+1) &lt; len(M) and M[i][j+1] == 1):\npropager(M, i, j+1, val)\n</code></pre>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet11/","title":"Sujet NSI 2022 - Sujet 11","text":""},{"location":"2_terminales_nsi/sujets_pratiques/sujet11/#exercice-1","title":"Exercice 1","text":"SujetCorrection <p>\u00c9crire une fonction <code>recherche</code> qui prend en param\u00e8tres un tableau <code>tab</code> de nombres entiers tri\u00e9s par ordre croissant et un nombre entier <code>n</code>, et qui effectue une recherche dichotomique du nombre entier <code>n</code> dans le tableau non vide <code>tab</code>.</p> <p>Cette fonction doit renvoyer un indice correspondant au nombre cherch\u00e9 s\u2019il est dans le tableau, \\(-1\\) sinon.</p> <p>Exemples:</p> <pre><code>&gt;&gt;&gt; recherche([2, 3, 4, 5, 6], 5)\n3\n&gt;&gt;&gt; recherche([2, 3, 4, 6, 7], 5)\n-1\n</code></pre> <pre><code>def recherche(tab, n):\ndebut = 0\nfin = len(tab) - 1\nwhile debut &lt; fin:\nmilieu = (debut + fin) // 2\nvaleur_centrale = tab[milieu]\nif valeur_centrale == n:\nreturn milieu\nelif valeur_centrale &gt;n:\nfin = milieu - 1\nelse:\ndebut = milieu + 1\nreturn -1\nassert recherche([2, 3, 4, 5, 6], 5) == 3\nassert recherche([2, 3, 4, 6, 7], 5) == -1\n</code></pre>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet11/#exercice-2","title":"Exercice 2","text":"SujetCorrection <p>Le codage de C\u00e9sar transforme un message en changeant chaque lettre en la d\u00e9calant dans l\u2019alphabet.</p> <p>Par exemple, avec un d\u00e9calage de 3, le A se transforme en D, le B en E, ..., le X en A, le Y en B et le Z en C. Les autres caract\u00e8res (\u2018!\u2019,\u2019 ?\u2019\u2026) ne sont pas cod\u00e9s.</p> <p>La fonction <code>position_alphabet</code> ci-dessous prend en param\u00e8tre un caract\u00e8re <code>lettre</code> et renvoie la position de <code>lettre</code> dans la cha\u00eene de caract\u00e8res <code>ALPHABET</code> s\u2019il s\u2019y trouve et <code>-1</code> sinon.</p> <p>La fonction <code>cesar</code> prend en param\u00e8tre une cha\u00eene de caract\u00e8res <code>message</code> et un nombre entier <code>decalage</code> et renvoie le nouveau message cod\u00e9 avec le codage de C\u00e9sar utilisant le d\u00e9calage <code>decalage</code>.</p> <pre><code>ALPHABET='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\ndef position_alphabet(lettre):\nreturn ALPHABET.find(lettre)\ndef cesar(message, decalage):\nresultat = ''\nfor ... in message :\nif lettre in ALPHABET :\nindice = ( ... )%26\nresultat = resultat + ALPHABET[indice]\nelse:\nresultat = ...\nreturn resultat\n</code></pre> <p>Compl\u00e9ter la fonction <code>cesar</code>.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; cesar('BONJOUR A TOUS. VIVE LA MATIERE NSI !',4)\n'FSRNSYV E XSYW. ZMZI PE QEXMIVI RWM !'\n&gt;&gt;&gt; cesar('GTSOTZW F YTZX. ANAJ QF RFYNJWJ SXN !',-5)\n'BONJOUR A TOUS. VIVE LA MATIERE NSI !'\n</code></pre> <pre><code>ALPHABET='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\ndef position_alphabet(lettre):\nreturn ALPHABET.find(lettre)\ndef cesar(message, decalage):\nresultat = ''\nfor lettre in message :\nif lettre in ALPHABET :\nindice = ( position_alphabet(lettre) + decalage)%26\nresultat = resultat + ALPHABET[indice]\nelse:\nresultat = resultat + lettre\nreturn resultat\nassert cesar('BONJOUR A TOUS. VIVE LA MATIERE NSI !',4) == 'FSRNSYV E XSYW. ZMZI PE QEXMIVI RWM !'\nassert cesar('GTSOTZW F YTZX. ANAJ QF RFYNJWJ SXN !',-5) == 'BONJOUR A TOUS. VIVE LA MATIERE NSI !'\n</code></pre>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet23/","title":"Sujet NSI 2022 - 23","text":""},{"location":"2_terminales_nsi/sujets_pratiques/sujet23/#exercice-1","title":"Exercice 1","text":"Sujet <p>Sur le r\u00e9seau social TipTop, on s\u2019int\u00e9resse au nombre de \u00ab like \u00bb des abonn\u00e9s. Les donn\u00e9es sont stock\u00e9es dans des dictionnaires o\u00f9 les cl\u00e9s sont les pseudos et les valeurs correspondantes sont les nombres de \u00ab like \u00bb comme ci-dessous :</p> <pre><code>{'Bob': 102, 'Ada': 201, 'Alice': 103, 'Tim': 50}\n</code></pre> <p>\u00c9crire une fonction <code>max_dico</code> qui :</p> <ul> <li>Prend en param\u00e8tre un dictionnaire <code>dico</code> non vide dont les cl\u00e9s sont des cha\u00eenes de caract\u00e8res et les valeurs associ\u00e9es sont des entiers ;</li> <li>Renvoie un tuple dont :</li> <li>La premi\u00e8re valeur est la cl\u00e9 du dictionnaire associ\u00e9e \u00e0 la valeur maximale</li> <li>La seconde valeur est la premi\u00e8re valeur maximale pr\u00e9sente dans le dictionnaire.</li> </ul> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; max_dico({'Bob': 102, 'Ada': 201, 'Alice': 103, 'Tim': 50}) ('Ada', 201)\n&gt;&gt;&gt; max_dico({'Alan': 222, 'Ada': 201, 'Eve': 220, 'Tim': 50})\n('Alan', 222)\n</code></pre>"},{"location":"2_terminales_nsi/sujets_pratiques/sujet23/#exercice-2","title":"Exercice 2","text":"Sujet <p>Nous avons l\u2019habitude de noter les expressions arithm\u00e9tiques avec des parenth\u00e8ses comme par exemple : (2+3)\u00d75.</p> <p>Il existe une autre notation utilis\u00e9e par certaines calculatrices, appel\u00e9e notation postfixe, qui n\u2019utilise pas de parenth\u00e8ses. L\u2019expression arithm\u00e9tique pr\u00e9c\u00e9dente est alors obtenue en saisissant successivement 2, puis 3, puis l\u2019op\u00e9rateur +, puis 5, et enfin l\u2019op\u00e9rateur \u00d7. On mod\u00e9lise cette saisie par le tableau [2, 3, '+', 5, '*'].</p> <p>Autre exemple, la notation postfixe de 3\u00d72+5 est mod\u00e9lis\u00e9e par le tableau :</p> <p>[3, 2, '*', 5, '+'].</p> <p>D\u2019une mani\u00e8re plus g\u00e9n\u00e9rale, la valeur associ\u00e9e \u00e0 une expression arithm\u00e9tique en notation postfixe est d\u00e9termin\u00e9e \u00e0 l\u2019aide d\u2019une pile en parcourant l\u2019expression arithm\u00e9tique de gauche \u00e0 droite de la fa\u00e7on suivante :</p> <ul> <li>Si l\u2019\u00e9l\u00e9ment parcouru est un nombre, on le place au sommet de la pile ;</li> <li>Si l\u2019\u00e9l\u00e9ment parcouru est un op\u00e9rateur, on r\u00e9cup\u00e8re les deux \u00e9l\u00e9ments situ\u00e9s au sommet de la pile et on leur applique l\u2019op\u00e9rateur. On place alors le r\u00e9sultat au sommet de la pile.</li> <li>A la fin du parcours, il reste alors un seul \u00e9l\u00e9ment dans la pile qui est le r\u00e9sultat de l\u2019expression arithm\u00e9tique.</li> </ul> <p>Dans le cadre de cet exercice, on se limitera aux op\u00e9rations \u00d7 et +.</p> <p>Pour cet exercice, on dispose d\u2019une classe <code>Pile</code> qui impl\u00e9mente les m\u00e9thodes de base sur la structure de pile.</p> <p>Compl\u00e9ter le script de la fonction <code>eval_expression</code> qui re\u00e7oit en param\u00e8tre une liste python repr\u00e9sentant la notation postfixe d\u2019une expression arithm\u00e9tique et qui renvoie sa valeur associ\u00e9e. Exemple :</p> <pre><code>&gt;&gt;&gt; eval_expression([2, 3, '+', 5, '*'])\n25\n</code></pre> <pre><code>class Pile:\n\"\"\"Classe d\u00e9finissant une structure de pile.\"\"\"\ndef __init__(self):\nself.contenu = []\ndef est_vide(self):\n\"\"\"\n        Renvoie le bool\u00e9en True si la pile est vide, False sinon.\n        \"\"\"\nreturn self.contenu == []\ndef empiler(self, v):\n\"\"\"Place l\u2019\u00e9l\u00e9ment v au sommet de la pile.\"\"\"\nself.contenu.append(v)\ndef depiler(self):\n\"\"\"\n        Retire et renvoie l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile,\n        si la pile n\u2019est pas vide.\n        \"\"\"\nif not self.est_vide():\nreturn self.contenu.pop()\ndef eval_expression(tab):\np = Pile()\nfor ... in tab:\nif element != '+' ... element != '*':\np.empiler(...)\nelse:\nif element == ...:\nresultat = p.depiler() + ...\nelse:\nresultat = ...\np.empiler(...)\nreturn ...\n</code></pre>"},{"location":"maths/03_limites_tvi/","title":"Limites de fonctions et continuit\u00e9","text":""},{"location":"maths/03_limites_tvi/#limite-dune-fonction-en-linfini","title":"Limite d'une fonction en l'infini","text":"<p>Dans toute cette partie, \\(\\mathcal{C}_f\\) d\u00e9signe la courbe repr\u00e9sentative de la fonction \\(f\\) dans un rep\u00e8re quelconque du plan.</p>"},{"location":"maths/03_limites_tvi/#limite-infinie-en-linfini","title":"Limite infinie en l'infini","text":"<p>D\u00e9finition </p> <p>La fonction \\(f\\) a pour limite \\(+\\infty\\) en \\(+\\infty\\) si tout intervalle de \\(\\mathbb{R}\\) du type \\(]a~;~+\\infty[\\) contient toutes les valeurs de \\(f(x)\\) pour \\(x\\) assez grand. On note alors : \\(\\displaystyle\\lim_{x\\to+\\infty}f(x)=+\\infty\\).</p> <p>Exemple </p> <p>Soit \\(f\\) la fonction racine carr\u00e9e. En effet, \\(\\sqrt{x}\\) devient aussi grand que l'on veut \u00e0 mesure que \\(x\\) augmente.</p> <p>On a \\(\\displaystyle\\lim_{x\\to+\\infty}\\sqrt{x}=+\\infty\\).</p> <p>Soit un intervalle ouvert \\(I=]a~;~+\\infty[\\). Alors, \\(f(x)\\) sera toujours dans \\(I\\) pour \\(x\\) assez grand.</p> <p>Graphiquement, si on consid\u00e8re le demi-plan sup\u00e9rieur de fronti\u00e8re une droite d'\u00e9quation \\(y=a\\), il existe toujours une valeur de \\(a\\) au del\u00e0 de laquelle \\(\\mathcal{C}_f\\) ne sort plus de ce demi-plan.</p> <p></p> <p>Remarque </p> <ul> <li> <p>On d\u00e9finit de fa\u00e7on analogue : \\(\\displaystyle\\lim_{x\\to +\\infty}f(x)=-\\infty\\),     \\(\\displaystyle\\lim_{x\\to -\\infty}f(x)=+\\infty\\) et     \\(\\lim_{x\\to -\\infty}f(x)=-\\infty\\).</p> </li> <li> <p>Il existe des fonctions qui n'admettent pas de limite en l'infini.     Par exemple, les fonctions sinus et cosinus n'admettent de limite ni     en \\(+\\infty\\), ni en \\(-\\infty\\).</p> </li> <li> <p>Une fonction qui tend vers \\(+\\infty\\) lorsque \\(x\\) tend vers \\(+\\infty\\)     n'est pas forc\u00e9ment croissante(voir observations figure 5)</p> </li> </ul>"},{"location":"maths/03_limites_tvi/#limite-finie-en-linfini","title":"Limite finie en l'infini","text":"<p>D\u00e9finition </p> <p>Soit \\(f\\) une fonction d\u00e9finie au moins sur un intervalle de \\(\\mathbb{R}\\) du type \\(]a~;~+\\infty[\\).</p> <p>La fonction \\(f\\) a pour limite \\(\\ell\\) en \\(+\\infty\\) si tout intervalle ouvert contenant \\(\\ell\\) contient toutes les valeurs de \\(f(x)\\) pour \\(x\\) assez grand. On note alors : \\(\\displaystyle\\lim_{x\\to+\\infty}f(x)=\\ell\\).</p> <p>Exemple </p> <p>Soit \\(f\\) la fonction d\u00e9finie sur \\(]0~;~+\\infty[\\) par \\(f(x)=\\dfrac{1}{x}+1\\).</p> <p>L'inverse de \\(x\\) se rapproche de \\(0\\) \u00e0 mesure que \\(x\\) augmente. On a donc \\(\\displaystyle\\lim_{x\\to+\\infty}\\left(\\dfrac{1}{x}+1\\right)=1\\).</p> <p>Soit un intervalle ouvert \\(I\\) tel que \\(1\\in I\\). Alors, \\(f(x)\\) sera toujours dans \\(I\\) pour \\(x\\) assez grand. Graphiquement, aussi \u00e9troite que soit une bande parall\u00e8le \u00e0 la droite d'\u00e9quation \\(y=1\\) et qui la contient, il existe toujours une valeur de \\(x\\) au del\u00e0 de laquelle \\(\\mathcal{C}_f\\) ne sort plus de cette bande.</p> <p></p> <p>D\u00e9finition Asymptote horizontale</p> <p>La droite d'\u00e9quation \\(y=\\ell\\) est asymptote horizontale \u00e0 \\(\\boldsymbol{\\mathcal{C}_f}\\) en \\(\\boldsymbol{+\\infty}\\) si \\(\\displaystyle\\lim_{x\\to+\\infty} f(x)=\\ell\\).</p> <p>Remarque </p> <p>On d\u00e9finit de fa\u00e7on analogue \\(\\displaystyle\\lim_{x\\to-\\infty} f(x)=\\ell\\) qui caract\u00e9rise une asymptote horizontale \u00e0 \\(\\mathcal{C}_f\\) en \\(-\\infty\\) d'\u00e9quation \\(y=\\ell\\).</p> <p>Exemple </p> <p>On a vu pr\u00e9c\u00e9demment que \\(\\displaystyle\\lim_{x\\to+\\infty}\\left(\\dfrac{1}{x}+1\\right)=1\\). On a aussi \\(\\displaystyle\\lim_{x\\to-\\infty}\\left(\\dfrac{1}{x}+1\\right)=1\\).\\ Donc, la droite d'\u00e9quation \\(y=1\\) est asymptote horizontale \u00e0 la courbe \\(\\mathcal{C}_f\\) en \\(+\\infty\\) et en \\(-\\infty\\) .</p>"},{"location":"maths/03_limites_tvi/#limites-des-fonctions-de-reference-en-infty","title":"Limites des fonctions de r\u00e9f\u00e9rence en \\(\\infty\\)","text":"<p>Propri\u00e9t\u00e9 Limites finies des fonctions usuelles en \\(\\pm\\infty\\)</p> <p>Soit \\(n\\) un entier naturel non nul.</p> <ul> <li> <p>\\(\\displaystyle\\lim_{x\\to+\\infty}\\sqrt{x}=\\displaystyle\\lim_{x\\to+\\infty}x^n=+\\infty\\)</p> </li> <li> <p>\\(\\displaystyle\\lim_{x\\to-\\infty}x^n=\\left\\{     \\begin{array}{ll}     +\\infty &amp;  \\text{pour~} n \\text{~pair} \\\\     -\\infty &amp;  \\text{pour~} n \\text{~impair}     \\end{array}     \\right.\\)</p> </li> <li> <p>\\(\\displaystyle\\lim_{x\\to+\\infty}\\frac{1}{\\sqrt{x}}=\\displaystyle\\lim_{x\\to+\\infty}\\frac{1}{x^n}=0\\)</p> </li> <li> <p>\\(\\displaystyle\\lim_{x\\to-\\infty}\\frac{1}{x^n}=0\\)</p> </li> <li> <p>\\(\\displaystyle\\lim_{x\\to-\\infty} e^x=0\\)</p> </li> <li> <p>\\(\\displaystyle\\lim_{x\\to+\\infty} e^x=+\\infty\\)</p> </li> </ul>"},{"location":"maths/03_limites_tvi/#limite-infinie-en-un-reel","title":"Limite infinie en un r\u00e9el","text":"<p>D\u00e9finition </p> <p>Soit \\(f\\) une fonction d\u00e9finie sur un intervalle ouvert de \\(\\mathbb{R}\\) du type \\(]x_0-\\varepsilon~;~x_0[\\) ou \\(]x_0~;~x_0+\\varepsilon[\\).</p> <p>La fonction \\(f\\) a pour limite \\(+\\infty\\) en \\(x_0\\) si tout intervalle de \\(\\mathbb{R}\\) du type \\(]A~;~+\\infty[\\) contient toutes les valeurs de \\(f(x)\\) pour \\(x\\) assez proche de \\(x_0\\). On note alors : \\(\\displaystyle\\lim_{x\\to x_0}f(x)=+\\infty\\).</p> <p>Exemple </p> <p>Soit \\(f\\) la fonction d\u00e9finie sur \\(]1~;~+\\infty[\\) par \\(f(x)=\\dfrac{1}{x-1}\\).</p> <p>Si \\(x\\) tend \\(1\\), alors \\(x-1\\) tend vers \\(0\\) et son inverse tend vers \\(+\\infty\\).On a \\(\\displaystyle\\lim_{x\\to 1}\\dfrac{1}{x-1}=+\\infty\\).</p> <p>Soit un intervalle ouvert \\(I=]1~;~1+\\varepsilon[\\). Alors, \\(f(x)\\) sera toujours dans \\(I\\) pour \\(x\\) assez proche de \\(x_0\\). Graphiquement, \\(\\mathcal{C}_f\\) peut \u00eatre aussi proche que l'on veut de la droite d'\u00e9quation \\(x=1\\).</p> <p></p> <p>D\u00e9finition Asymptote verticale</p> <p>La droite d'\u00e9quation \\(x=x_0\\) est asymptote verticale \u00e0 \\(\\boldsymbol{\\mathcal{C}_f}\\) si \\(\\displaystyle\\lim_{x\\to x_0} f(x)=\\pm\\infty\\).</p> <p>Exemple </p> <p>On a vu pr\u00e9c\u00e9demment que \\(\\displaystyle\\lim_{x\\to 1}\\dfrac{1}{x-1}=+\\infty\\).\\ Donc, la droite d'\u00e9quation \\(x=1\\) est asymptote verticale \u00e0 l'hyperbole \\(\\mathcal{C}_f\\).</p> <p>Remarque </p> <ul> <li> <p>Lorsque \\(x\\) tend vers \\(x_0\\), cela peut parfois se faire en     augmentant ou en diminuant. On parle alors de limite de \\(f\\) \u00e0 gauche     (resp. droite) en \\(x_0\\) qu'on note     \\(\\displaystyle\\lim_{\\substack{x\\to x_0\\\\ x&lt;x_0}}f(x)\\) (resp.     \\(\\displaystyle\\lim_{\\substack{x\\to x_0\\\\ x&gt;x_0}}f(x)\\)).</p> </li> <li> <p>Une fonction admet une limite en \\(x_0\\) si, et seulement si, \\(f\\)     admet des limites \u00e0 droite et \u00e0 gauche en \\(x_0\\) qui sont \u00e9gales (ce     qui n'est pas toujours le cas).</p> </li> <li> <p>Une fonction peut tr\u00e8s bien ne pas avoir de limite du tout en un     point.</p> <p>Par exemple, la fonction \\(x \\mapsto \\sin \\dfrac{1}{x}\\) n'a pas de limite en 0.</p> </li> </ul> <p>Propri\u00e9t\u00e9 Limites finies des fonctions usuelles en 0</p> <p>Soit \\(n\\) un entier naturel non nul.</p> <ul> <li> <p>\\(\\displaystyle\\lim_{\\substack{x\\to 0\\\\ x&gt;0}}\\frac{1}{\\sqrt{x}}=\\displaystyle\\lim_{\\substack{x\\to 0\\\\ x&gt;0}}\\frac{1}{x^n}=+\\infty\\)</p> </li> <li> <p>\\(\\displaystyle\\lim_{\\substack{x\\to 0\\\\ x&lt;0}}\\dfrac{1}{x^n}=\\left\\{     \\begin{array}{ll}     +\\infty &amp;  \\text{pour~} n \\text{~pair} \\\\     -\\infty &amp;  \\text{pour~} n \\text{~impair}     \\end{array}     \\right.\\)</p> </li> </ul> <p>Remarque </p> <p>L'aper\u00e7u de la courbe repr\u00e9sentative d'une fonction avec une calculatrice ou un logiciel peut aider \u00e0 conjecturer une limite (et donc \u00e9ventuellement une asymptote \u00e0 la courbe).</p> <p>Soit \\(f\\) une fonction dont on a un aper\u00e7u du graphe \\(\\mathcal{C}\\).</p> <p>D\u00e9terminer son ensemble de d\u00e9finition \\(\\mathcal{D}\\), puis conjecturer les limites aux bornes de \\(\\mathcal{D}\\) et les asymptotes \u00e0 \\(\\mathcal{C}\\).</p> <ol> <li> <p>\\(f:x\\mapsto \\dfrac{x^3-1}{x^3+1}\\)</p> </li> <li> <p>\\(f:x\\mapsto 2x-\\sqrt{4x^2-1}\\)</p> </li> </ol> <p>Correction</p> <p>1. \\(\\mathcal{D}=\\mathbb{R}\\setminus\\{-1\\}\\). A priori, on aurait : \\(\\displaystyle\\lim_{x\\to\\pm+\\infty}f(x)=1\\) ; \\(\\displaystyle\\lim_{\\substack{x\\to -1\\\\ x&lt;-1}}f(x)=+\\infty\\) et \\(\\displaystyle\\lim_{\\substack{x\\to -1\\\\ x&gt;-1}}f(x)=-\\infty\\).</p> <p>\\(\\mathcal{C}\\) aurait alors une asymptote horizontale d'\u00e9quation \\(y=1\\) en \\(\\pm\\infty\\) et une asymptote verticale d'\u00e9quation \\(x=-1\\).</p> <p>2. \\(\\mathcal{D}=]-\\infty~;~-\\tfrac{1}{2}[\\,\\cup\\,]\\tfrac{1}{2}~;~+\\infty[\\). On a : \\(\\displaystyle\\lim_{x\\to -1/2}f(x)=-1\\) et \\(\\displaystyle\\lim_{x\\to 1/2}f(x)=1\\) et, il semblerait que \\(\\displaystyle\\lim_{x\\to-\\infty}f(x)=-\\infty\\) et \\(\\displaystyle\\lim_{x\\to +\\infty}f(x)=0\\).</p> <p>\\(\\mathcal{C}\\) aurait alors une asymptote horizontale d'\u00e9quation \\(y=0\\) (l'axe des abscisses) en \\(+\\infty\\).</p>"},{"location":"maths/03_limites_tvi/#operations-sur-les-limites","title":"Op\u00e9rations sur les limites","text":"<p>Limite d'une somme</p> \\(f\\) \\(g\\) \\(f+g\\) \\(\\ell\\) \\(\\ell'\\) \\(\\ell+\\ell'\\) \\(\\ell\\) \\(\\infty\\) \\(\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(-\\infty\\) \\(-\\infty\\) \\(-\\infty\\) \\(-\\infty\\) \\(+\\infty\\) \\(-\\infty\\) \\(???\\) <p>Limite d'un produit</p> <p>\\(\\ell\\) * \\(\\ell'\\)  :  \\(\\ell\\ell'\\)</p> <p>\\(\\ell\\!\\neq\\!0\\)   *    \\(\\infty\\)   : \\(\\infty\\)</p> <p>\\(\\infty\\)   *        \\(\\infty\\) :   \\(\\infty\\)</p> <p>\\(0\\)* \\(\\infty\\) : \\(???\\)</p> <p>Limite d'un quotient</p> <p>\\(\\ell\\)      /        \\(\\ell'\\!\\neq\\!0\\) :  \\(\\ell/\\ell'\\)</p> <p>\\(\\ell\\!\\neq\\!0\\)     /           \\(0\\)    :        \\(\\infty\\)</p> <p>\\(\\ell\\)        /          \\(\\infty\\)     :      \\(0\\)</p> <p>\\(0\\)      /      \\(0\\)      /       \\(???\\)</p> <p>\\(\\infty\\) / \\(\\infty\\) : \\(???\\)</p> <p>Remarque </p> <ul> <li> <p>\\(\\infty\\) peut signifier \\(+\\infty\\) ou \\(-\\infty\\). Les r\u00e8gles du signe d'un produit ou d'un quotient demeurent.</p> </li> <li> <p>Pour la limite de la diff\u00e9rence \\(f-g\\), on consid\u00e8re la limite de la somme \\(f+(-g)\\).</p> </li> </ul> <p>quatre cas d'ind\u00e9termination</p> <ul> <li> <p>\" \\(\\boldsymbol{(+\\infty)+(-\\infty)}\\) \"</p> </li> <li> <p>\" \\(\\boldsymbol{0\\times\\infty}\\) \"</p> </li> <li> <p>\" \\(\\boldsymbol{\\dfrac{0}{0}}\\) \"</p> </li> <li> <p>\" \\(\\boldsymbol{\\dfrac{\\infty}{\\infty}}\\) \"</p> </li> </ul> <p>Exemple </p> <p>Soit \\(f:x\\mapsto  \\frac{x-1}{x^2-4}\\). Calculons les limites de \\(f(x)\\) aux bornes de son domaine de d\u00e9finition.</p>"},{"location":"maths/03_limites_tvi/#limite-dune-fonction-composee","title":"Limite d'une fonction compos\u00e9e","text":""},{"location":"maths/03_limites_tvi/#fonction-composee","title":"Fonction compos\u00e9e","text":"<p>Une compos\u00e9e de deux fonctions correspond \u00e0 un encha\u00eenement de deux fonctions l'une apr\u00e8s l'autre.</p> <p>Par exemple, composons la fonction \\(f:x\\mapsto1-x\\) suivie de \\(g:x\\mapsto\\sqrt{x}\\). On peut ainsi sch\u00e9matiser :</p> <p>\\(x\\) \\(\\,\\mapsto\\,\\) \\(1-x\\) \\(\\,\\mapsto\\,\\) \\(\\sqrt{1-x}\\). \\(f\\) \\(g\\)</p> <p>Cependant, on voit que la fonction \\(g\\) ne peut s'appliquer que si l'ensemble des images par la fonction \\(f\\) est inclus dans l'ensemble de d\u00e9finition de \\(g\\).</p> <p>Ainsi, pour appliquer ici la racine carr\u00e9e, il faut que \\(1-x\\geqslant0\\) c'est-\u00e0-dire que \\(x\\leqslant1\\).</p> <p>La compos\u00e9e existe donc dans le sch\u00e9ma suivant o\u00f9 on pr\u00e9cise les ensembles de d\u00e9part et d'arriv\u00e9e pour \\(f\\) :</p> <p>\\(]-\\infty~;~2]\\) \\(\\rightarrow\\) \\([0~;~+\\infty[\\) \\(\\rightarrow\\) \\(\\mathbb{R}\\) \\(x\\) \\(\\,\\mapsto\\,\\) \\(1-x\\) \\(\\,\\mapsto\\,\\) \\(\\sqrt{1-x}\\) \\(f\\) \\(g\\)</p> <p>En composant \\(f\\) suivie de \\(g\\), on a ainsi d\u00e9fini sur \\(]-\\infty~;~1]\\) la fonction \\(x\\mapsto\\sqrt{1-x}\\).</p> <p>D\u00e9finition </p> <p>Soit \\(f\\) une fonction d\u00e9finie sur \\(E\\) et \u00e0 valeurs dans \\(F\\), et soit \\(g\\) une fonction d\u00e9finie sur \\(F\\).</p> <p>La compos\u00e9e de \\(\\boldsymbol{f}\\) suivie de \\(\\boldsymbol{g}\\) est la fonction not\u00e9e \\(\\boldsymbol{g\\circ f}\\) d\u00e9finie sur \\(E\\) par \\(g\\circ f(x)=g(f(x))\\).</p> <p>Remarque </p> <p>Il ne faut pas confondre \\(g\\circ f\\) et \\(f\\circ g\\) qui sont, en g\u00e9n\u00e9ral, diff\u00e9rentes.</p> <p>Exemple </p> <p>En reprenant \\(f\\) et \\(g\\) de l'exemple pr\u00e9c\u00e9dent, d\u00e9finissons \\(f\\circ g\\).</p> <p>La compos\u00e9e de \\(g\\) suivie de \\(f\\) est possible en partant de l'ensemble de d\u00e9finition de \\(g\\) :</p> <p>\\([0~;~+\\infty[\\) \\(\\rightarrow\\) \\([0~;~+\\infty[\\) \\(\\rightarrow\\) \\(\\mathbb{R}\\)</p> <p>\\(x\\) \\(\\,\\mapsto\\,\\) \\(\\sqrt{x}\\) \\(\\,\\mapsto\\,\\) \\(1-\\sqrt{x}\\)</p> <p>En composant \\(g\\) suivie de \\(f\\), on a ainsi d\u00e9fini sur \\([0~;~+\\infty[\\) la fonction \\(x\\mapsto1-\\sqrt{x}\\).</p>"},{"location":"maths/03_limites_tvi/#theoreme-de-composition-des-limites","title":"Th\u00e9or\u00e8me de composition des limites","text":"<p>Th\u00e9or\u00e8me </p> <p>Soit \\(h\\) la compos\u00e9e de la fonction \\(f\\) suivie de \\(g\\) et \\(\\alpha\\), \\(\\beta\\) et \\(\\gamma\\) trois r\u00e9els ou \\(\\pm\\ \\infty\\).</p> <p>Si \\(\\displaystyle\\lim_{x\\to\\alpha} f(x)=\\beta\\) et \\(\\displaystyle\\lim_{x\\to\\beta} g(x)=\\gamma\\), alors \\(\\displaystyle\\lim_{x\\to\\alpha} h(x)=\\gamma\\).</p> <p>Exemple </p> <p>D\u00e9terminons la limite en \\(-\\infty\\) de la fonction \\(g\\circ f\\) de l'exemple pr\u00e9c\u00e9dent.</p> <p>La compos\u00e9e de \\(f:x\\mapsto 1-x\\) suivie de \\(g:x\\mapsto\\sqrt{x}\\) est \\(h:x\\mapsto \\sqrt{1-x}\\) d\u00e9finie sur \\(]-\\infty~;~1]\\).</p> <p>Or, \\(\\displaystyle\\lim_{x\\to -\\infty} (1-x)=+\\infty\\) (par somme) et \\(\\displaystyle\\lim_{x\\to +\\infty}  \\sqrt{x}=+\\infty\\) (limite de r\u00e9f\u00e9rence).</p> <p>Donc, d'apr\u00e8s le th\u00e9or\u00e8me de composition, \\(\\displaystyle\\lim_{x\\to -\\infty} \\sqrt{1-x}=+\\infty\\).</p> <p>M\u00e9thode D\u00e9terminer une limite de fonction </p> <p>On applique les propri\u00e9t\u00e9s d'op\u00e9rations sur les limites.</p> <p>Si la limite est ind\u00e9termin\u00e9e, \" \\(+\\infty+(-\\infty)\\) \", \" \\(0\\times\\infty\\) \", \" \\(\\dfrac{\\infty}{\\infty}\\) \" ou \" \\(\\dfrac{0}{0}\\) \", on essaye de :</p> <ul> <li> <p>factoriser par le terme pr\u00e9pond\u00e9rant ;</p> </li> <li> <p>multiplier par la quantit\u00e9 conjugu\u00e9e si des racines carr\u00e9es interviennent ;</p> </li> <li> <p>effectuer un changement de variable (voir th\u00e9or\u00e8me de composition des limites).</p> </li> </ul> <p>D'autres techniques existent et seront vues ult\u00e9rieurement.</p> <p>Exercice:</p> <p>Calculer les limites suivantes :</p> <p>1. \\(\\displaystyle\\lim_{x\\to+\\infty}\\left(\\sqrt{x+1}-\\sqrt{x}\\right)\\)</p> <p>2. \\(\\displaystyle\\lim_{x\\to+\\infty}\\dfrac{2x^2-3x+1}{x^2-1}\\)</p> <p>3. \\(\\displaystyle\\lim_{x\\to4}\\dfrac{x - 4}{\\sqrt{x} - 2}\\)</p> <p>Correction</p> <p>Ces limites sont ind\u00e9termin\u00e9es (respectivement formes \" \\(\\infty-\\infty\\) \", \" \\(\\dfrac{\\infty}{\\infty}\\) \" et \" \\(\\dfrac{0}{0}\\) \").</p> <p>1. On multiplie le num\u00e9rateur et le d\u00e9nominateur par la quantit\u00e9 conjugu\u00e9e de \\(\\sqrt{x+1}-\\sqrt{x}\\) :</p> <p>\\(\\sqrt{x+1}-\\sqrt{x}=\\dfrac{\\left(\\sqrt{x+1}-\\sqrt{x}\\right)\\left(\\sqrt{x+1}+\\sqrt{x}\\right)}{\\sqrt{x+1}+\\sqrt{x}}=\\dfrac{1}{\\sqrt{x+1}+\\sqrt{x}}\\).</p> <p>Or, par composition : \\(\\displaystyle\\lim_{x\\to +\\infty}(x+1)=\\infty\\) et \\(\\displaystyle\\lim_{x\\to +\\infty}\\sqrt{x}=+\\infty\\) donc \\(\\displaystyle\\lim_{x\\to +\\infty}\\sqrt{x+1}=\\infty\\).</p> <p>Et, par somme : \\(\\displaystyle\\lim_{x\\to+\\infty}\\left(\\sqrt{x+1}+\\sqrt{x}\\right)=+\\infty\\). Donc, par inverse : \\(\\displaystyle\\lim_{x\\to+\\infty}\\dfrac{1}{\\sqrt{x+1}+\\sqrt{x}}=0\\).</p> <p>2. Divisons le num\u00e9rateur et le d\u00e9nominateur par \\(x^2\\). Alors, \\(\\dfrac{2x^2-3x+1}{x^2-1}= \\dfrac{2-\\tfrac{3}{x}+\\tfrac{1}{x^2}}{1-\\tfrac{1}{x^2}}\\).</p> <p>Or, par somme : \\(\\displaystyle\\lim_{x\\to+\\infty}\\left(2-\\dfrac{3}{x}+\\dfrac{1}{x^2}\\right)=2\\) et \\(\\displaystyle\\lim_{x\\to+\\infty}\\left(1-\\dfrac{1}{x^2}\\right)=1\\).</p> <p>Donc, par quotient : \\(\\displaystyle\\lim_{x\\to+\\infty}\\dfrac{2-\\tfrac{3}{x}+\\tfrac{1}{x^2}}{1-\\tfrac{1}{x^2}}=2\\).</p> <p>3. Changeons de variable en posant \\(u=\\sqrt x\\). Si \\(x\\) tend vers \\(4\\), alors \\(u\\) tend vers \\(2\\).</p> <p>\\(\\dfrac{x-4}{\\sqrt x-2}=\\dfrac{u^2-4}{u-2}=\\dfrac{(u+2)(u-2)}{u-2}=u+2\\) pour \\(u\\neq2\\). Donc, par somme : \\(\\displaystyle\\lim_{u\\to2}(u+2)=4\\).</p>"},{"location":"maths/03_limites_tvi/#limites-et-comparaison","title":"Limites et comparaison","text":""},{"location":"maths/03_limites_tvi/#theoreme-de-comparaison","title":"Th\u00e9or\u00e8me de comparaison","text":"<p>Th\u00e9or\u00e8me </p> <p>Soit \\(f\\) et \\(g\\) deux fonctions telles que \\(f(x)\\leqslant g(x)\\) sur un intervalle \\(]\\alpha~;~+\\infty[\\) de \\(\\mathbb{R}\\).</p> <ul> <li> <p>\\(\\displaystyle\\lim_{x\\to+\\infty} f(x)=+\\infty\\Rightarrow\\displaystyle\\lim_{x\\to+\\infty} g(x)=+\\infty\\).</p> </li> <li> <p>\\(\\displaystyle\\lim_{x\\to+\\infty} g(x)=-\\infty\\Rightarrow\\displaystyle\\lim_{x\\to+\\infty} f(x)=-\\infty\\).</p> </li> </ul> <p>Soit \\(f\\) et \\(g\\) deux fonctions telles que \\(f(x)\\leqslant g(x)\\) sur un intervalle \\(]-\\infty~;~\\beta[\\) de \\(\\mathbb{R}\\).</p> <ul> <li> <p>\\(\\displaystyle\\lim_{x\\to-\\infty} f(x)=+\\infty\\Rightarrow\\displaystyle\\lim_{x\\to-\\infty} g(x)=+\\infty\\).</p> </li> <li> <p>\\(\\displaystyle\\lim_{x\\to-\\infty} g(x)=-\\infty\\Rightarrow\\displaystyle\\lim_{x\\to-\\infty} f(x)=-\\infty\\).</p> </li> </ul> <p>Soit \\(f\\) et \\(g\\) deux fonctions telles que \\(f(x)\\leqslant g(x)\\) sur un intervalle \\(]\\alpha~;~\\beta[\\) de \\(\\mathbb{R}\\) et \\(x_0\\in]\\alpha~;~\\beta[\\).</p> <ul> <li> <p>\\(\\displaystyle\\lim_{x\\to x_0} f(x)=+\\infty\\Rightarrow\\displaystyle\\lim_{x\\to x_0} g(x)=+\\infty\\).</p> </li> <li> <p>\\(\\displaystyle\\lim_{x\\to x_0} g(x)=-\\infty\\Rightarrow\\displaystyle\\lim_{x\\to x_0} f(x)=-\\infty\\).</p> </li> </ul> <p>Exemple </p> <p>D\u00e9terminons la limite en \\(+\\infty\\) et en \\(-\\infty\\) de \\(f(x)=x+\\sin x\\).</p> <p>La limite de \\(\\sin x\\) en \\(\\pm \\infty\\) est ind\u00e9termin\u00e9e donc, celle de \\(f(x)\\) aussi.</p> <p>Mais pour tout \\(x\\in\\mathbb{R}\\), \\(-1\\leqslant\\sin x\\leqslant 1\\) donc \\(x-1\\leqslant x+\\sin x\\leqslant x+1\\). Ainsi :</p> <ul> <li> <p>De \\(x-1\\leqslant x+\\sin x\\) \u00a0\u00a0et\u00a0\u00a0 \\(\\displaystyle\\lim_{x\\to +\\infty} (x-1)=+\\infty\\), on d\u00e9duit que \\(\\displaystyle\\lim_{x\\to +\\infty} (x+\\sin x)=+\\infty\\).</p> </li> <li> <p>De \\(x+\\sin x\\leqslant x+1\\) \u00a0\u00a0et\u00a0\u00a0 \\(\\displaystyle\\lim_{x\\to -\\infty} (x+1)=-\\infty\\), on d\u00e9duit que \\(\\displaystyle\\lim_{x\\to -\\infty} (x+\\sin x)=-\\infty\\).</p> </li> </ul>"},{"location":"maths/03_limites_tvi/#consequence-croissance-comparee","title":"Cons\u00e9quence : croissance compar\u00e9e","text":"<p>Th\u00e9or\u00e8me </p> <p>Pour tout entier naturel \\(n\\), \\(\\displaystyle\\lim_{n\\rightarrow +\\infty} \\frac{e^x}{x^n}=+\\infty\\).</p> <p>[D\u00e9monstration]{.underline} :</p> <p>Pour tout r\u00e9el \\(y\\), \\(y&lt;e^y\\).</p> <p>On pose : \\(y=\\frac{x}{n+1}\\). L'in\u00e9galit\u00e9 devient: \\(\\frac{x}{n+1}&lt;^{\\frac{x}{n+1}}\\).</p> <p>La fonction \\(t \\mapsto t^{n+1}\\) est strictement croissante sur \\([0 ; +\\infty[\\).</p> <p>Donc :</p> <p>\\(\\left(\\frac{x}{n+1}\\right)^{n+1}&lt;\\left(^{\\frac{x}{n+1}}\\right)^{n+1} \\iff \\frac{x^{n+1}}{(n+1)^{n+1}}&lt;e^x \\iff \\frac{x}{(n+1)^{n+1}}&lt;\\frac{e^x}{x^n}\\).</p> <p>Or, \\(\\displaystyle\\lim_{x\\rightarrow+\\infty} \\frac{x}{(n+1)^{n+1}}=+\\infty\\), donc d'apr\u00e8s le th\u00e9or\u00e8me de comparaison, \\(\\displaystyle\\lim_{x\\rightarrow+\\infty} \\frac{e^x}{x^n}=+\\infty\\).</p>"},{"location":"maths/03_limites_tvi/#theoreme-dencadrement-dit-des-gendarmes","title":"Th\u00e9or\u00e8me d'encadrement dit \" des gendarmes \"","text":"<p>Th\u00e9or\u00e8me </p> <p>Soit deux r\u00e9els \\(\\alpha\\) et \\(\\ell\\) et trois fonctions \\(f\\), \\(g\\) et \\(h\\) telles que, pour \\(x&gt;\\alpha\\), on a \\(f(x)\\leqslant g(x)\\leqslant h(x)\\).</p> <p>Si \\(\\displaystyle\\lim_{x\\rightarrow+\\infty}f(x)=\\displaystyle\\lim_{x\\rightarrow+\\infty}h(x)=\\ell\\), alors \\(\\displaystyle\\lim_{x\\rightarrow+\\infty}g(x)=\\ell\\).</p> <p>Remarque </p> <p>On a, comme pour le th\u00e9or\u00e8me de comparaison pr\u00e9c\u00e9dent, deux th\u00e9or\u00e8mes analogues lorsque \\(x\\) tend vers \\(-\\infty\\) et lorsque \\(x\\) tend vers un r\u00e9el \\(x_0\\).</p> <p>Exemple </p> <p>D\u00e9terminons la limite en \\(-\\infty\\) de \\(f(x)=\\dfrac{x\\cos x}{x^2+1}\\).</p> <p>La limite de \\(\\cos x\\) en \\(-\\infty\\) est ind\u00e9termin\u00e9e. Donc celle de \\(f(x)\\) aussi.</p> <p>Cependant pour tout \\(x\\) r\u00e9el strictement n\u00e9gatif, \\(-1\\leqslant\\cos x\\leqslant 1\\) donc \\(x\\leqslant x\\cos x\\leqslant -x\\).</p> <p>Et en divisant membre \u00e0 membre par \\(x^2+1&gt;0\\) on a : \\(\\dfrac{x}{x^2+1}\\leqslant \\dfrac{x\\cos x}{x^2+1}\\leqslant \\dfrac{-x}{x^2+1}\\).</p> <p>Pour \\(x\\in\\mathbb{R}^*\\), \\(\\dfrac{x}{x^2+1} = \\dfrac{1}{x+\\tfrac{1}{x}}\\).</p> <p>Or, \\(\\displaystyle\\lim_{x\\rightarrow-\\infty}\\left(x+\\frac{1}{x}\\right) = -\\infty\\) donc \\(\\displaystyle\\lim_{x\\rightarrow-\\infty}\\dfrac{x}{x^2+1} = \\displaystyle\\lim_{x\\rightarrow-\\infty}\\dfrac{-x}{x^2+1}=0\\).</p> <p>Donc, d'apr\u00e8s le th\u00e9or\u00e8me des gendarmes, \\(\\displaystyle\\lim_{x\\rightarrow-\\infty}\\dfrac{x\\cos x}{x^2+1}=0\\).</p>"},{"location":"maths/03_limites_tvi/#continuite-dune-fonction","title":"Continuit\u00e9 d'une fonction","text":"<p>D\u00e9finition </p> <p>Soit \\(f\\) une fonction d\u00e9finie sur un intervalle \\(I\\) et un r\u00e9el \\(x_{0}\\in I\\).</p> <ul> <li> <p>\\(f\\) est continue en \\(x_{0}\\) si \\(\\displaystyle\\lim_{x\\to x_0}f(x)=f(x_0)\\).</p> </li> <li> <p>\\(f\\) est continue sur \\(\\boldsymbol{I}\\) si, pour tout \\(x\\in I\\), \\(f\\) est continue en \\(x\\).</p> </li> </ul> <p>Remarque </p> <p>On peut consid\u00e9rer qu'une fonction est continue sur un intervalle \\(I\\) si sa courbe repr\u00e9sentative sur \\(I\\) peut \u00eatre trac\u00e9e enti\u00e8rement sans lever le crayon.</p> <p>Propri\u00e9t\u00e9 </p> <ul> <li> <p>Les fonctions usuelles (affines, carr\u00e9, inverse, racine carr\u00e9e, valeur absolue) sont continues sur tout intervalle inclus dans leur ensemble de d\u00e9finition.</p> </li> <li> <p>Toute fonction construite alg\u00e9briquement (par somme, produit, inverse ou compos\u00e9e) \u00e0 partir de fonctions usuelles est continue sur tout intervalle de son ensemble de d\u00e9finition.</p> </li> <li> <p>On convient qu'une fl\u00e8che oblique dans un tableau de variation traduit la continuit\u00e9 et la stricte monotonie de la fonction sur l'intervalle consid\u00e9r\u00e9.</p> </li> <li> <p>Une fonction d\u00e9rivable sur un intervalle est continue sur cet intervalle.</p> </li> </ul> <p>Remarque </p> <p>Attention, la r\u00e9ciproque de cette derni\u00e8re propri\u00e9t\u00e9 est fausse.\\ Par exemple, la fonction valeur absolue \\(x\\mapsto |x|\\) est continue en 0 mais non d\u00e9rivable en 0.</p> <p>Exemple </p> <p>Par convention, une fonction est continue l\u00e0 o\u00f9 elle est trac\u00e9e. S'il n'y a pas continuit\u00e9 en \\(x_0\\) :</p> <ul> <li> <p>le symbole [\\(\\bullet\\)]{style=\"color: B2\"} indique le point de la courbe de coordonn\u00e9es \\((x_0~;~f(x_0))\\) ;</p> </li> <li> <p>le symbole [\\(\\bullet\\)]{style=\"color: white\"}[\\(\\boldsymbol{\\circ}\\)]{style=\"color: B2\"} indique un point qui n'appartient pas \u00e0 la courbe mais dont l'ordonn\u00e9e est \u00e9gale \u00e0 la limite \u00e0 gauche ou \u00e0 droite en \\(x_0\\).</p> </li> </ul> <p>Soit la fonction \\(f\\) repr\u00e9sent\u00e9e ci-dessous.</p> <p></p> <p>\\(f\\) est \" affine par morceaux \". \\(\\mathcal{C}_f\\) a un \" saut \" en 0 donc \\(f\\) n'est pas continue sur \\([-3~;~3]\\) mais elle est continue sur \\([-3~;~0]\\) et \\(]0~;~3]\\). En effet, on a \\(f(0)=-1\\) mais \\(\\displaystyle\\lim_{\\substack{x\\to 0\\\\ x&gt;0}} f(x)=1\\).</p>"},{"location":"maths/03_limites_tvi/#theoreme-des-valeurs-intermediaires","title":"Th\u00e9or\u00e8me des valeurs interm\u00e9diaires","text":"<p>Th\u00e9or\u00e8me Cas g\u00e9n\u00e9ral</p> <p>Soit \\(f\\) une fonction d\u00e9finie sur un intervalle \\(I\\) contenant deux r\u00e9els \\(a\\) et \\(b\\) tels que \\(a&lt;b\\).</p> <p>Si \\(f\\) est continue sur \\([a~;~b]\\), alors pour tout r\u00e9el \\(k\\) compris entre \\(f(a)\\) et \\(f(b)\\), il existe au moins un r\u00e9el \\(c\\) appartenant \u00e0 \\([a~;~b]\\) tel que \\(f(c)=k\\).</p> <p>Remarque </p> <p>\\(f\\) prend au moins une fois toute valeur interm\u00e9diaire entre \\(f(a)\\) et \\(f(b)\\).</p> <p>Autrement dit, l'\u00e9quation \\(f(x)=k\\) a au moins une solution dans \\([a~;~b]\\) et, sur \\([a~;~b]\\), la courbe repr\u00e9sentative de \\(f\\) coupe la droite d'\u00e9quation \\(y=k\\) en un point au moins.</p> <p>Exemple </p> <p>Soit \\(f\\) la fonction d\u00e9finie sur \\([0~;~6]\\) par \\(f(x)=\\dfrac{x^3}{4}-\\dfrac{9}{4}x^2+6x-3\\).</p> <p></p> <p>On dresse le tableau de variation de \\(f\\).</p> <p>\\(f\\) admet pour minimum \\(-3\\) et pour maximum 6.</p> <p>\\(f\\) est continue sur \\([0~;~6]\\).</p> <p></p> <p>Donc, d'apr\u00e8s le th\u00e9or\u00e8me des valeurs interm\u00e9diaires, \\(f\\) prend toutes les valeurs de \\([-3~;~6]\\). En particulier, l'\u00e9quation \\(f(x)=0\\) a au moins une solution dans \\([0~;~6]\\).</p> <p>Th\u00e9or\u00e8me Cas d'une fonction strictement monotone</p> <p>Soit \\(f\\) une fonction d\u00e9finie sur un intervalle \\(I\\) contenant deux r\u00e9els \\(a\\) et \\(b\\) tels que \\(a&lt;b\\).</p> <p>Si \\(f\\) est continue et strictement monotone sur \\([a~;~b]\\), alors pour tout r\u00e9el \\(k\\) compris entre \\(f(a)\\) et \\(f(b)\\), il existe un unique r\u00e9el \\(c\\) appartenant \u00e0 \\([a~;~b]\\) tel que \\(f(c)=k\\).</p> <p>Exemple </p> <p>Reprenons la fonction \\(f:x\\mapsto\\dfrac{x^3}{4}-\\dfrac{9}{4}x^2+6x-3\\).</p> <p></p> <p></p> <p>Sur \\([0~;~2]\\), \\(f\\) est continue, strictement croissante et admet pour minimum \\(-3\\) et maximum \\(2\\).</p> <p>Donc, \\(f\\) prend une fois, et une seule, toutes les valeurs interm\u00e9diaires entre \\(-3\\) et 2.</p> <p>En particulier, l'\u00e9quation \\(f(x)=0\\) a une unique solution \\(\\alpha\\) entre 0 et 2.</p> <p>Remarque </p> <p>Le th\u00e9or\u00e8me des valeurs interm\u00e9diaires s'applique aussi pour \\(f\\) continue sur un intervalle \\(I\\) de type : \\([a~;~b[\\), \\(]a~;~b]\\), \\(]a~;~b[\\), \\([a~;~+\\infty[\\), \\(]a~;~+\\infty[\\), \\(]-\\infty~;~b]\\) ou \\(]-\\infty~;~b[\\), \\(]-\\infty\\ ;\\ +\\infty[\\).</p> <p>Si une borne \\(a\\) ou \\(b\\) de l'intervalle est ouverte, alors on remplace \\(f(a)\\) ou \\(f(b)\\) par la limite de \\(f\\) en cette borne ; si une borne de l'intervalle est \\(\\pm\\infty\\), alors on consid\u00e8re la limite de \\(f\\) en \\(\\pm\\infty\\).</p> Exploiter le th\u00e9or\u00e8me des valeurs interm\u00e9diairesCorrection <p>Le th\u00e9or\u00e8me des valeurs interm\u00e9diaires (T.V.I.) est utile pour prouver l'existence d'une solution d'une \u00e9quation du type \\(f(x)=k\\) et d\u00e9nombrer ces solutions.Pour cela:</p> <ul> <li> <p>On dresse le tableau de variation de la fonction \\(f\\) ;</p> </li> <li> <p>On applique le T.V.I. \u00e0 chaque intervalle o\u00f9 la fonction est strictement monotone.</p> </li> </ul> <p>D\u00e9nombrer les solutions de l'\u00e9quation (E) : \\(x^4+3x^3+x^2+1=0\\).</p> <p>\\(f:x\\mapsto x^4+3x^3+x^2+1\\) est une fonction polyn\u00f4me de degr\u00e9 4 d\u00e9rivable sur \\(\\mathbb{R}\\).</p> <p>\\(f'(x)=4x^3+9x^2+2x=x(4x^2+9x+2)=x(x+2)(4x+1)\\) apr\u00e8s factorisation du trin\u00f4me.</p> <p>On \u00e9tablit alors le tableau de signes de \\(f'(x)\\) et de variation de \\(f\\) :</p> <p></p> <p>Sur \\(]-\\infty~;~-2]\\), \\(f\\) est continue, strictement d\u00e9croissante et : \\(\\displaystyle\\lim_{x\\to-\\infty}f(x)=+\\infty\\) ; \\(f(-2)=-3\\).</p> <p>Donc, d'apr\u00e8s le T.V.I., l'\u00e9quation (E) a une unique solution \\(\\alpha\\) inf\u00e9rieure \u00e0 \\(-2\\).</p> <p>Sur \\(\\left[-2~;~-\\frac{1}{4}\\right]\\) , \\(f\\) est continue, strictement croissante et : \\(f(-2)=-3\\) ; \\(f\\left(-\\frac{1}{4}\\right)\\approx1,02&gt;0\\).</p> <p>Donc, d'apr\u00e8s le T.V.I., l'\u00e9quation (E) a une unique solution \\(\\beta\\) comprise entre \\(-2\\) et \\(-\\frac{1}{4}\\).</p> <p>Sur \\(\\left[-\\frac{1}{4}~;~0\\right]\\) et \\(\\left[0~;~+\\infty\\right[\\), le minimum de \\(f\\) est \\(1&gt;0\\) donc on n'y trouve pas de solution.</p> <p>Conclusion : l'\u00e9quation (E) admet exactement deux solutions dans \\(\\mathbb{R}\\).</p>"},{"location":"maths/03_limites_tvi/#fonction-continue-et-suite-convergente","title":"Fonction continue et suite convergente","text":"<p>Th\u00e9or\u00e8me </p> <p>Soit une fonction \\(f\\) d\u00e9finie et continue sur un intervalle \\(I\\) et une suite \\((u_n)\\) telle que pour tout entier naturel \\(n\\),on a : \\(u_n \\in I\\) et \\(u_{n+1}=f(u_n)\\).</p> <p>Si \\((u_n)\\) converge vers \\(l\\) de \\(I\\), alors \\(f(l)=l\\).</p> <p>Autrement dit : \\(l\\) est solution de l'\u00e9quation \\(f(x)=x\\).</p> <p>Exemple</p> <p>Soit la suite \\((u_n)\\) d\u00e9finie pour tout entier naturel \\(n\\) par \\(u_0=0\\) et \\(u_{n+1}=\\sqrt{3u_n+4}\\).</p> <p>On peut d\u00e9montrer par r\u00e9currence que \\((u_n)\\) est croissante et major\u00e9e par 4. (on l'admet sur cet exemple). Donc \\((u_n)\\) converge (th\u00e9or\u00e8me de convergence des suites monotones).</p> <p>la fonction \\(f\\) associ\u00e9e est \\(f: x \\mapsto \\sqrt{3x+4}\\).</p> <p>\\(f\\) est continue sur \\([-\\frac{4}{3} ; +\\infty[\\) comme compos\u00e9e de fonctions continues sur cet intervalle. (\\(f=g\\circ h\\), avec \\(h : x \\mapsto 3x+4\\) et \\(g:x \\mapsto \\sqrt{x}\\))</p> <p>Soit \\(l=\\displaystyle\\lim_{n \\to +\\infty} u_n\\). \\(l\\) est solution de l'\u00e9quation : \\(l=f(l) \\iff l=\\sqrt{3l+4}\\).</p> <p>D\u00e9terminons \\(l\\).</p> <p>\\(l\\) existe ssi \\(3l+4 \\geq 0\\) ssi \\(l \\geq -\\frac{4}{3}\\).</p> <p>\\(l=\\sqrt{3l+4} \\Rightarrow l^2=3l+4 \\iff l^2-3l-4=0\\).</p> <p>\\(\\Delta=25\\) . \\(l_1=-1\\) et \\(l_2=4\\).</p> <p>Or, \\(u_0=0\\) et \\((u_n)\\) est croissante donc la seule possibilit\u00e9 est \\(l_2=4\\).</p> <p>la limite de la suite \\((u_n)\\) est 4.</p>"},{"location":"maths/Cours-compl%C3%A9ments-d%C3%A9rivation/","title":"Compl\u00e9ments sur la d\u00e9rivation","text":""},{"location":"maths/Cours-compl%C3%A9ments-d%C3%A9rivation/#derivees-des-fonctions-composees","title":"D\u00e9riv\u00e9es des fonctions compos\u00e9es","text":""},{"location":"maths/Cours-compl%C3%A9ments-d%C3%A9rivation/#cas-general","title":"Cas g\u00e9n\u00e9ral","text":"<p>Propri\u00e9t\u00e9 </p> <p>Soient \\(u\\) une fonction d\u00e9finie et d\u00e9rivable sur un intervalle \\(I\\) et \u00e0 valeurs dans un intervalle \\(J\\), et \\(v\\) une fonction d\u00e9finie et d\u00e9rivable sur \\(J\\).</p> <p>Alors la fonction \\(v \\circ u\\) est d\u00e9rivable sur \\(I\\) et, pour tout r\u00e9el \\(x \\in I\\), on a:</p> <p>\\((v \\circ u)'(x)=u'(x) \\times (v' \\circ u)(x)\\).</p>"},{"location":"maths/Cours-compl%C3%A9ments-d%C3%A9rivation/#applications-a-quelques-fonctions","title":"Applications \u00e0 quelques fonctions","text":"<p>Dans cette partie, \\(u\\) d\u00e9signe une fonction et \\(I\\) un intervalle.</p> <p>Propri\u00e9t\u00e9 D\u00e9riv\u00e9e de \\(\\boldsymbol{\\sqrt{u}}\\)</p> <p>Si \\(u\\) est d\u00e9rivable et strictement positive sur \\(I\\), alors \\(\\sqrt{u}\\) est d\u00e9rivable sur \\(I\\) et:</p> <p>\\(\\left(\\sqrt u\\right)'=\\dfrac{u'}{2\\sqrt{u}}\\).</p> <p>Preuve </p> <p>Soit un r\u00e9el \\(a\\in I\\) et un r\u00e9el \\(h&gt;0\\) tel que \\(a+h\\) soit dans \\(I\\).</p> <p>On calcule le taux d'accroissement de \\(\\sqrt{u}\\) entre \\(a\\) et \\(a+h\\).</p> <p>\\(\\dfrac{\\sqrt{u(a+h)}-\\sqrt{u(a)}}{h}=\\dfrac{u(a+h)-u(a)}{h\\left(\\sqrt{u(a+h)}+\\sqrt{u(a)}\\right)} = \\dfrac{u(a+h)-u(a)}{h} \\times \\dfrac{1}{\\sqrt{u(a+h)}+\\sqrt{u(a)}}\\).</p> <p>Or, la fonction \\(u\\) est d\u00e9rivable sur \\(I\\) donc \\(\\lim_{h\\to0}\\dfrac{u(a+h)-u(a)}{h}=u'(a)\\).</p> <p>D'o\u00f9 \\(\\lim_{h\\to0}\\dfrac{\\sqrt{u(a+h)}-\\sqrt{u(a)}}{h}= u'(a) \\times \\dfrac{1}{2\\sqrt{u(a)}}=\\dfrac{u'(a)}{2\\sqrt{u(a)}}\\).</p> <p>Exemple </p> <ol> <li> <p>\\(f(x) = \\sqrt{x^2-x-2}\\).</p> </li> <li> <p>\\(g(x)=x \\sqrt{x^2+1}\\)</p> </li> </ol> <p>Correction</p> <ol> <li> <p>\\(f\\) est du type \\(\\sqrt{u}\\) avec \\(u(x)=x^2-x-2\\).</p> <p>Or, \\(u(x)\\) est un trin\u00f4me de degr\u00e9 2 ayant deux racines : \\(-1\\) et \\(2\\).</p> <p>Ainsi, \\(u(x)\\geqslant0\\) si \\(x\\leqslant-1\\) ou \\(x\\geqslant2\\) et \\(f\\) est d\u00e9finie sur \\(\\mathcal{D}= ]-\\infty~;~-1]\\,\\cup\\,[2~;~+\\infty[\\).</p> <p>Et comme \\(f=\\sqrt{u}\\) est d\u00e9rivable sur \\(\\mathcal{D}\\) sauf l\u00e0 o\u00f9 \\(u\\) s'annule alors \\(\\mathcal{D}'= ]-\\infty~;~-1[\\,\\cup\\,]2~;~+\\infty[\\). On a \\(u'(x)=2x-1\\) d'o\u00f9 \\(f'(x)=\\dfrac{u'(x)}{2\\sqrt{u(x)}}=\\dfrac{2x-1}{2\\sqrt{x^2-x-2}}\\).</p> </li> <li> <p>\\(g\\) est de la forme \\(u \\times v\\) , avec \\(u(x)=x \\Rightarrow u'(x)=1\\)     et     \\(v(x)=\\sqrt{x^2+1} \\Rightarrow v'(x)=\\frac{2x}{2 \\sqrt{x^2+1}}=\\frac{x}{\\sqrt{x^2+1}}\\).</p> <p>\\(f\\) est d\u00e9rivable sur \\(\\R\\) comme produit de fonctions d\u00e9rivables sur \\(\\R\\) et</p> <p>\\(f'(x)=1 \\times \\sqrt{x^2+1} +x \\times \\frac{x}{\\sqrt{x^2+1}}=\\frac{2x^2+1}{\\sqrt{x^2+1}}\\).</p> </li> </ol> <p>Propri\u00e9t\u00e9 D\u00e9riv\u00e9e de \\(\\boldsymbol{u^n}\\) et \\(\\boldsymbol{u^{-n}}\\) </p> <p>Soit \\(n\\in\\mathbb{N}^*\\). Si \\(u\\) est d\u00e9rivable sur \\(I\\) alors :</p> <ul> <li> <p>La fonction \\(u^n\\) est d\u00e9rivable sur \\(I\\) et \\((u^n)'=nu'u^{n-1}\\).</p> </li> <li> <p>La fonction \\(u^{-n}\\) est d\u00e9rivable sur \\(I\\) sauf l\u00e0 o\u00f9 \\(u\\) s'annule     et \\(\\left(u^{-n}\\right)'=-nu'u^{-n-1}\\).</p> </li> </ul> <p>Preuve </p> <ul> <li> <p>On d\u00e9montre par r\u00e9currence. Voici l'initialisation et l'h\u00e9r\u00e9dit\u00e9 :</p> <p>\\(\\left(u^1\\right)'=u'=1 \\times u'u^{1-1}\\). La proposition est donc initialis\u00e9e au rang 1.</p> <p>Supposons qu'il existe un entier \\(k\\in \\mathbb{N^{*}}\\) tel que la propri\u00e9t\u00e9 \u00ab \\(\\left(u^k\\right)'=ku'u^{k-1}\\) \u00bb soit vraie.</p> <p>\\(\\left(u^{k+1}\\right)'=\\left(u^ku\\right)'=\\left(u^k\\right)'u+u^ku'=ku'u^{k-1}u+u^ku'=(k+1)u'u^k\\).</p> <p>La propri\u00e9t\u00e9 est encore vraie au rang suivant donc elle est h\u00e9r\u00e9ditaire.</p> </li> <li> <p>Si \\(u\\) est d\u00e9rivable sur \\(I\\), alors \\(\\dfrac{1}{u}\\) est d\u00e9rivable sur     \\(I\\) sauf l\u00e0 o\u00f9 \\(u\\) s'annule.</p> <p>\\(\\left(u^{-n}\\right)'=\\left(\\dfrac{1}{u^n}\\right)'=\\left[\\left(\\dfrac{1}{u}\\right)^n\\right]'=n\\left(\\dfrac{1}{u}\\right)'\\left(\\dfrac{1}{u}\\right)^{n-1}\\) d'apr\u00e8s la premi\u00e8re propri\u00e9t\u00e9.</p> <p>Ainsi : \\(\\left(u^{-n}\\right)'=n\\left(-\\dfrac{u'}{u^2}\\right)\\dfrac{1}{u^{n-1}}=-\\dfrac{nu'}{u^{n+1}}=-nu'u^{-n-1}\\).</p> </li> </ul> <p>Exemple </p> <ol> <li> <p>\\(f(x) = (2x-3)^{5}\\)</p> </li> <li> <p>\\(f(x) = \\left(\\dfrac{3x-1}{2x-4}\\right)^2\\)</p> </li> <li> <p>\\(f(x) = \\dfrac{1}{\\left(\\sqrt{x}-1\\right)^3}\\)</p> </li> </ol> <p>Correction</p> <ol> <li> <p>On voit le type \\(u^5\\). Voyons plut\u00f4t le type \\(u(ax+b)\\) avec     \\(u(x)=x^5\\), \\(a=2\\) et \\(b=-3\\).</p> <p>Il est \u00e9vident que \\(\\mathcal{D}=\\mathcal{D}'=\\mathbb{R}\\) vu que \\(f\\) est une fonction polyn\u00f4me de degr\u00e9 5 !</p> <p>On a \\(u'(x)=5x^4\\) d'o\u00f9 \\(f'(x)=au'(ax+b)=2u'(2x-3)=2\\times5\\left(2x-3\\right)^4=10\\left(2x-3\\right)^4\\).</p> </li> <li> <p>\\(f\\) est du type \\(u^2\\) avec \\(u(x)=\\dfrac{3x-1}{2x-4}\\).</p> <p>Or, \\(u\\) est d\u00e9finie sur \\(\\mathbb{R}\\setminus\\{2\\}\\) donc \\(f\\) est d\u00e9finie sur \\(\\mathcal{D}=\\mathbb{R}\\setminus\\{2\\}\\).</p> <p>\\(f\\) est d\u00e9rivable sur son ensemble de d\u00e9finition donc \\(\\mathcal{D}'=\\mathcal{D}\\).</p> <p>On a \\(u'(x)=\\dfrac{3(2x-4)-2(3x-1)}{\\left(2x-4\\right)^2}=\\dfrac{-10}{\\left(2x-4\\right)^2}\\).</p> <p>D'o\u00f9, \\(f'(x)=2u'(x)u^{2-1}(x)=2u'(x)u(x)=2\\times\\dfrac{-10}{\\left(2x-4\\right)^2}\\times\\dfrac{3x-1}{2x-4}=-\\dfrac{20(3x-1)}{\\left(2x-4\\right)^3}\\).</p> </li> <li> <p>\\(f(x)=\\left(\\sqrt{x}-1\\right)^{-3}\\) est du type \\(u^{-3}\\) avec     \\(u(x)=\\sqrt{x}-1\\).</p> <p>Or, \\(u\\) est d\u00e9finie sur \\([0~;~+\\infty[\\) et \\(f\\) aussi sauf l\u00e0 o\u00f9 \\(u\\) s'annule. Donc, \\(\\mathcal{D}=[0~;~1[\\,\\cup\\,]1~;~+\\infty[\\).</p> <p>La fonction \\(x\\mapsto\\sqrt{x}\\) n'est pas d\u00e9rivable en 0 donc \\(u\\) et \\(f\\) aussi. Ainsi, \\(\\mathcal{D}'=]0~;~1[\\,\\cup\\,]1~;~+\\infty[\\).</p> <p>On a \\(u'(x)=\\dfrac{1}{2\\sqrt{x}}\\) d'o\u00f9 \\(f'(x)=-3u'(x)u^{-3-1}(x)=-3u'(x)u^{-4}(x)=-\\dfrac{3}{2\\sqrt{x}\\left(\\sqrt{x}-1\\right)^4}\\).</p> </li> </ol> <p>Propri\u00e9t\u00e9 D\u00e9riv\u00e9e de \\(^u\\)</p> <p>Soit \\(u\\) une fonction d\u00e9finie et d\u00e9rivable sur un intervalle \\(I\\). La fonction \\(^u\\) est d\u00e9rivable sur \\(I\\) et \\(\\left( ^u \\right) ' =u' \\times ^u\\)</p> <p>Exemple </p> <ol> <li> <p>\\(f(x)= ^{-x}\\).</p> </li> <li> <p>\\(g(x)=^{0,5x^2-2x+1}\\).</p> </li> <li> <p>\\(h(x)= x ^{x^2}\\).</p> </li> </ol> <p>Correction</p> <ol> <li> <p>Pour tout r\u00e9el \\(x\\), on pose \\(u(x)=-x\\). \\(u\\) est d\u00e9rivable sur \\(\\R\\) et     \\(u'(x)=-1\\).</p> <p>Donc \\(f\\) est d\u00e9rivable sur \\(\\R\\) et \\(f'(x) =  -^{-x}\\).</p> </li> <li> <p>Pour tout r\u00e9el \\(x\\), posons \\(u(x)=0,5x^2-2x+1\\). \\(u\\) est d\u00e9rivable sur     \\(\\R\\) et \\(u'(x)=x-2\\).</p> <p>Donc \\(f\\) est d\u00e9rivable sur \\(\\R\\) et \\(f'(x) =  (x-2) ^{0,5x^2-2x+1}\\).</p> </li> <li> <p>\\(f\\) est de la forme \\(u \\times v\\) , avec \\(u(x)=x \\Rightarrow u'(x)=1\\)     et \\(v(x)=^{x^2} \\Rightarrow v'(x)=2x ^{x^2}\\).</p> <p>\\(f\\) est d\u00e9rivable sur \\(\\R\\) comme produit de fonctions d\u00e9rivables sur \\(\\R\\) et</p> <p>\\(f'(x)=1 \\times ^{x^2}+x \\times 2x ^{x^2}=^{x^2} \\left(1+2x^2 \\right)\\).</p> </li> </ol>"},{"location":"maths/Cours-compl%C3%A9ments-d%C3%A9rivation/#convexite","title":"Convexit\u00e9","text":""},{"location":"maths/Cours-compl%C3%A9ments-d%C3%A9rivation/#fonction-convexe-fonction-concave","title":"Fonction convexe, Fonction concave","text":""},{"location":"maths/Cours-compl%C3%A9ments-d%C3%A9rivation/#definitions","title":"D\u00e9finitions","text":"<p>D\u00e9finition </p> <p>Soit \\(f\\) une fonction d\u00e9rivable sur un intervalle \\(I\\) et \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative.</p> <ul> <li> <p>Dire que la fonction \\(f\\) est convexe sur \\(I\\) signifie que la courbe     \\(\\mathcal{C}_f\\) est situ\u00e9e enti\u00e8rement au-dessus de chacune de ses     tangentes.</p> </li> <li> <p>Dire que la fonction \\(f\\) est concave sur \\(I\\) signifie que la courbe     \\(\\mathcal{C}_f\\) est situ\u00e9e enti\u00e8rement au-dessous de chacune de ses     tangentes.</p> </li> </ul> <p>Exemples </p> <p>La fonction carr\u00e9 \\(x \\longmapsto x^2\\) est  convexe.</p> <p></p> <p>La fonction inverse \\(x \\longmapsto \\dfrac{1}{x}\\) est concave sur \\(]-\\infty;0[\\)  et convexe sur \\(]0;+\\infty[\\)</p> <p></p> <p>Remarque </p> <p>Intuitivement, quels que soient les points \\(A\\) et \\(B\\) de la courbe \\(\\mathcal{C}_f\\)</p> <ul> <li> <p>Si le segment \\([AB]\\) est au-dessus de la courbe alors \\(f\\) est     convexe.</p> </li> <li> <p>Si le segment \\([AB]\\) est au-dessous de la courbe alors \\(f\\) est     concave.</p> </li> </ul>"},{"location":"maths/Cours-compl%C3%A9ments-d%C3%A9rivation/#convexite-et-fonctions-derivees","title":"Convexit\u00e9 et fonctions d\u00e9riv\u00e9es","text":"<p>Th\u00e9or\u00e8me </p> <p>Soit \\(f\\) une fonction d\u00e9finie et d\u00e9rivable sur un intervalle \\(I\\).</p> <ul> <li> <p>\\(f\\) est convexe sur \\(I\\) si, et seulement si, sa fonction d\u00e9riv\u00e9e     \\(f'\\) est croissante sur \\(I\\).</p> </li> <li> <p>\\(f\\) est concave sur \\(I\\) si, et seulement si, sa fonction d\u00e9riv\u00e9e     \\(f'\\) est d\u00e9croissante sur \\(I\\).</p> </li> </ul> <p>Th\u00e9or\u00e8me </p> <p>On note \\(f''\\) la d\u00e9riv\u00e9e seconde de la fonction \\(f\\), c'est \u00e0 dire la d\u00e9riv\u00e9e de la d\u00e9riv\u00e9e \\(f'\\).</p> <ul> <li> <p>Si la d\u00e9riv\u00e9e seconde est positive alors la fonction \\(f\\) est     convexe.</p> </li> <li> <p>Si la d\u00e9riv\u00e9e seconde est n\u00e9gative alors la fonction \\(f\\) est     concave.</p> </li> </ul> <p>Preuve </p> <p>soit \\(f\\) une fonction d\u00e9finie et deux fois d\u00e9rivable sur un intervalle \\(I\\) et \\(a\\) un r\u00e9el appartenant \u00e0 \\(I\\).</p> <p>\\(C_f\\) est sa courbe repr\u00e9sentative dasn un rep\u00e8re et \\(T\\) est la tangente \u00e0 \\(C_f\\) au point d'abscisse \\(a\\).</p> <p>On veut d\u00e9montrer que : \"Si \\(f''\\) est positive, alors \\(f\\) est convexe sur \\(I\\)\". c'est-\u00e0-dire que sur \\(I\\), \\(c_f\\) est au-dessus de \\(T\\).</p> <p>Supposons que, pour tout \\(x \\in I\\), \\(f''(x)&gt;0\\). Soit \\(g\\) la fonction d\u00e9finie sur \\(I\\) par : \\(g(x)=f(x)-(f'(a)(x-a)+f(a)) \\iff g(x)= f(x) -f'(a)(x-a) -f(a)\\).</p> <p>Comme \\(f\\) est deux fois d\u00e9rivable sur \\(I\\), \\(g\\) l'est aussi et on a : \\(g'(x)=f'(x)-f'(a)\\) et \\(g''(x)=f''(x)\\).</p> <p>Ainsi : \\(g''(x)&gt;0\\) et \\(g'\\) est donc croissante sur \\(I\\).</p> <ul> <li> <p>Si \\(x&lt;a\\), alors on a \\(g'(x)&lt;g'(a)\\). Or, \\(g'(a)=0\\), donc \\(g'(x)&lt;0\\).</p> <p>Donc \\(g\\) est d\u00e9croissante, donc \\(g(x)&gt;g(a)\\).</p> <p>Or \\(g(a)=0\\), donc \\(g(x)&gt;0\\).</p> <p>Donc \\(C_f\\) est au-dessus de \\(T\\).</p> </li> <li> <p>Si \\(x&gt;a\\), alors on a \\(g'(x)&gt;g'(a)\\). Or, \\(g'(a)=0\\), donc \\(g'(x)&gt;0\\).</p> <p>Donc \\(g\\) est croissante, donc \\(g(x)&gt;g(a)\\).</p> <p>Or \\(g(a)=0\\), donc \\(g(x)&gt;0\\).</p> <p>Donc \\(C_f\\) est au-dessus de \\(T\\).</p> </li> </ul> <p>Dans les deux cas, \\(C_f\\) est au-dessus de \\(T\\), donc la fonction \\(f\\) est convexe.</p> <p>Exemple </p> <p>Soit \\(f\\) la fonction d\u00e9finie sur \\(\\R\\) par \\(f(x)=x^5-5x^4\\).</p> <p>Sa d\u00e9riv\u00e9e est la fonction \\(f'\\) d\u00e9finie sur \\(\\R\\) par \\(f'(x)=5x^4-20x^3\\).</p> <p>Sa d\u00e9riv\u00e9e seconde est la fonction \\(f''\\) d\u00e9finie sur \\(\\R\\) par \\(f''(x)=20x^3-60x^2=20x^2(x-3)\\).</p> <p>Les variations de \\(f'\\) se d\u00e9duisent du signe de sa d\u00e9riv\u00e9e \\(f''\\).</p> <p>Notons que \\(20x^2 \\geqslant 0\\) donc \\(f''(x)\\) est du m\u00eame signe que \\(x-3\\). D'o\u00f9 le tableau :</p> <p></p> <p>\\(f\\) est concave sur \\(\\left] -\\infty ; 3 \\right]\\) et convexe sur \\(\\left[ 3;+\\infty  \\right[\\).</p>"},{"location":"maths/Cours-compl%C3%A9ments-d%C3%A9rivation/#point-dinflexion","title":"Point d'inflexion","text":"<p>D\u00e9finition </p> <p>Soit \\(f\\) une fonction d\u00e9finie et d\u00e9rivable sur un intervalle \\(I\\) et \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative.</p> <p>S'il existe un point \\(A\\) de la courbe \\(\\mathcal{C}_f\\) tel que la courbe traverse sa tangente en ce point, alors on dit que \\(A\\) est un point d'inflexion.</p> <p>Propri\u00e9t\u00e9 </p> <ul> <li> <p>En un point d'inflexion la courbe traverse sa tangente : cela     signifie que la fonction change de convexit\u00e9.</p> </li> <li> <p>Si la d\u00e9riv\u00e9e \\(f'\\) change de sens de variation en \\(a\\) alors la     courbe admet un point d'inflexion d'abscisse \\(a\\).</p> </li> <li> <p>Si la d\u00e9riv\u00e9e seconde \\(f''\\) s'annule en changeant de signe en \\(a\\)     alors la courbe admet un point d'inflexion d'abscisse \\(a\\).</p> </li> </ul> <p>Exemple </p> <p>Soit \\(f\\) la fonction d\u00e9finie sur \\(\\R\\) par \\(f(x)=x^5-5x^4-40x+120\\) et \\(\\mathcal{C}_f\\) sa courbe repr\u00e9sentative.</p> <p>Sa d\u00e9riv\u00e9e est la fonction \\(f'\\) d\u00e9finie sur \\(\\R\\) par \\(f'(x)=5x^4-20x^3-40\\).</p> <p>Sa d\u00e9riv\u00e9e seconde est la fonction \\(f''\\) d\u00e9finie sur \\(\\R\\) par \\(f''(x)=20x^2(x-3)\\).</p> <p>L'\u00e9quation \\(f''(x)=0\\) admet deux solutions \\(x_1=0\\) et \\(x_2=3\\).</p> <p>Notons que \\(20x^2 \\geqslant 0\\) donc \\(f''(x)\\) est du m\u00eame signe que \\(x-3\\).</p> <p>Les variations de \\(f'\\) se d\u00e9duisent du signe de sa d\u00e9riv\u00e9e \\(f''\\). D'o\u00f9 le tableau :</p> <p></p> <p>En tenant compte des changements de variation de la d\u00e9riv\u00e9e \\(f'\\) on en d\u00e9duit que la courbe \\(\\mathcal{C}_f\\) admet un seul point d'inflexion, le point \\(A \\left( 3 ; f(3) \\right)\\).</p> <p>En effet :</p> <ul> <li> <p>\\(f''(0)=0\\) mais, sur l'intervalle \\(]-\\infty ; 3]\\) \\(f''(x) \\leqslant 0\\) donc le point \\(B \\left( 0 ; 120 \\right)\\) de la     courbe \\(\\mathcal{C}_f\\) d'abscisse 0, n'est pas un point d'inflexion.     (La fonction \\(f\\) est concave sur \\(]-\\infty ; 3]\\)).</p> </li> <li> <p>\\(f''\\) s'annule en 3 en changeant de signe donc le point     \\(A \\left( 3 ; -162 \\right)\\) est un point d'inflexion de la courbe     \\(\\mathcal{C}_f\\). (La fonction \\(f\\) est concave sur \\(]-\\infty ; 3]\\) et     convexe sur \\([3 ;+\\infty [\\)).</p> </li> </ul> <p></p>"},{"location":"maths/DS4-Probabilit%C3%A9s-convexit%C3%A9/","title":"DS Probabilit\u00e9s Convexit\u00e9","text":""},{"location":"maths/DS4-Probabilit%C3%A9s-convexit%C3%A9/#exercice-1-5-points","title":"Exercice 1: /5 points","text":"<p>*Cet exercice est un QCM (questionnaire \u00e0 choix multiples). Pour chacune des questions pos\u00e9es, une seule des quatre r\u00e9ponses propos\u00e9es est exacte. Indiquer sur la copie le num\u00e9ro de la question et recopier la lettre de la r\u00e9ponse choisie.</p> <p>Aucune justification n'est demand\u00e9e.</p> <p>Une r\u00e9ponse exacte rapporte \\(1\\) point; une r\u00e9ponse fausse, une r\u00e9ponse multiple ou l'absence de r\u00e9ponse ne rapporte ni n'enl\u00e8ve de point.*</p> <ol> <li> <p>Dans une station de sport d'hiver, une \u00e9tude statistique a \u00e9tabli     qu'un client sur quatre pratique le surf.</p> <p>Dans une t\u00e9l\u00e9cabine accueillant \\(80\\) clients de la station, la probabilit\u00e9 arrondie au milli\u00e8me qu'il y ait exactement \\(20\\) clients pratiquant le surf est :</p> <p>a.\u00a0\u00a0 0,103 b.\u00a0\u00a0 0,25 c.\u00a0\u00a01 d.\u00a0\u00a00,560</p> Solution <p>R\u00e9ponse a : \\(0,103\\). Calcul de la probabilit\u00e9 avec la loi binomiale de param\u00e8tres \\(n=80\\), \\(p=0,25\\) et \\(k=20\\).</p> </li> <li> <p>Pour la recherche d'un emploi, une personne envoie sa candidature \u00e0     \\(25\\) entreprises. La probabilit\u00e9 qu'une entreprise lui r\u00e9ponde est     de \\(0,2\\) et on suppose que ces r\u00e9ponses sont ind\u00e9pendantes.</p> <p>La probabilit\u00e9, arrondie au milli\u00e8me, que la personne re\u00e7oive moins de \\(5\\) r\u00e9ponses est :</p> <p>a.\u00a0\u00a00,200 b.\u00a0\u00a00,187 c.\u00a0\u00a00,617 d.\u00a0\u00a00,421</p> Solution <p>R\u00e9ponse d : \\(0,421\\). Calcul de la probabilit\u00e9 cumul\u00e9e avec la loi binomiale de param\u00e8tres \\(n=25\\), \\(p=0,2\\) et \\(k=4\\).</p> </li> <li> <p>\\(f\\) est la fonction d\u00e9finie sur \\(\\R\\) par \\(f(x)=xe^{2x}\\). La fonction     \\(f\\) admet pour d\u00e9riv\u00e9e la fonction \\(f'\\) d\u00e9finie sur \\(\\R\\) par :</p> <p>a.\u00a0\u00a0\\(f'(x)=e^{2x}\\) b.\u00a0\u00a0\\(f'(x)=2xe^{2x}\\) c.\u00a0\u00a0\\(f'(x)=(1+2x)e^{2x}\\) d.\u00a0\u00a0\\(f'(x)=(1+x)e^{2x}\\)</p> Solution <p>R\u00e9ponse c : \\(f'(x)=(1+2x)e^{2x}\\). \\(f=u \\times v\\), avec \\(u=x \\Rightarrow u'=1\\) et \\(v=e^{2x} \\Rightarrow v'=2 e^{2x}\\)</p> </li> <li> <p>\\(f\\) est la fonction d\u00e9finie sur \\(\\R\\) par \\(f(x)=(e^{-x}+1)^3\\). La     fonction \\(f\\) admet pour d\u00e9riv\u00e9e la fonction \\(f'\\) d\u00e9finie sur \\(\\R\\)     par :</p> <p>a.\u00a0\u00a0\\(f'(x)=-3e^{-x}(e^{-x}+1)^2\\) b.\u00a0\u00a0\\(f'(x)=3e^{-x}(e^{-x}+1)^2\\) c.\u00a0\u00a0\\(f'(x)=3(e^{-x})^2(e^{-x}+1)\\) d.\u00a0\u00a0\\(f'(x)=-3(e^{-x}+1)^2\\)</p> Solution <p>R\u00e9ponse a : \\(f'(x)=-3e^{-x}(e^{-x}+1)^2\\). \\(f=u^3\\) avec \\(u=e^{-x}+1 \\Rightarrow u'=-e^{-x}\\).</p> </li> <li> <p>Soit \\(f\\) une fonction deux fois d\u00e9rivable sur l'intervalle \\([-2;3]\\).     On note \\(f'\\) sa d\u00e9riv\u00e9e.</p> <p>La courbe repr\u00e9sentative de la fonction d\u00e9riv\u00e9e not\u00e9e \\(\\mathcal{C}_{f'}\\) est donn\u00e9e ci dessous.</p> <p></p> <p>La fonction \\(f\\) est :</p> <p>a.\u00a0\u00a0convexe sur \\([-2;0,5]\\) b.\u00a0\u00a0convexe sur \\([0,5;3]\\) c.\u00a0\u00a0concave sur \\([-1;2]\\) d.\u00a0\u00a0concave sur \\([-2;0,5]\\)</p> Solution <p>R\u00e9ponse c : concave sur \\([-1;2]\\). \\(f'\\) est croissante sur \\([-2;-1] \\cup [2;3]\\), donc \\(f\\) est convexe sur cet intervalle. \\(f'\\) est d\u00e9croissante sur \\([-1;2]\\), donc \\(f\\) est concave sur cet intervalle.</p> </li> </ol>"},{"location":"maths/DS4-Probabilit%C3%A9s-convexit%C3%A9/#exercice-exercice-2-7-points","title":"exercice Exercice 2: /7 points","text":"<p>Dans cet exercice, les r\u00e9sultats approch\u00e9s seront donn\u00e9s \u00e0 \\(0,0001\\)\u00a0 pr\u00e8s.</p> <p>Lors d'une \u00e9pid\u00e9mie chez des bovins, on s'est aper\u00e7u que si la maladie est diagnostiqu\u00e9e suffisamment t\u00f4t chez un animal, on peut le gu\u00e9rir ; sinon la maladie est mortelle.</p> <p>Un test est mis au point et essay\u00e9 sur un \u00e9chantillon d'animaux dont 1\u2006% est porteur de la maladie.</p> <p>On obtient les r\u00e9sultats suivants :</p> <ul> <li> <p>si un animal est porteur de la maladie, le test est positif dans   85\u2006% des cas ;</p> </li> <li> <p>si un animal est sain, le test est n\u00e9gatif dans 95\u2006% des cas.</p> </li> </ul> <p>On choisit de prendre ces fr\u00e9quences observ\u00e9es comme probabilit\u00e9s pour la population enti\u00e8re et d'utiliser le test pour un d\u00e9pistage pr\u00e9ventif de la maladie.</p> On note : <p>M l'\u00e9v\u00e8nement : <code>\\og</code>l'animal est porteur de la maladie <code>\\fg{}</code> ;</p> <p>T l'\u00e9v\u00e8nement : <code>\\og</code>le test est positif <code>\\fg</code>.</p> <ol> <li> <p>Construire un arbre pond\u00e9r\u00e9 mod\u00e9lisant la situation propos\u00e9e.     <code>\\setbar{0.5}</code></p> Solution <p>Aucun probl\u00e8me</p> </li> <li> <p>Un animal est choisi au hasard.</p> <ol> <li> <p>Quelle est la probabilit\u00e9 qu'il soit porteur de la maladie et     que son test soit positif ?</p> Solution <p>On suit la premi\u00e8re branche : \\(p(M \\cap T) = p(M) \\times p_{M}(T) = 0,01 \\times 0,85 = 0,0085\\).</p> </li> <li> <p>Montrer que la probabilit\u00e9 pour que son test soit positif est     \\(0,058\\).</p> Solution <p>\\(M\\) et \\(\\overline{M}\\) forment une partition de l'univers, d'apr\u00e8s la formule des probabilit\u00e9s totales, on a :\\ \\(p(T) = p(M \\cap T)+p(\\overline{M} \\cap T)\\)\\ \\(p(T) = p(M) \\times p_{M}(T) + p\\left(\\overline{M}\\right) \\times p_{\\overline{M}}(T)\\)\\ \\(p(T)= 0,0085 + 0,99 \\times 0,05 = 0,058\\).</p> </li> </ol> </li> <li> <p>Un animal est choisi au hasard parmi ceux dont le test est positif.</p> <p>Quelle est la probabilit\u00e9 pour qu'il soit porteur de la maladie ?</p> Solution <p>\\(p_{T}(M) = \\dfrac{p(M \\cap T)}{p(T)} = \\dfrac{0,0085}{0,058} \\approx 0,1466\\).</p> </li> <li> <p>On choisit cinq animaux au hasard. La taille de ce troupeau permet     de consid\u00e9rer les \u00e9preuves comme ind\u00e9pendantes et d'assimiler les     tirages \u00e0 des tirages avec remise. On note X la variable al\u00e9atoire     qui, aux cinq animaux choisis, associe le nombre d'animaux ayant un     test positif.</p> <ol> <li> <p>Quelle est la loi de probabilit\u00e9 suivie par X ? Justifier.</p> Solution <p>On assimile les tirages \u00e0 des tirages avec remise. On r\u00e9p\u00e8te donc 5 fois de mani\u00e8re ind\u00e9pendante une \u00e9preuve de Bernoulli donc la probabilit\u00e9 du succ\u00e8s (\"l'animal est positif\") est \\(0,058\\). Donc \\(X\\) suit une loi binomiale de param\u00e8tres \\(n = 5\\) et \\(p = 0,058\\).</p> </li> <li> <p>Quelle est la probabilit\u00e9 pour qu'au moins un des cinq animaux     ait un test positif ?</p> Solution <p>\\(p(X \\geq 1)=1-p(X=0)=1-\\binom{5}{0} \\times  0,058^0 \\times (1 - 0,058)^{5}=1-0,942^5 \\approx 0,2583\\).</p> </li> </ol> </li> <li> <p>Le co\u00fbt des soins \u00e0 prodiguer \u00e0 un animal ayant r\u00e9agi positivement     au test est de 100\u00a0euros et le co\u00fbt de l'abattage d'un animal non     d\u00e9pist\u00e9 par le test et ayant d\u00e9velopp\u00e9 la maladie est de 1000\u00a0euros.     On suppose que le test est gratuit.</p> <p>On appelle \\(Y\\) la variable donnant le co\u00fbt \u00e0 engager par animal subissant le test.</p> <ol> <li> <p>Donner dans un tableau la loi de probabilit\u00e9 de la variable     al\u00e9atoire \\(Y\\).</p> Solution <p><code>\\centering</code><code>\\arraybackslash</code>\\(y_{i}\\) <code>\\centering</code><code>\\arraybackslash</code> \\(0\\) <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code></p> <p><code>\\centering</code><code>\\arraybackslash</code>\\(p(Y=y_{i}\\) <code>\\centering</code><code>\\arraybackslash</code>,9405 <code>\\centering</code><code>\\arraybackslash</code>,058 <code>\\centering</code><code>\\arraybackslash</code>,0015 <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code> <code>\\centering</code><code>\\arraybackslash</code></p> </li> <li> <p>Calculer l'esp\u00e9rance math\u00e9matique de la variable al\u00e9atoire \\(Y\\).</p> Solution <p>\\(E(Y)= 0 \\times 0,9405 + 100 \\times 0,0580 + 1000 \\times 0,0015 = 5,80 + 1,50 = 7,30\\)\u00a0\u20ac.</p> </li> <li> <p>Un \u00e9leveur poss\u00e8de un troupeau de 200\u00a0b\u00eates. Si tout le troupeau     est soumis au test, quelle somme doit-il pr\u00e9voir d'engager ?</p> Solution <p>Le co\u00fbt moyen par animal est \\(7,30\\)\u00a0\u20ac. Pour 200\u00a0b\u00eates, le co\u00fbt sera en moyenne de : \\(200 \\times 7,30 = 1460\\)\u00a0\u20ac.</p> </li> </ol> </li> </ol>"},{"location":"maths/DS4-Probabilit%C3%A9s-convexit%C3%A9/#exercice-exercice-3-8-points","title":"exercice Exercice 3: /8 points","text":"<p>\\(f\\) est la fonction d\u00e9finie sur \\(\\R\\) par : \\(f(x)=(x + 1)^{-\\frac{1}{2}x}\\).</p> <ol> <li> <p>Calculer la limite de la fonction \\(f\\) en \\(-\\infty\\).</p> Solution <p>\\(\\displaystyle\\left. \\begin{array}{l} \\displaystyle\\lim*{x \\to -\\infty} -\\frac{1}{2}x=+\\infty\\\\ \\displaystyle\\lim*{x \\to +\\infty} e^x =+\\infty \\end{array} \\right\\}\\)</p> <p>Par compos\u00e9e : \\(\\displaystyle\\lim_{x \\to -\\infty} ^{-\\frac{1}{2}x}= +\\infty\\).</p> <p>\\(\\displaystyle\\lim_{x \\to -\\infty} x+1=-\\infty\\). Donc par produit :</p> <p>\\(\\displaystyle\\lim_{x \\to -\\infty} f(x)= -\\infty\\).</p> </li> <li> <ol> <li> <p>Justifier que, pour tout r\u00e9el \\(x\\),         \\(f(x) = 2\\left(\\dfrac{\\frac{1}{2}x}{^{\\frac{1}{2}x}}\\right) + ^{- \\frac{1}{2}x}\\).         <code>\\setbar{1}</code></p> Solution <p>\\(f(x) = (x + 1)^{-\\frac{1}{2}x} = x ^{-\\frac{1}{2}x} + ^{-\\frac{1}{2}x} = \\dfrac{x}{^{\\frac{1}{2}x}} + ^{-\\frac{1}{2}x} = \\dfrac{2\\frac{1}{2}x}{^{\\frac{1}{2}x}} + ^{-\\frac{1}{2}x} = 2\\left(\\dfrac{\\frac{1}{2}x}{^{\\frac{1}{2}x}}\\right) + ^{- \\frac{1}{2}x}\\)</p> </li> <li> <p>En d\u00e9duire la limite de la fonction \\(f\\) en \\(+\\infty\\).     Interpr\u00e9ter graphiquement ce r\u00e9sultat. <code>\\setbar{1.5}</code></p> Solution <p>On sait que \\(\\displaystyle\\lim_{X\\to +\\infty} \\dfrac{^{X}}{X} = +\\infty\\) donc \\(\\displaystyle\\lim_{X\\to +\\infty} \\dfrac{X}{^{X}} = 0\\).</p> <p>On pose \\(X=\\dfrac{1}{2}x\\); \\(\\displaystyle\\lim_{x\\to +\\infty} X = +\\infty\\). Par le th\u00e9or\u00e8me de croissance compar\u00e9e, on a donc \\(\\displaystyle\\lim_{x\\to +\\infty} \\dfrac{\\frac{1}{2}x}{^{\\frac{1}{2}x}} = 0\\).</p> <p>On sait que \\(\\displaystyle\\lim_{X\\to +\\infty} ^{-X} =0\\).</p> <p>On pose \\(X=\\dfrac{1}{2}x\\); \\(\\displaystyle\\lim_{x\\to +\\infty} X = +\\infty\\). On peut donc dire que \\(\\displaystyle\\lim_{x\\to +\\infty} ^{-\\frac{1}{2}x} = 0\\).\\ Par produit, on peut donc d\u00e9duire que \\(\\displaystyle\\lim_{x\\to +\\infty}f(x) = 0\\).\\ Interpr\u00e9tation graphique : la courbe repr\u00e9sentative de la fonction \\(f\\) admet une asymptote horizontale en \\(+\\infty\\) : la droite d'\u00e9quation \\(y=0\\) (l'axe des abscisses).</p> </li> </ol> </li> <li> <p>\u00c9tudier les variations de la fonction \\(f\\) sur \\(\\R\\) et dresser son     tableau de variations. <code>\\setbar{1.5}</code></p> Solution <p>\\(f=u \\times v\\), avec \\(u=x+1 \\Rightarrow u'=1\\) et \\(v=^{-\\frac{1}{2}x} \\Rightarrow v'=-\\dfrac{1}{2}^{-\\frac{1}{2}x}\\). On obtient : \\(f'(x)=\\left (-\\dfrac{1}{2}x +\\dfrac{1}{2}\\right )^{-\\frac{1}{2}x}\\)</p> <p>Or, pour tout r\u00e9el \\(x\\), \\(^{-\\frac{1}{2}x}&gt;0\\) donc \\(f'(x)\\) est du signe de \\(-\\dfrac{1}{2}x +\\dfrac{1}{2}\\) qui s'annule et change de signe pour \\(x=1\\).</p> <p>On \u00e9tablit le tableau des variations de \\(f\\) sur \\(\\R\\):</p> <p></p> </li> <li> <ol> <li> <p>D\u00e9montrer que l'\u00e9quation \\(f(x) = 0,07\\) admet une unique solution         \\(\\alpha\\) sur l'intervalle \\([1~;~ +\\infty[\\).         <code>\\setbar{0.5}</code></p> Solution <p>Sur \\([1~;~+\\infty[\\), \\(f\\) est continue, strictement d\u00e9croissante. \\(f(1)=2^{-\\frac{1}{2}}&gt;0,07\\) et \\(\\displaystyle\\lim_{x\\to +\\infty}f(x) = 0\\). D'apr\u00e8s le Th\u00e9or\u00e8me de Valeurs Interm\u00e9diaires, l'\u00e9quation \\(f(x)=0,07\\) admet une unique solution \\(\\alpha \\in [1~;~+\\infty[\\).</p> </li> <li> <p>Donner l'arrondi de \\(\\alpha\\) au dixi\u00e8me pr\u00e8s.     <code>\\setbar{0.5}</code></p> Solution <p>A la calculatrice : \\(f(10,13) \\approx 0,0702\\) et \\(f(10,14) \\approx 0,0699\\). Donc \\(\\alpha \\approx 10,1\\).</p> </li> </ol> </li> <li> <p>Etudier la convexit\u00e9 de la fonction \\(f\\) et donner les coordonn\u00e9es     des \u00e9ventuels points d'inflexion. <code>\\setbar{2}</code></p> Solution <p>\\(f'=u \\times v\\), avec \\(u=-\\dfrac{1}{2}x +\\dfrac{1}{2} \\Rightarrow u'=-\\dfrac{1}{2}\\) et \\(v==^{-\\frac{1}{2}x} \\Rightarrow v'=-\\dfrac{1}{2}^{-\\frac{1}{2}x}\\).\\ On obtient : \\(f''(x)=\\left (\\dfrac{1}{4}x- \\dfrac{3}{4}\\right )^{-\\frac{1}{2}x} = \\frac{1}{4} ^{-\\frac{1}{2}x} (x-3)\\).\\ Pour tout r\u00e9el \\(x\\), \\(\\frac{1}{4} ^{-\\frac{1}{2}x}&gt;0\\), donc \\(f''(x)\\) est du signe de \\(x-3\\).</p> <ul> <li> <p>Pour tout r\u00e9el \\(x \\leq 3\\), \\(f''(x) \\leq 0\\), donc \\(f\\) est concave   sur \\(]-\\infty ; 3]\\).</p> </li> <li> <p>Pour tout r\u00e9el \\(x \\geq 3\\), \\(f''(x) \\geq 0\\), donc \\(f\\) est convexe   sur \\([3;+\\infty[\\)</p> </li> </ul> <p>La fonction change de convexit\u00e9 en \\(3\\), la courbe repr\u00e9sentative de la fonction \\(f\\) admet donc un point d'inflexion dont les coordonn\u00e9es sont \\(( 3 ; f(3))\\), soit \\(\\left(3~;~4e^{-\\frac{3}{2}}\\right)\\).</p> </li> </ol> <p>:::</p>"},{"location":"maths/expo-premiere/","title":"Exponentielle - premi\u00e8re","text":""},{"location":"maths/expo-premiere/#generalites-sur-la-fonction-exponentielle","title":"G\u00e9n\u00e9ralit\u00e9s sur la fonction exponentielle","text":""},{"location":"maths/expo-premiere/#definition","title":"D\u00e9finition","text":"<p>Th\u00e9or\u00e8me</p> <p>Il existe une unique fonction \\(f\\) d\u00e9finie et d\u00e9rivable sur \\(\\mathbb{R}\\) v\u00e9rifiant, pour tout nombre r\u00e9el \\(x\\),:</p> <p>\\(\\boxed{f'(x)=f(x)}\\) et \\(\\boxed{f(0)=1}\\).</p> <p>Cette fonction \\(f\\) v\u00e9rifiant \\(f'=f\\) et \\(f(0)=1\\) est appel\u00e9e fonction exponentielle.</p> <p>La fonction exponentielle est la fonction, not\u00e9e \\(exp\\), d\u00e9finie et d\u00e9rivable sur \\(\\mathbb{R}\\) telle que:</p> <p>\\(\\boxed{exp(0)=1}\\) et \\(\\boxed{exp'=exp}\\)</p>"},{"location":"maths/expo-premiere/#proprietes-algebriques","title":"Propri\u00e9t\u00e9s alg\u00e9briques","text":"<p>Th\u00e9or\u00e8me</p> <p>Pour tous nombres r\u00e9els \\(x\\) et \\(y\\), \\(\\boxed{exp(x+y)=exp(x) \\times exp(y)}\\).</p> <p>Cette relation s'appelle relation fonctionnelle.</p> <p>Autrement dit: l'exponentielle d'une somme de deux nombres est le produit de l'exponentielle de chacun de ces nombres .</p> <p>Remarque</p> <p>Cette formule permet de transformer les sommes en produits et r\u00e9ciproquement.</p> <p>Propri\u00e9t\u00e9</p> <p>Pour tous r\u00e9els \\(x\\) et \\(y\\), on a :</p> <ul> <li> <p>\\(exp(-x) \\times exp(x)=1 \\iff \\boxed{exp(-x)=\\dfrac{1}{exp(x)}}\\)</p> </li> <li> <p>\\(\\boxed{exp(x-y)=\\dfrac{exp(x)}{exp(y)}}\\)</p> </li> <li> <p>\\(\\boxed{(exp(x))^n=exp(nx)}\\)</p> </li> </ul> <p>Exemple</p> <p>\\(\\left(\\exp(1)-\\exp(-1)\\right)^2=(\\exp(1))^2-2\\exp(1)\\exp(-1)+(\\exp(-1))^2\\)</p> <p>\\(=\\!\\exp(1\\!\\times\\!2)\\!-\\!2\\exp(1\\!-\\!1)\\!+\\!\\exp(-1\\!\\times\\!2)\\)</p> <p>\\(\\!=\\!\\exp(2)\\!-\\!2\\exp(0)\\!+\\!\\exp(-2)\\!=\\!\\exp(2)\\!-\\!2\\!+\\!\\exp(-2)\\).</p>"},{"location":"maths/expo-premiere/#notation-puissance","title":"Notation puissance","text":"<p>Toutes ces propri\u00e9t\u00e9s rappellent celles des puissances, en effet, on rappelle que :</p> <ul> <li> <p>\\(a^n \\times a^m = a^{n+m}\\)</p> </li> <li> <p>\\((a^n)^m=a^{nm}\\)</p> </li> <li> <p>\\(\\dfrac{a^n}{a^m}=a^{n-m}\\)</p> </li> <li> <p>\\(a^0=1\\) et \\(a^1=a\\)</p> </li> </ul> <p>Les propri\u00e9t\u00e9s de la fonction \\(exp\\) \u00e9tant ressemblantes, on d\u00e9cide de noter la fonction exponentielle de fa\u00e7on plus simple :</p> <p>\\(exp(x)=e^x\\) pour tout \\(x\\)</p> <p>On \u00e9crit alors les propri\u00e9t\u00e9s alg\u00e9briques pr\u00e9c\u00e9dentes de la fa\u00e7on suivante :</p> <ul> <li> <p>\\(e^0=1\\) et \\(e^1=e\\)</p> </li> <li> <p>\\(e^{x+y}=e^x \\times e^y\\)</p> </li> <li> <p>\\((e^x)^n=e^{nx}\\), avec \\(n \\in \\mathbb{N}\\)</p> </li> <li> <p>\\(\\dfrac{e^x}{e^y}=e^{x-y}\\)</p> </li> </ul> <p>Remarque : Le nombre \\(e\\)</p> <p>Le nombre \\(e^1\\) est not\u00e9 \\(e\\). Une valeur approch\u00e9e de ce nombre au milli\u00e8me est \\(2,718\\).</p> <p>Exercice d'application 1</p> <p>Simplifier les \u00e9critures suivantes</p> <p>1. \\(A=\\dfrac{e^{3x} \\times (e^x)^5}{e^{x-2}}\\)</p> <p>2. \\(B=\\dfrac{e \\times e^{2x-1}}{2e^{-x+2}}\\)</p> <p>Exercice d'application 2</p> <p>D\u00e9montrer que pour tout \\(x \\in \\mathbb{R}\\), on a: \\(\\dfrac{1}{1+e^{-x}}=\\dfrac{e^x}{e^x+1}\\)</p>"},{"location":"maths/expo-premiere/#lien-avec-les-suites-geometriques","title":"Lien avec les suites g\u00e9om\u00e9triques","text":"<p>De la propri\u00e9t\u00e9 : \\((e^x)^n=e^{nx}\\), avec \\(n \\in \\mathbb{N}\\), on en d\u00e9duit que :</p> <p>Soit \\(a\\) un r\u00e9el et \\((u_n)\\) la suite de terme g\u00e9n\u00e9ral \\(e^{na}\\) o\u00f9 \\(n\\) est un entier naturel.</p> <p>La suite \\((u_n)\\) est une suite g\u00e9om\u00e9trique de premier terme \\(u_0=1\\) et de raison \\(e^a\\).</p> <p>Exercice d'application</p> <p>Soit \\((u_n)\\) la suite d\u00e9finie par \\(u_n=10 \\times e^{3n}\\) pour tout \\(n \\in \\mathbb{N}\\).</p> <p>1. Calculer \\(u_0\\)</p> <p>2. Montrer que \\((u_n)\\) est une suite g\u00e9om\u00e9trique dont on donnera le premier terme et la raison.</p> <p>3. Justifier que la suite est croissante puis d\u00e9terminer \u00e0 partir de quel rang on a : \\(u_n&gt;10^6\\)</p> <p>On peut aussi \u00e9crire un algorithme de seuil</p> <p>A connaitre</p> <pre><code>#Algorithme de seuil\nfrom math import *\n#initialisation\nn = 0\nu = 10\n#boucle pour calculer les termes de la suite jusqu'\u00e0 ce que le seuil soit franchi\nwhile u&lt;10**6:\nn = n+1\nu = 10*exp(3*n)\nprint(n)\n</code></pre>"},{"location":"maths/expo-premiere/#etude-de-la-fonction-exponentielle","title":"\u00c9tude de la fonction exponentielle","text":""},{"location":"maths/expo-premiere/#la-fonction-exponentielle","title":"La fonction exponentielle","text":"<p>Propri\u00e9t\u00e9</p> <p>Pour tout nombre r\u00e9el \\(x\\), \\(\\boxed{e^x&gt;0}\\)</p> <p>Propri\u00e9t\u00e9</p> <p>La fonction exponentielle est d\u00e9rivable sur \\(\\mathbb{R}\\) et \\(\\boxed{(e^x)'=e^x}\\).</p> <p>La fonction exponentielle est strictement croissante sur \\(\\mathbb{R}\\)</p> <p>Illustration graphique et tableau de variations</p> <p></p> <p></p> <p>Remarques</p> <p>La droite d'\u00e9quation \\(y=x+1\\) est tangente \u00e0 la courbe repr\u00e9sentative au point d'abscisse 0.</p> <p>En effet l'\u00e9quation de la tangente \u00e0 la courbe au point \\(0\\) est :</p> <p>\\(y=f'(0)(x-0)+f(0) \\iff y=e^0 \\times x+e^0=1 \\times x + 1\\iff y=x+1\\)</p>"},{"location":"maths/expo-premiere/#resolution-dequations-et-dinequations","title":"R\u00e9solution d'\u00e9quations et d'in\u00e9quations","text":"<p>De la stricte croissance de la fonction exponentielle, on d\u00e9duit que :</p> <p>Propri\u00e9t\u00e9</p> <p>Pour tous r\u00e9els \\(a\\) et \\(b\\), on a:</p> <ul> <li> <p>\\(\\boxed{e^a = e^b \\iff a=b}\\)</p> </li> <li> <p>\\(\\boxed{e^a \\leq e^b \\iff a \\leq b}\\)</p> </li> </ul> <p>METHODE : savoir r\u00e9soudre des \u00e9quations et des in\u00e9quations avec des exponentielles</p> <p>Pour r\u00e9soudre une \u00e9quation d'inconnue \\(x\\) r\u00e9el comportant des exponentielles :</p> <p>On essaye selon le cas de se ramener \u00e0 :</p> <p>Une \u00e9quation de la forme \\(e^{u(x)} = e^{v(x)}\\) o\u00f9 \\(u\\) et \\(v\\) sont deux fonctions.</p> <p>Alors, \\(e^{u(x)} = e^{v(x)} \\Leftrightarrow u(x)=v(x)\\) et, \u00e9ventuellement, \\(u(x)=v(x) \\Leftrightarrow u(x)-v(x)=0\\).</p> <p>La m\u00e9thode est analogue pour r\u00e9soudre une in\u00e9quation.</p> <p>Exercice d'application:</p> <p>D\u00e9terminer l'ensemble \\(\\mathcal{S}\\) des solutions des \u00e9quations et in\u00e9quations.</p> <ol> <li>\\(e^{x^2+2x-3} = 1\\)</li> <li>\\(2e^{2x}-e^x-1=0\\)</li> <li>\\(e^{\\sqrt{3x-5}} &lt;e\\)</li> <li>\\(\\dfrac{e^{2x+1}}{^{x-4}}\\geqslant e^{x^2-1}\\)</li> </ol>"},{"location":"maths/expo-premiere/#fonctions-definies-par-fxe-kx-et-fxekx","title":"Fonctions d\u00e9finies par \\(f(x)=e^{-kx}\\) et \\(f(x)=e^{kx}\\)","text":"<p>De fa\u00e7on g\u00e9n\u00e9rale, les fonctions d\u00e9finies par \\(f(x)=e^{-ax+b}\\) et \\(f(x)=e^{ax+b}\\), o\u00f9 \\(a\\) et \\(b\\) sont des entiers relatifs, sont appel\u00e9es fonctions exponentielles.</p> <p>Propri\u00e9t\u00e9</p> <p>Pour tous r\u00e9els \\(a\\) et \\(b\\) fix\u00e9s,</p> <ul> <li> <p>la fonction \\(f\\) d\u00e9finie sur \\(\\mathbb{R}\\) par \\(f(x)=e^{ax+b}\\) est d\u00e9rivable     sur \\(\\mathbb{R}\\) et, pour tout r\u00e9el \\(x\\), \\(f'(x)=ae^{ax+b}\\).</p> </li> <li> <p>la fonction \\(f\\) d\u00e9finie sur \\(\\mathbb{R}\\) par \\(f(x)=e^{-ax+b}\\) est d\u00e9rivable     sur \\(\\mathbb{R}\\) et, pour tout r\u00e9el \\(x\\), \\(f'(x)=-ae^{-ax+b}\\).</p> </li> </ul> <p>Exemple</p> <p>La fonction \\(h\\) d\u00e9finie sur \\(\\mathbb{R}\\) par \\(h(x)=-3e^{2x-5}+1\\) est d\u00e9rivable sur \\(\\mathbb{R}\\) et, pour tout r\u00e9el \\(x\\), \\(h'(x)=2 \\times (-3e^{2x-5})=-6e^{2x-5}\\).</p> <p>Pour tout r\u00e9el \\(x\\) , \\(e^{2x-5}&gt;0\\), donc on en d\u00e9duit que \\(h'(x)&lt;0\\).</p> <p>Par cons\u00e9quent, \\(h\\) est strictement d\u00e9croissante sur \\(\\mathbb{R}\\).</p> <p>Exercice d'application :</p> <p>\u00c9tudier les variations des fonctions \\(f\\) et \\(g\\) d\u00e9finies sur \\(\\mathbb{R}\\) par :</p> <ul> <li> <p>\\(f(x)=e^{x+1}+x\\)</p> </li> <li> <p>\\(g(x)=e^{-2x+6}\\)</p> </li> </ul>"},{"location":"ressources/conda/","title":"Python - Conda, Miniconda, Anaconda","text":"<p>Documentation de r\u00e9f\u00e9rence: https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#</p>"},{"location":"ressources/conda/#prerequis","title":"Pr\u00e9requis","text":"<p>On suppose ici que Anaconda ou Miniconda est install\u00e9.</p> <ul> <li>Anaconda</li> <li>Miniconda</li> </ul>"},{"location":"ressources/conda/#lister-tous-les-environnments-disponibles","title":"Lister tous les environnments disponibles","text":"<pre><code>conda env list\n</code></pre>"},{"location":"ressources/conda/#creer-un-nouvel-environnement","title":"Cr\u00e9er un nouvel environnement","text":"<pre><code>conda create --name envname\n</code></pre> <p>Puis pour l'activer:</p> <pre><code>conda activate envname\n</code></pre>"},{"location":"ressources/conda/#creer-un-nouvel-environnement-dans-un-dossier","title":"Cr\u00e9er un nouvel environnement dans un dossier","text":"<pre><code>conda create --prefix ./envname\n</code></pre> <p>Puis pour l'activer:</p> <pre><code>conda activate ./envname\n</code></pre>"},{"location":"ressources/conda/#supprimer-un-environnement-et-ses-dependances","title":"Supprimer un environnement et ses d\u00e9pendances","text":"<pre><code>conda remove --name envname --all\n</code></pre>"},{"location":"ressources/conda/#cloner-un-environnement-existant","title":"Cloner un environnement existant","text":"<pre><code>conda create --name clone_envname --clone envname\n</code></pre>"},{"location":"ressources/conda/#exporter-un-environnement","title":"Exporter un environnement","text":"<p>Cr\u00e9er un fichier <code>environment.yml</code>avec conda:</p> <pre><code>conda env export &gt; environment.yml\n</code></pre>"},{"location":"ressources/conda/#importer-un-environnement","title":"Importer un environnement","text":"<pre><code>conda env create -f environment.yml\n</code></pre> <p>Avec ses propres packages:</p> <pre><code>conda env create -n [name of the environment] [python version] [packages]\n</code></pre> <p>Exemple:</p> <pre><code>conda create --prefix ./envs jupyterlab=3.2 matplotlib=3.5 numpy=1.21\n</code></pre> <p>Avec un fichier</p> <pre><code>conda env create -n [name of the environment] -f [file]\n</code></pre>"},{"location":"ressources/types/","title":"Introduction aux Types Python","text":"<p>Python dans ses versions 3.6 et sup\u00e9rieures supporte des annotations de type (ou type hints) optionnelles.</p> <p>Ces annotations de type constituent une syntaxe sp\u00e9ciale qui permet de d\u00e9clarer le type d'une variable.</p> <p>En d\u00e9clarant les types de vos variables, cela permet aux diff\u00e9rents outils comme les \u00e9diteurs de texte d'offrir un meilleur support.</p> <p>Ce chapitre n'est qu'un tutoriel rapide / rappel sur les annotations de type Python.</p> <p>Info</p> <p>Ces notations ne sont pas sp\u00e9cifiquement au programme de sp\u00e9cialit\u00e9 NSI, mais elles sont tr\u00e8s pratiques !</p>"},{"location":"ressources/types/#motivations","title":"Motivations","text":"<p>Prenons un exemple simple :</p> <pre><code>def get_full_name(first_name, last_name):\nfull_name = first_name.title() + \" \" + last_name.title()\nreturn full_name\nprint(get_full_name(\"john\", \"doe\"))\n</code></pre> <p>Ex\u00e9cuter ce programe affiche :</p> <pre><code>John Doe\n</code></pre> <p>La fonction :</p> <ul> <li>Prend un <code>first_name</code> et un <code>last_name</code>.</li> <li>Convertit la premi\u00e8re lettre de chaque param\u00e8tre en majuscules gr\u00e2ce \u00e0 <code>title()</code>.</li> <li>Concat\u00e8ne les r\u00e9sultats avec un espace entre les deux.</li> </ul> <pre><code>def get_full_name(first_name, last_name):\nfull_name = first_name.title() + \" \" + last_name.title()\nreturn full_name\nprint(get_full_name(\"john\", \"doe\"))\n</code></pre>"},{"location":"ressources/types/#limitations","title":"Limitations","text":"<p>C'est un programme tr\u00e8s simple.</p> <p>Mais maintenant imaginez que vous l'\u00e9criviez de z\u00e9ro.</p> <p>\u00c0 un certain point vous auriez commenc\u00e9 la d\u00e9finition de la fonction, vous aviez les param\u00e8tres pr\u00eats.</p> <p>Mais vous aviez besoin de \"cette m\u00e9thode qui convertit la premi\u00e8re lettre en majuscule\".</p> <p>\u00c9tait-ce <code>upper</code> ? <code>uppercase</code> ? <code>first_uppercase</code> ? <code>capitalize</code> ?</p> <p>Vous essayez donc d'utiliser le vieil ami du programmeur, l'auto-compl\u00e9tion de l'\u00e9diteur.</p> <p>Vous \u00e9crivez le premier param\u00e8tre, <code>first_name</code>, puis un point (<code>.</code>) et appuyez sur <code>Ctrl+Espace</code> pour d\u00e9clencher l'auto-compl\u00e9tion.</p> <p>Mais malheureusement, rien d'utile n'en r\u00e9sulte :</p> <p></p>"},{"location":"ressources/types/#ajouter-des-types","title":"Ajouter des types","text":"<p>Modifions une seule ligne de la version pr\u00e9c\u00e9dente.</p> <p>Nous allons changer seulement cet extrait, les param\u00e8tres de la fonction, de :</p> <pre><code>    first_name, last_name\n</code></pre> <p>\u00e0 :</p> <pre><code>    first_name: str, last_name: str\n</code></pre> <p>C'est tout.</p> <p>Ce sont des annotations de types :</p> <pre><code>def get_full_name(first_name: str, last_name: str):\nfull_name = first_name.title() + \" \" + last_name.title()\nreturn full_name\nprint(get_full_name(\"john\", \"doe\"))\n</code></pre> <p>\u00c0 ne pas confondre avec la d\u00e9claration de valeurs par d\u00e9faut comme ici :</p> <pre><code>    first_name=\"john\", last_name=\"doe\"\n</code></pre> <p>C'est une chose diff\u00e9rente.</p> <p>On utilise un deux-points (<code>:</code>), et pas un \u00e9gal (<code>=</code>).</p> <p>Et ajouter des annotations de types ne cr\u00e9e normalement pas de diff\u00e9rence avec le comportement qui aurait eu lieu si elles n'\u00e9taient pas l\u00e0.</p> <p>Maintenant, imaginez que vous \u00eates en train de cr\u00e9er cette fonction, mais avec des annotations de type cette fois.</p> <p>Au m\u00eame moment que durant l'exemple pr\u00e9c\u00e9dent, vous essayez de d\u00e9clencher l'auto-compl\u00e9tion et vous voyez :</p> <p></p> <p>Vous pouvez donc d\u00e9rouler les options jusqu'\u00e0 trouver la m\u00e9thode \u00e0 laquelle vous pensiez.</p> <p></p>"},{"location":"ressources/types/#plus-de-motivations","title":"Plus de motivations","text":"<p>Cette fonction poss\u00e8de d\u00e9j\u00e0 des annotations de type :</p> <pre><code>def get_name_with_age(name: str, age: int):\nname_with_age = name + \" is this old: \" + age\nreturn name_with_age\n</code></pre> <p>Comme l'\u00e9diteur conna\u00eet le type des variables, vous n'avez pas seulement l'auto-compl\u00e9tion, mais aussi de la d\u00e9tection d'erreurs :</p> <p></p> <p>Maintenant que vous avez connaissance du probl\u00e8me, convertissez <code>age</code> en chaine de caract\u00e8res gr\u00e2ce \u00e0 <code>str(age)</code> :</p> <pre><code>def get_name_with_age(name: str, age: int):\nname_with_age = name + \" is this old: \" + str(age)\nreturn name_with_age\n</code></pre>"},{"location":"ressources/types/#declarer-des-types","title":"D\u00e9clarer des types","text":"<p>Vous venez de voir l\u00e0 o\u00f9 les types sont g\u00e9n\u00e9ralement d\u00e9clar\u00e9s : dans les param\u00e8tres de fonctions.</p>"},{"location":"ressources/types/#types-simples","title":"Types simples","text":"<p>Vous pouvez d\u00e9clarer tous les types de Python, pas seulement <code>str</code>.</p> <p>Comme par exemple :</p> <ul> <li><code>int</code></li> <li><code>float</code></li> <li><code>bool</code></li> <li><code>bytes</code></li> </ul> <pre><code>def get_items(item_a: str, item_b: int, item_c: float, item_d: bool, item_e: bytes):\nreturn item_a, item_b, item_c, item_d, item_d, item_e\n</code></pre>"},{"location":"ressources/types/#types-generiques-avec-des-parametres-de-types","title":"Types g\u00e9n\u00e9riques avec des param\u00e8tres de types","text":"<p>Il existe certaines structures de donn\u00e9es qui contiennent d'autres valeurs, comme <code>dict</code>, <code>list</code>, <code>set</code> et <code>tuple</code>. Et les valeurs internes peuvent elles aussi avoir leurs propres types.</p> <p>Pour d\u00e9clarer ces types et les types internes, on utilise le module standard de Python <code>typing</code>.</p> <p>Il existe sp\u00e9cialement pour supporter ces annotations de types.</p>"},{"location":"ressources/types/#list","title":"<code>List</code>","text":"<p>Par exemple, d\u00e9finissons une variable comme <code>list</code> de <code>str</code>.</p> <p>Importez <code>List</code> (avec un <code>L</code> majuscule) depuis <code>typing</code>.</p> <pre><code>from typing import List\ndef process_items(items: List[str]):\nfor item in items:\nprint(item)\n</code></pre> <p>D\u00e9clarez la variable, en utilisant la syntaxe des deux-points (<code>:</code>).</p> <p>Et comme type, mettez <code>List</code>.</p> <p>Les listes \u00e9tant un type contenant des types internes, mettez ces derniers entre crochets (<code>[</code>, <code>]</code>) :</p> <pre><code>from typing import List\ndef process_items(items: List[str]):\nfor item in items:\nprint(item)\n</code></pre> <p>Astuce</p> <p>Ces types internes entre crochets sont appel\u00e9s des \"param\u00e8tres de type\".</p> <p>Ici, <code>str</code> est un param\u00e8tre de type pass\u00e9 \u00e0 <code>List</code>.</p> <p>Ce qui signifie : \"la variable <code>items</code> est une <code>list</code>, et chacun de ses \u00e9l\u00e9ments a pour type <code>str</code>.</p> <p>En faisant cela, votre \u00e9diteur pourra vous aider, m\u00eame pendant que vous traitez des \u00e9l\u00e9ments de la liste.</p> <p></p> <p>Sans types, c'est presque impossible \u00e0 r\u00e9aliser.</p> <p>Vous remarquerez que la variable <code>item</code> n'est qu'un des \u00e9l\u00e9ments de la list <code>items</code>.</p> <p>Et pourtant, l'\u00e9diteur sait qu'elle est de type <code>str</code> et pourra donc vous aider \u00e0 l'utiliser.</p>"},{"location":"ressources/types/#tuple-et-set","title":"<code>Tuple</code> et <code>Set</code>","text":"<p>C'est le m\u00eame fonctionnement pour d\u00e9clarer un <code>tuple</code> ou un <code>set</code> :</p> <pre><code>from typing import Set, Tuple\ndef process_items(items_t: Tuple[int, int, str], items_s: Set[bytes]):\nreturn items_t, items_s\n</code></pre> <p>Dans cet exemple :</p> <ul> <li>La variable <code>items_t</code> est un <code>tuple</code> avec 3 \u00e9l\u00e9ments, un <code>int</code>, un deuxi\u00e8me <code>int</code>, et un <code>str</code>.</li> <li>La variable <code>items_s</code> est un <code>set</code>, et chacun de ses \u00e9l\u00e9ments est de type <code>bytes</code>.</li> </ul>"},{"location":"ressources/types/#dict","title":"<code>Dict</code>","text":"<p>Pour d\u00e9finir un <code>dict</code>, il faut lui passer 2 param\u00e8tres, s\u00e9par\u00e9s par une virgule (<code>,</code>).</p> <p>Le premier param\u00e8tre de type est pour les cl\u00e9s et le second pour les valeurs du dictionnaire (<code>dict</code>).</p> <pre><code>from typing import Dict\ndef process_items(prices: Dict[str, float]):\nfor item_name, item_price in prices.items():\nprint(item_name)\nprint(item_price)\n</code></pre> <p>Dans cet exemple :</p> <ul> <li>La variable <code>prices</code> est de type <code>dict</code> :</li> <li>Les cl\u00e9s de ce dictionnaire sont de type <code>str</code>.</li> <li>Les valeurs de ce dictionnaire sont de type <code>float</code>.</li> </ul>"},{"location":"ressources/types/#optional","title":"<code>Optional</code>","text":"<p>Vous pouvez aussi utiliser <code>Optional</code> pour d\u00e9clarer qu'une variable a un type, comme <code>str</code> mais qu'il est \"optionnel\" signifiant qu'il pourrait aussi \u00eatre <code>None</code>.</p> <pre><code>from typing import Optional\ndef say_hi(name: Optional[str] = None):\nif name is not None:\nprint(f\"Hey {name}!\")\nelse:\nprint(\"Hello World\")\n</code></pre> <p>Utiliser <code>Optional[str]</code> plut\u00f4t que <code>str</code> permettra \u00e0 l'\u00e9diteur de vous aider \u00e0 d\u00e9tecter les erreurs o\u00f9 vous supposeriez qu'une valeur est toujours de type <code>str</code>, alors qu'elle pourrait aussi \u00eatre <code>None</code>.</p>"},{"location":"ressources/types/#types-generiques","title":"Types g\u00e9n\u00e9riques","text":"<p>Les types qui peuvent contenir des param\u00e8tres de types entre crochets, comme :</p> <ul> <li><code>List</code></li> <li><code>Tuple</code></li> <li><code>Set</code></li> <li><code>Dict</code></li> <li><code>Optional</code></li> <li>...et d'autres.</li> </ul> <p>sont appel\u00e9s des types g\u00e9n\u00e9riques ou Generics.</p>"},{"location":"ressources/types/#classes-en-tant-que-types","title":"Classes en tant que types","text":"<p>Vous pouvez aussi d\u00e9clarer une classe comme type d'une variable.</p> <p>Disons que vous avez une classe <code>Person</code>, avec une variable <code>name</code> :</p> <pre><code>class Person:\ndef __init__(self, name: str):\nself.name = name\ndef get_person_name(one_person: Person):\nreturn one_person.name\n</code></pre> <p>Vous pouvez ensuite d\u00e9clarer une variable de type <code>Person</code> :</p> <pre><code>class Person:\ndef __init__(self, name: str):\nself.name = name\ndef get_person_name(one_person: Person):\nreturn one_person.name\n</code></pre> <p>Et vous aurez acc\u00e8s, encore une fois, au support complet offert par l'\u00e9diteur :</p> <p></p>"},{"location":"ressources/vscode/","title":"Visual Studio Code","text":"<p>A retenir<p>Visual Studio Code, c'est le couteau suisse du programmeur !</p> </p>"},{"location":"ressources/vscode/#telechargement","title":"T\u00e9l\u00e9chargement","text":"<p>https://code.visualstudio.com/</p> En ligne de commande WindowsmacOs <p>Si vous \u00eates sous Windows 11 ou une version r\u00e9cente de Windows 10, vous avez les winget tools d'install\u00e9s</p> <pre><code>winget install Microsoft.VisualStudioCode --override '/SILENT /mergetasks=\"!runcode,addcontextmenufiles,addcontextmenufolders\"'\n</code></pre> <pre><code>brew install --cask visual-studio-code\n</code></pre>"},{"location":"ressources/vscode/#extensions-utiles","title":"Extensions utiles","text":"<ol> <li>Material Icon Theme</li> <li> <p>Latex Workshop:</p> <ul> <li>propos\u00e9e \u00e0 l'installation si vous ouvrez un fichier <code>.tex</code></li> <li>voir plus bas pour la configuration.</li> </ul> </li> </ol>"},{"location":"ressources/vscode/#utiliser-le-formateur-python-black-avec-visual-studio-code","title":"Utiliser le formateur Python Black avec Visual Studio Code","text":"<p>Black est \"le formateur de code Python sans compromis\".</p> <p>Il peut \u00eatre configur\u00e9 pour formater automatiquement votre code chaque fois que vous enregistrez un fichier dans VSCode.</p> <p>Installez Black dans votre environnement:</p> condapippoetry <pre><code>conda install -c conda-forge black jupyter-black\n</code></pre> <pre><code>pip install black jupyter-black\n</code></pre> <pre><code>poetry add black jupyter-black -D\n</code></pre> <ol> <li> <p>Dans les pr\u00e9f\u00e9rences de VS Code, recherchez \"python formatting provider\" puis s\u00e9lectionnez \"black\".</p> </li> <li> <p>Cherchez ensuite \"format on save\" et cochez la case \"Editor: Format on Save\"</p> </li> </ol> <p>Exemple</p> Avant formattageApr\u00e8s formattage <pre><code>a=2\na=5+3\n</code></pre> <pre><code>a = 2\na = 5 + 3\n</code></pre>"},{"location":"ressources/vscode/#faire-du-latex-avec-visual-studio-code","title":"Faire du Latex avec Visual Studio Code","text":""},{"location":"ressources/vscode/#preparation-de-lenvironnement-de-travail","title":"Pr\u00e9paration de l'environnement de travail","text":"macOsWindows <p>Sur Mac:</p> <pre><code>sudo cpan -i YAML::Tiny File::HomeDir Unicode::GCString\n</code></pre> <p>https://tex.stackexchange.com/questions/390433/how-can-i-install-latexindent-on-macos</p> <p>Si vous \u00eates sous Windows 11 ou une version r\u00e9cente de Windows 10, vous avez les winget tools d'install\u00e9s</p> <ol> <li>Il faut avoir Perl d'install\u00e9.</li> </ol> <pre><code>winget install --id StrawberryPerl.StrawberryPerl -e --source winget\n</code></pre> <ol> <li> <p>R\u00e9gler les variables d'environnement:</p> <ol> <li>Presser Windows+R puis taper le texte <code>sysdm.cpl</code></li> <li>Aller \u00e0 l'onglet \"Param\u00e8tres syst\u00e8mes avanc\u00e9s\" puis \"Variables d'environnement\"</li> <li>Dans \"Variables d'environnement pour ...\", cliquez sur \"Nouvelles...\"</li> <li>\"Nom de la variable\": <code>Perl</code> et \"Valeur de la variable\": <code>C:\\Strawberry\\perl\\bin</code></li> <li>Testez en tapant <code>cpan -v</code>. Si vous avez un message d'erreur du type \"cpan : Le terme \u00abcpan\u00bb n'est pas reconnu comme nom d'applet de commande,\", vous devrez peut-\u00eatre red\u00e9marrer l'ordinateur.</li> </ol> </li> <li> <p>Ensuite:</p> <pre><code>miktex packages install latexmk latexindent\n</code></pre> <p>Ou bien, si vous avez une installation en administreur:</p> <pre><code>miktex --admin packages install latexmk latexindent\n</code></pre> </li> <li> <p>Pour terminer:</p> <pre><code>cpan -i YAML::Tiny File::HomeDir Unicode::GCString\n</code></pre> </li> </ol>"},{"location":"ressources/vscode/#installer-et-configurer-latex-workshop","title":"Installer et configurer LaTeX Workshop","text":"<p>Il suffit d'ouvrir un fichier \".tex\" pour que VS Code propose d'installer l'extension LaTeX Workshop</p>"},{"location":"ressources/vscode/#pour-compiler-en-xelatex-ou-en-lualatex","title":"Pour compiler en xelatex ou en lualatex:","text":"<p>Dans les pr\u00e9f\u00e9rences, rechercher <code>latex-workshop.latex.tools</code></p> <p>Puis modifier \u00e0 votre convenance, par exemple:</p> <pre><code>\"latex-workshop.latex.tools\": [\n{\n\"name\": \"latexmk\",\n\"command\": \"latexmk\",\n\"args\": [\n\"-lualatex\",\n\"-synctex=1\",\n\"-interaction=nonstopmode\",\n\"-file-line-error\",\n\"-outdir=%OUTDIR%\",\n\"%DOC%\"\n],\n</code></pre>"},{"location":"ressources/vscode/#pour-ajouter-des-extension-pour-cleaner-les-fichiers-auxiliiares","title":"Pour ajouter des extension pour \"cleaner\" les fichiers auxiliiares","text":"<p>Rechercher <code>latex-workshop.latex.clean.fileTypes</code></p> <p>Puis ajouter ce que vous voulez, par exemple <code>*.cor</code></p>"},{"location":"ressources/vscode/#installer-git","title":"Installer Git","text":"WindowsmacOs <p>Si vous \u00eates sous Windows 11 ou une version r\u00e9cente de Windows 10, vous avez les winget tools d'install\u00e9s</p> <pre><code>winget install --id Git.Git -e --source winget\n</code></pre> <p>Apple fournit un packet de Git avec Xcode.</p>"},{"location":"ressources/mkdocs/admonitions/","title":"Admonitions avec Mkdocs Material","text":""},{"location":"ressources/mkdocs/admonitions/#admonitions-de-base","title":"Admonitions de base","text":"<code>note</code> <p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>abstract</code> <p>Abstract</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>info</code> <p>Info</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>tip</code> <p>Tip</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>success</code> <p>Success</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>question</code> <p>Question</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>warning</code> <p>Warning</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>failure</code> <p>Failure</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>danger</code> <p>Danger</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>bug</code> <p>Bug</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>example</code> <p>Example</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <code>quote</code> <p>Quote</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"ressources/mkdocs/admonitions/#admonitions-personnalisees","title":"Admonitions personnalis\u00e9es","text":"<code>savoir</code> <p>Savoir</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Code <p>Cr\u00e9dit: https://ens-fr.gitlab.io/mkdocs/recettes_2/#creer-ses-propres-admonitions</p> <pre><code>@keyframes heart {\n0%,\n40%,\n80%,\n100% {\ntransform: scale(1);\n}\n20%,\n60% {\ntransform: scale(1.1);\n}\n}\n:root {\n--md-admonition-icon--savoir: url('data:image/svg+xml;charset=utf-8,&lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"&gt;&lt;path d=\"M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z\"/&gt;&lt;/svg&gt;');\n}\n.md-typeset .admonition.savoir,\n.md-typeset details.savoir {\nborder-color: rgb(219, 16, 16);\n}\n.md-typeset .savoir &gt; .admonition-title,\n.md-typeset .savoir &gt; summary {\nbackground-color: rgba(185, 27, 101, 0.1);\nborder-color: rgb(219, 16, 16);\n}\n.md-typeset .savoir &gt; .admonition-title::before,\n.md-typeset .savoir &gt; summary::before {\nbackground-color: rgb(219, 16, 16);\nanimation: heart 1000ms infinite;\n-webkit-mask-image: var(--md-admonition-icon--savoir);\nmask-image: var(--md-admonition-icon--savoir);\n}\n</code></pre> <code>interrogation</code> <p>Interrogation</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Code <p>Cr\u00e9dit: https://fabricenativel.github.io</p> <pre><code>:root {\n--md-admonition-icon--interrogation: url('data:image/svg+xml;charset=utf-8,&lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"&gt;&lt;path d=\"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z\"/&gt;&lt;/svg&gt;');\n}\n.md-typeset .admonition.interrogation,\n.md-typeset details.interrogation {\nborder-color: rgb(96, 80, 189);\n}\n.md-typeset .interrogation &gt; .admonition-title,\n.md-typeset .interrogation &gt; summary {\nbackground-color: rgba(96, 80, 189, 0.1);\nborder-color: rgb(96, 80, 189);\n}\n.md-typeset .interrogation &gt; .admonition-title::before,\n.md-typeset .interrogation &gt; summary::before {\nbackground-color: rgb(96, 80, 189);\n-webkit-mask-image: var(--md-admonition-icon--interrogation);\nmask-image: var(--md-admonition-icon--interrogation);\n}\n</code></pre> <code>exercice</code> <p>Exercice</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Code <p>Cr\u00e9dit: https://fabricenativel.github.io</p> <pre><code>:root {\n--md-admonition-icon--exercice: url('data:image/svg+xml;charset=utf-8,&lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"&gt;&lt;path d=\"M17 16.47V7.39l-6 4.54M2.22 9.19a.858.858 0 0 1-.02-1.15l1.2-1.11c.2-.18.69-.26 1.05 0l3.42 2.61 7.93-7.25c.32-.32.87-.45 1.5-.12l4 1.91c.36.21.7.54.7 1.15v13.5c0 .4-.29.83-.6 1l-4.4 2.1c-.32.13-.92.01-1.13-.2l-8.02-7.3-3.4 2.6c-.38.26-.85.19-1.05 0l-1.2-1.1c-.32-.33-.28-.87.05-1.2l3-2.7\"/&gt;&lt;/svg&gt;');\n}\n.md-typeset .admonition.exercice,\n.md-typeset details.exercice {\nborder-color: rgb(21, 59, 6);\n}\n.md-typeset .exercice &gt; .admonition-title,\n.md-typeset .exercice &gt; summary {\nbackground-color: rgb(21, 59, 6, 0.15);\nborder-color: rgb(21, 59, 6);\n}\n.md-typeset .exercice &gt; .admonition-title::before,\n.md-typeset .exercice &gt; summary::before {\nbackground-color: rgb(21, 59, 6);\n-webkit-mask-image: var(--md-admonition-icon--exercice);\nmask-image: var(--md-admonition-icon--exercice);\n}\n</code></pre> <code>lien</code> <p>Lien</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Code <p>Cr\u00e9dit: https://fabricenativel.github.io</p> <pre><code>:root {\n--md-admonition-icon--lien: url('data:image/svg+xml;charset=utf-8,&lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"&gt;&lt;path d=\"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-88 16H248.029c-21.313 0-32.08 25.861-16.971 40.971l31.984 31.987L67.515 364.485c-4.686 4.686-4.686 12.284 0 16.971l31.029 31.029c4.687 4.686 12.285 4.686 16.971 0l195.526-195.526 31.988 31.991C358.058 263.977 384 253.425 384 231.979V120c0-13.255-10.745-24-24-24z\"/&gt;&lt;/svg&gt;');\n}\n.md-typeset .admonition.lien,\n.md-typeset details.lien {\nborder-color: rgb(106, 38, 122);\n}\n.md-typeset .lien &gt; .admonition-title,\n.md-typeset .lien &gt; summary {\nbackground-color: rgba(106, 38, 122, 0.1);\nborder-color: rgb(106, 38, 122);\n}\n.md-typeset .lien &gt; .admonition-title::before,\n.md-typeset .rappel &gt; summary::before {\nbackground-color: rgb(106, 38, 122);\n-webkit-mask-image: var(--md-admonition-icon--lien);\nmask-image: var(--md-admonition-icon--lien);\n}\n</code></pre> <code>maison</code> <p>Maison</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Code <p>Cr\u00e9dit: https://fabricenativel.github.io</p> <pre><code>:root {\n--md-admonition-icon--maison: url('data:image/svg+xml;charset=utf-8,&lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"&gt;&lt;path d=\"M280.37 148.26 96 300.11V464a16 16 0 0 0 16 16l112.06-.29a16 16 0 0 0 15.92-16V368a16 16 0 0 1 16-16h64a16 16 0 0 1 16 16v95.64a16 16 0 0 0 16 16.05L464 480a16 16 0 0 0 16-16V300L295.67 148.26a12.19 12.19 0 0 0-15.3 0zM571.6 251.47 488 182.56V44.05a12 12 0 0 0-12-12h-56a12 12 0 0 0-12 12v72.61L318.47 43a48 48 0 0 0-61 0L4.34 251.47a12 12 0 0 0-1.6 16.9l25.5 31A12 12 0 0 0 45.15 301l235.22-193.74a12.19 12.19 0 0 1 15.3 0L530.9 301a12 12 0 0 0 16.9-1.6l25.5-31a12 12 0 0 0-1.7-16.93z\"/&gt;&lt;/svg&gt;');\n}\n.md-typeset .admonition.maison,\n.md-typeset details.maison {\nborder-color: rgb(218, 161, 75);\n}\n.md-typeset .maison &gt; .admonition-title,\n.md-typeset .maison &gt; summary {\nbackground-color: rgba(218, 161, 75, 0.1);\nborder-color: rgb(218, 161, 75);\n}\n.md-typeset .maison &gt; .admonition-title::before,\n.md-typeset .rappel &gt; summary::before {\nbackground-color: rgb(218, 161, 75);\n-webkit-mask-image: var(--md-admonition-icon--maison);\nmask-image: var(--md-admonition-icon--maison);\n}\n</code></pre> <code>rappel</code> <p>Rappel</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Code <p>Cr\u00e9dit: https://fabricenativel.github.io</p> <pre><code>:root {\n--md-admonition-icon--rappel: url('data:image/svg+xml;charset=utf-8,&lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"&gt;&lt;path d=\"M504 255.531c.253 136.64-111.18 248.372-247.82 248.468-59.015.042-113.223-20.53-155.822-54.911-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184 0-101.705-82.311-184-184-184-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784 9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z\"/&gt;&lt;/svg&gt;');\n}\n.md-typeset .admonition.rappel,\n.md-typeset details.rappel {\nborder-color: rgb(96, 96, 96);\n}\n.md-typeset .rappel &gt; .admonition-title,\n.md-typeset .rappel &gt; summary {\nbackground-color: rgba(96, 96, 96, 0.1);\nborder-color: rgb(96, 96, 96);\n}\n.md-typeset .rappel &gt; .admonition-title::before,\n.md-typeset .rappel &gt; summary::before {\nbackground-color: rgb(96, 96, 96);\n-webkit-mask-image: var(--md-admonition-icon--rappel);\nmask-image: var(--md-admonition-icon--rappel);\n}\n</code></pre> <code>retenir</code> <p>Retenir</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Code <p>Cr\u00e9dit: https://fabricenativel.github.io</p> <pre><code>:root {\n--md-admonition-icon--retenir: url('data:image/svg+xml;charset=utf-8,&lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"&gt;&lt;path d=\"M5 3a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V5.5L18.5 3H17v6a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1V3H5m7 1v5h3V4h-3m-5 8h10a1 1 0 0 1 1 1v6H6v-6a1 1 0 0 1 1-1z\"/&gt;&lt;/svg&gt;');\n}\n.md-typeset .admonition.retenir,\n.md-typeset details.retenir {\nborder-color: rgb(155, 34, 18);\n}\n.md-typeset .retenir &gt; .admonition-title,\n.md-typeset .retenir &gt; summary {\nbackground-color: rgb(155, 34, 18, 0.2);\nborder-color: rgb(155, 34, 18);\n}\n.md-typeset .retenir &gt; .admonition-title::before,\n.md-typeset .retenir &gt; summary::before {\nbackground-color: rgb(155, 34, 18);\n-webkit-mask-image: var(--md-admonition-icon--retenir);\nmask-image: var(--md-admonition-icon--retenir);\n}\n</code></pre> <code>aide</code> <p>Aide</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Code <p>Cr\u00e9dit: https://fabricenativel.github.io</p> <pre><code>:root {\n--md-admonition-icon--aide: url('data:image/svg+xml;charset=utf-8,&lt;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"&gt;&lt;path d=\"M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm173.696 119.559-63.399 63.399c-10.987-18.559-26.67-34.252-45.255-45.255l63.399-63.399a218.396 218.396 0 0 1 45.255 45.255zM256 352c-53.019 0-96-42.981-96-96s42.981-96 96-96 96 42.981 96 96-42.981 96-96 96zM127.559 82.304l63.399 63.399c-18.559 10.987-34.252 26.67-45.255 45.255l-63.399-63.399a218.372 218.372 0 0 1 45.255-45.255zM82.304 384.441l63.399-63.399c10.987 18.559 26.67 34.252 45.255 45.255l-63.399 63.399a218.396 218.396 0 0 1-45.255-45.255zm302.137 45.255-63.399-63.399c18.559-10.987 34.252-26.67 45.255-45.255l63.399 63.399a218.403 218.403 0 0 1-45.255 45.255z\"/&gt;&lt;/svg&gt;');\n}\n.md-typeset .admonition.aide,\n.md-typeset details.aide {\nborder-color: rgb(77, 146, 77);\n}\n.md-typeset .aide &gt; .admonition-title,\n.md-typeset .aide &gt; summary {\nbackground-color: rgba(77, 146, 77, 0.2);\nborder-color: rgb(77, 146, 77);\n}\n.md-typeset .aide &gt; .admonition-title::before,\n.md-typeset .rappel &gt; summary::before {\nbackground-color: rgb(77, 146, 77);\n-webkit-mask-image: var(--md-admonition-icon--aide);\nmask-image: var(--md-admonition-icon--aide);\n}\n</code></pre>"},{"location":"ressources/mkdocs/katex/","title":"Ajouter Katex \u00e0 MkDocs","text":""},{"location":"ressources/mkdocs/katex/#le-code","title":"Le code","text":"docs/javascripts/katex.jsmkdocs.yml docs/javascripts/katex.js<pre><code>;(() =&gt; {\n'use strict'\n// macros personnalis\u00e9es\nconst macros = {\n'\\\\RR': '\\\\mathbb{R}',\n'\\\\vect': '{\\\\begin{pmatrix}#1\\\\\\\\#2\\\\end{pmatrix}}',\n}\n// rendu katex\nfunction katexMath() {\nlet maths = document.querySelectorAll('.arithmatex'),\ntex\nfor (let i = 0; i &lt; maths.length; i++) {\ntex = maths[i].textContent || maths[i].innerText\nif (tex.startsWith('\\\\(') &amp;&amp; tex.endsWith('\\\\)')) {\nkatex.render(tex.slice(2, -2), maths[i], {\ndisplayMode: false,\nmacros,\nthrowOnError: false,\n})\n} else if (tex.startsWith('\\\\[') &amp;&amp; tex.endsWith('\\\\]')) {\nkatex.render(tex.slice(2, -2), maths[i], {\ndisplayMode: true,\nmacros,\nthrowOnError: false,\n})\n}\n}\n}\n;(() =&gt; {\nfunction onReady(fn) {\nif (document.addEventListener) {\ndocument.addEventListener('DOMContentLoaded', fn)\n} else {\ndocument.attachEvent('onreadystatechange', function () {\nif (document.readyState === 'interactive') {\nfn()\n}\n})\n}\n}\nonReady(() =&gt; {\nif (typeof katex !== 'undefined') {\nkatexMath()\n}\n})\n})()\n})()\n</code></pre> mkdocs.yml<pre><code>extra_javascript:\n- javascripts/katex.js\n- https://cdn.jsdelivr.net/npm/katex@0.16.3/dist/katex.min.js\nextra_css:\n- stylesheets/extra.css\n- https://cdn.jsdelivr.net/npm/katex@0.16.3/dist/katex.min.css\n</code></pre>"},{"location":"ressources/mkdocs/katex/#usage-et-personnalisation","title":"Usage et personnalisation","text":"<p>Ajout de macros</p> <p>On peut parfaitement ajouter des macros personnalis\u00e9es, comme avec <code>\\newcommand</code></p> katex.jsMarkdownRendu docs/javascripts/katex.js<pre><code>(function () {\n'use strict';\nconst macros = {\n\"\\\\RR\": \"\\\\mathbb{R}\",\n\"\\\\vect\": \"{\\\\begin{pmatrix}#1\\\\\\\\#2\\\\end{pmatrix}}\"\n};\n...\n</code></pre> <pre><code>Vectors in $\\RR^2$ have a shape of\n\n$$\\vect{x}{y}$$\n</code></pre> <p>Vectors in \\(\\RR^2\\) have a shape of</p> \\[\\vect{x}{y}\\]"}]}